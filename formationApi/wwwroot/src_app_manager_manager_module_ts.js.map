{"version":3,"file":"src_app_manager_manager_module_ts.js","mappings":"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","sources":["./src/app/manager/formation-detail/formation-detail.component.ts","./src/app/manager/formation-detail/formation-detail.component.html","./src/app/manager/formation/formation.component.ts","./src/app/manager/formation/formation.component.html","./src/app/manager/home/home.component.ts","./src/app/manager/home/home.component.html","./src/app/manager/manager-routing.module.ts","./src/app/manager/manager.module.ts","./src/app/manager/session/session.component.ts","./src/app/manager/session/session.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Formation } from 'src/app/core/models/formation.model';\nimport { Session, SessionStatus } from 'src/app/core/models/session.model';\nimport { FormationService } from 'src/app/core/services/formation.service';\n\n@Component({\n  selector: 'app-formation-detail',\n  templateUrl: './formation-detail.component.html',\n  styleUrls: ['./formation-detail.component.scss']\n})\nexport class FormationDetailComponent implements OnInit {\n  formation: Formation | null = null;\n  loading: boolean = false;\n  error: string | null = null;\n\n  constructor(\n    private formationService: FormationService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.loadFormation(id);\n  }\n  loadFormation(id: number): void {\n    this.loading = true;\n    this.formationService.getFormation(id).subscribe({\n      next: (formation: Formation) => {\n        this.formation = formation;\n        this.loading = false;\n        console.log(this.formation.sessions.map((session: Session) => session.status));\n        \n      },\n      error: (error) => {\n        this.error = error;\n        this.loading = false;\n\n      }\n    })\n  }\n\n  getFileIcon(type: string): string {\n    switch (type.toLowerCase()) {\n      case 'pdf':\n        return '/assets/icons/pdf.svg';\n      case 'image':\n        return 'fas fa-image';\n      case 'video':\n        return 'fas fa-video';\n      case 'document':\n        return 'fas fa-file-word';\n      default:\n        return 'fas fa-file';\n    }\n\n  }\n  getFileIconColor(type: string): string {\n    switch (type.toLowerCase()) {\n      case 'pdf':\n        return 'text-red-500';\n      case 'image':\n        return 'text-blue-500';\n      case 'video':\n        return 'text-green-500';\n      case 'document':\n        return 'text-yellow-500';\n      default:\n        return 'text-gray-500';\n    }\n  }\n\n  getStatus(session:Session): SessionStatus {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    const start = new Date(session.startDate);\n    const end = new Date(session.endDate);\n    start.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    if (today < start) {\n      return 'Pas encore'; // Not yet started\n    } else if (today > end) {\n      return 'Terminée';   // Finished\n    } else {\n      return 'En cours';   // Ongoing\n    }\n  }\n\n\n\n\n}\n","<div class=\"min-h-screen bg-gray-50 p-8 relative\">\n    <!-- Loading State -->\n    <div *ngIf=\"loading\" class=\"flex justify-center items-center h-screen\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n    </div>\n\n    <!-- Error State -->\n    <div *ngIf=\"error\" class=\"p-4 max-w-4xl mx-auto\">\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <strong class=\"font-bold\">Error!</strong>\n            <span class=\"block sm:inline\">{{ error }}</span>\n        </div>\n    </div>\n\n    <!-- Formation Data -->\n    <div *ngIf=\"formation && !loading\" class=\"max-w-4xl  space-y-8\">\n        <!-- Header -->\n        <div class=\"bg-white rounded-lg shadow-md p-6\">\n            <div class=\"flex items-center justify-between mb-4\">\n                <div class=\"flex items-center gap-2\">\n                    <span class=\"text-gray-500 font-medium text-lg\">Title: </span>\n                    <span class=\"text-xl font-extrabold text-gray-700 inline uppercase\">{{ formation.title }}</span>\n                </div>\n                <span class=\"px-4 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\">\n                    {{ formation.category }}\n                </span>\n            </div>\n            <div class=\"mb-4\">\n                <span class=\"text-gray-500 font-medium text-md\">Description: </span>\n                <p class=\"text-gray-600 text-base inline\">{{ formation.description }}</p>\n            </div>\n            <div>\n                <span class=\"text-gray-500 font-medium text-md\">Content: </span>\n                <div class=\"prose max-w-none inline text-gray-600 text-base\" [innerHTML]=\"formation.content\"></div>\n            </div>\n        </div>\n        <div class=\"space-y-6 bg-white rounded-lg shadow-md p-6\">\n            <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Training Groups</h2>\n\n            <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n                <div *ngFor=\"let group of formation.groups\"\n                    class=\"group border rounded-lg p-4 bg-secondary hover:border-blue-500 transition-colors\">\n                    {{group.name}}\n                </div>\n            </div>\n\n\n            <div *ngIf=\"formation.groups.length === 0\" class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n\n                <a\n                    class=\"group border rounded-lg p-4 bg-red-200/20 hover:border-blue-500 transition-colors cursor-none\">\n                    <div class=\"flex items-center space-x-3\">\n                        <img src=\"/assets/icons/nofile.svg\" alt=\"File Icon\" class=\"w-14\" />\n                        <div>\n                            <p class=\"font-medium text-gray-700 group-hover:text-blue-600 truncate !mb-0\">\n                                No File\n                            </p>\n                            <p class=\"text-sm text-gray-500 truncate !mb-0\">Aucun fichier attachee</p>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <!-- Sessions -->\n        <div class=\"bg-white rounded-lg shadow-md p-6\">\n            <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Training Sessions</h2>\n            <div class=\"space-y-3\">\n                <div *ngFor=\"let session of formation.sessions\" class=\"p-3 border rounded-lg hover:bg-gray-50\">\n                    <div class=\"flex justify-between items-center\">\n                        <div>\n                            <h3 class=\"font-semibold text-lg text-gray-900\">{{ session.title }}</h3>\n                            <p class=\"text-sm text-gray-600\">\n                                {{ session.startDate | date }} - {{ session.endDate | date }}\n                            </p>\n                        </div>\n                        <span [ngClass]=\"{\n                            'bg-green-100 text-green-800': session.status === 'En cours',\n                            'bg-gray-100 text-gray-800': session.status === 'Terminée',\n                            'bg-yellow-100 text-yellow-800': session.status === 'Pas encore'\n                          }\" class=\"px-3 py-1 rounded-full text-sm\">\n                            {{getStatus(session) }}\n                        </span>\n                    </div>\n                </div>\n                <div *ngIf=\"formation.sessions.length===0\" class=\"flex\">\n\n                    <a\n                        class=\"nosession-group w-full relative group border rounded-lg p-4 bg-red-200/20 transition-colors\">\n                        <div class=\"flex items-center space-x-3\">\n                            <img src=\"/assets/icons/nofile.svg\" alt=\"File Icon\" class=\"w-14\" />\n                            <div>\n                                <p class=\"font-medium text-gray-700 truncate !mb-0\">\n                                    No Session\n                                </p>\n                                <p class=\"text-sm text-gray-500 truncate !mb-0\">Aucun session attachee</p>\n                            </div>\n                        </div>\n                        <button [routerLink]=\"['../../sessions']\"\n                            class=\"bg-primary z-50 text-white rounded-full p-2 absolute w-10 h-10  hover:bg-primary-dark transition-colors\">\n                            <i class=\"fa-solid fa-plus\"></i>\n                        </button>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex flex-row gap-2 items-center\">\n            <span class=\"text-gray-600 text-lg text-bold\">Modules</span>\n            <div class=\"flex-1 bg-gray-200  h-[2px] rounded-full\"></div>\n        </div>\n        <!-- Modules -->\n        <div class=\"space-y-6\">\n            <div *ngFor=\"let module of formation.modules\" class=\"bg-white rounded-lg shadow-md p-6\">\n\n                <div class=\"flex justify-between mb-4\">\n                    <div class=\"flex items-center gap-2\">\n                        <span class=\"text-gray-500 font-medium text-md\">Title : </span>\n                        <h2 class=\"text-2xl font-bold text-gray-600 !mb-0\">{{ module.title }}</h2>\n                    </div>\n                    <span class=\"text-gray-500 font-bold text-xs\">Module {{ module.id }}</span>\n                </div>\n\n                <div class=\"flex items-center gap-2\">\n                    <span class=\"text-gray-500 font-medium text-md\">Description : </span>\n                    <p class=\"text-gray-500 text-lg font-medium !mb-0\">{{ module.description }}</p>\n\n                </div>\n                <div class=\"w-full h-[1px] bg-gray-200 rounded-full my-4\"></div>\n                <!-- Attachments -->\n                <div class=\"mt-4\">\n                    <h3 class=\"font-semibold text-lg text-gray-900 mb-3\">Resources</h3>\n                    <div *ngIf=\"module.attachments.length > 0\"\n                        class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n                        <a *ngFor=\"let attachment of module.attachments\" [href]=\"attachment.lien\" target=\"_blank\"\n                            class=\"group border rounded-lg p-4 bg-secondary hover:border-blue-500 transition-colors\">\n                            <div class=\"flex items-center space-x-3\">\n                                <img [src]=\"getFileIcon(attachment.type)\" alt=\"File Icon\" class=\"w-14\" />\n                                <div>\n                                    <p class=\"font-medium text-gray-700 group-hover:text-blue-600 truncate !mb-0\">\n                                        {{ attachment.type }} File\n                                    </p>\n                                    <p class=\"text-sm text-gray-500 truncate !mb-0\">Click to view</p>\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                    <div *ngIf=\"module.attachments.length === 0\"\n                        class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n\n                        <a\n                            class=\"group border rounded-lg p-4 bg-red-200/20 hover:border-blue-500 transition-colors cursor-none\">\n                            <div class=\"flex items-center space-x-3\">\n                                <img src=\"/assets/icons/nofile.svg\" alt=\"File Icon\" class=\"w-14\" />\n                                <div>\n                                    <p class=\"font-medium text-gray-700 group-hover:text-blue-600 truncate !mb-0\">\n                                        No File\n                                    </p>\n                                    <p class=\"text-sm text-gray-500 truncate !mb-0\">Aucun fichier attachee</p>\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, inject, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FORMATION_CATEGORIES } from 'src/app/core/constants/formation.constants';\nimport { Formation } from 'src/app/core/models/formation.model';\nimport Training from 'src/app/core/models/training';\nimport { FormationService } from 'src/app/core/services/formation.service';\nimport { SessionPopupComponent } from 'src/app/shared/components/session-popup/session-popup.component';\n\n@Component({\n  selector: 'app-formation',\n  templateUrl: './formation.component.html',\n  styleUrls: ['./formation.component.scss']\n})\nexport class FormationComponent implements OnInit {\n  handleDeleteTraining($event: number) {\n    throw new Error('Method not implemented.');\n  }\n  categories = FORMATION_CATEGORIES\n  trainings: Formation[] = [];\n\n  searchTerm: string = '';\n  isFormOpen: boolean = false;\n  currentTraining: Training | null = null;\n  filterCategory: string = '';\n  isLoading: boolean = false;\n\n  formationService = inject(FormationService)\n  dialog = inject(MatDialog)\n  constructor() { }\n\n  ngOnInit(): void {\n    this.fetchFormations();\n  }\n  handleAddSession(id: number): void {\n    const dialogRef = this.dialog.open(SessionPopupComponent, {\n      data: { formationId: id }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.fetchFormations();\n      }\n    });\n  }\n  onSearch(event: Event): void {\n    this.searchTerm = (event.target as HTMLInputElement).value;\n  }\n  get filteredTrainings(): Formation[] {\n    return this.trainings.filter(training =>\n      training.title.toLowerCase().includes(this.searchTerm.toLowerCase()) &&\n      (this.filterCategory === '' || training.category === this.filterCategory)\n    );\n  }\n  onFilterCategory(event: Event): void {\n    this.filterCategory = (event.target as HTMLSelectElement).value;\n  }\n  fetchFormations(): void {\n    this.isLoading = true;\n    this.formationService.getFormations().subscribe(formations => {\n      this.trainings = formations;\n      this.isLoading = false;\n    }, error => {\n      this.isLoading = false;\n      console.error('Erreur lors de la récupération des formations', error);\n    })\n  }\n}\n","<div class=\"animate-fade-in container mx-auto p-6\">\n    <div class=\"flex justify-between items-center mb-8\">\n        <h1 class=\"text-3xl font-bold text-gray-800\">Gestion des formations</h1>\n        <div class=\"flex gap-3\">\n            <button (click)=\"fetchFormations()\" [disabled]=\"isLoading\"\n                class=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg shadow-sm text-sm font-medium hover:bg-gray-200 transition-colors flex items-center disabled:opacity-50 disabled:cursor-not-allowed\">\n                <i *ngIf=\"!isLoading\" class=\"fa-solid fa-rotate-right mr-2\"></i>\n\n                <svg *ngIf=\"isLoading\" class=\"animate-spin h-4 w-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                    viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n                    </path>\n                </svg>\n\n                {{ isLoading ? 'Actualisation...' : 'Actualiser' }}\n            </button>\n        </div>\n\n    </div>\n\n\n    <div *ngIf=\"!isFormOpen\" class=\"space-y-6\">\n        <div class=\"flex flex-col md:flex-row space-y-3 md:space-y-0 md:space-x-4\">\n            <div class=\"relative flex-grow\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"w-5 h-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\"\n                            d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                            clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n                <input type=\"text\" placeholder=\"Rechercher une formation...\"\n                    class=\"pl-10 w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                    [(ngModel)]=\"searchTerm\" (input)=\"onSearch($event)\" />\n            </div>\n\n            <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"w-5 h-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\"\n                            d=\"M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3.586L3.293 6.707A1 1 0 013 6V3z\"\n                            clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n                <select\n                    class=\" h-full w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-gray-50 text-gray-900 pr-10\"\n                    [(ngModel)]=\"filterCategory\" (change)=\"onFilterCategory($event)\">\n                    <option value=\"\">Toutes les catégories</option>\n                    <option *ngFor=\"let category of categories\" [value]=\"category\">{{category}}</option>\n                </select>\n            </div>\n        </div>\n\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <div *ngFor=\"let training of filteredTrainings\" class=\"col-span-1\">\n                <app-training-card [training]=\"training\" (edit)=\"handleDeleteTraining($event)\"\n                    (delete)=\"handleDeleteTraining($event)\" (addSession)=\"handleAddSession($event)\"></app-training-card>\n            </div>\n        </div>\n\n        <div *ngIf=\"filteredTrainings.length === 0 && !isLoading\" class=\"text-center py-10\">\n            <p class=\"text-gray-500 text-lg\">Aucune formation ne correspond à votre recherche.</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { FormationComponent } from './formation/formation.component';\nimport { SessionComponent } from './session/session.component';\nimport { FormationDetailComponent } from './formation-detail/formation-detail.component';\n\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"formations\", component: FormationComponent },\n  { path: \"formations/:id\", component: FormationDetailComponent },\n  { path: \"sessions\", component: SessionComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManagerRoutingModule } from './manager-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { FormationComponent } from './formation/formation.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { SessionComponent } from './session/session.component';\nimport { FormationDetailComponent } from './formation-detail/formation-detail.component';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    FormationComponent,\n    SessionComponent,\n    FormationDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    ManagerRoutingModule,\n    SharedModule,\n    FormsModule\n  ]\n})\nexport class ManagerModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Session } from 'src/app/core/models/session.model';\nimport { SesssionsService } from 'src/app/core/services/sesssions.service';\nimport { SessionPopupComponent } from 'src/app/shared/components/session-popup/session-popup.component';\n\n@Component({\n  selector: 'app-session',\n  templateUrl: './session.component.html',\n  styleUrls: ['./session.component.scss']\n})\nexport class SessionComponent implements OnInit {\n  private _sessions: Session[] = [];\n  isLoading: boolean = false;\n\n  constructor(private fb: FormBuilder,\n    private sessionService: SesssionsService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.loadSessions();\n  }\n  get sessions(): Session[] {\n    return this._sessions\n      .sort((a, b) => a.startDate.getTime() - b.startDate.getTime());\n  }\n  loadSessions(): void {\n    this.isLoading = true;\n    this.sessionService.getAll().subscribe({\n      next: (sessions) => {\n        this._sessions = sessions;\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Error loading sessions:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n\n  reloadSessions(): void {\n    this.loadSessions();\n  }\n\n\n  formatDate(date: Date): string {\n    return new Intl.DateTimeFormat('fr', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    }).format(date);\n  }\n  openCreateSessionDialog(): void {\n    const dialogRef = this.dialog.open(SessionPopupComponent, {\n      width: '500px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe((result: Session) => {\n      if (result) {\n        this.sessions.push(result);\n      }\n    });\n  }\n}\n","<div class=\"animate-fade-in container mx-auto p-6\">\n    <div class=\"mb-8 flex justify-between items-center\">\n        <h1 class=\"text-3xl font-bold text-gray-800 !mb-0\">Sessions de formation</h1>\n        <div class=\"flex gap-3\">\n            <button (click)=\"reloadSessions()\" [disabled]=\"isLoading\"\n                class=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg shadow-sm text-sm font-medium hover:bg-gray-200 transition-colors flex items-center disabled:opacity-50 disabled:cursor-not-allowed\">\n                <i *ngIf=\"!isLoading\" class=\"fa-solid fa-rotate-right mr-2\"></i>\n\n                <svg *ngIf=\"isLoading\" class=\"animate-spin h-4 w-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                    viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n                    </path>\n                </svg>\n\n                {{ isLoading ? 'Actualisation...' : 'Actualiser' }}\n            </button>\n            <button (click)=\"openCreateSessionDialog()\"\n                class=\"px-4 py-2 bg-primary text-white rounded-lg shadow-sm text-sm font-medium hover:bg-primary/90 transition-colors\">\n                Ajouter une session\n            </button>\n        </div>\n    </div>\n\n    <div class=\"rounded-lg border shadow-md\">\n        <table class=\"w-full\">\n            <thead>\n                <tr class=\"bg-gray-100\">\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">ID</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Nom de la session</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Formation</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Date de début</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Date de fin</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Statut</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let session of sessions\" class=\"border-t\">\n                    <td class=\"py-4 px-6 font-medium\">{{ session.id }}</td>\n                    <td class=\"py-4 px-6\">{{ session.title }}</td>\n                    <td class=\"py-4 px-6\">{{ session.formation.title }}</td>\n                    <td class=\"py-4 px-6\">{{ formatDate(session.startDate) }}</td>\n                    <td class=\"py-4 px-6\">{{ formatDate(session.endDate) }}</td>\n                    <td class=\"py-4 px-6\">\n                        <span class=\"flex items-center\" [ngClass]=\"{\n                                'text-green-500': session.status === 'Terminée',\n                                'text-yellow-500': session.status === 'En cours',\n                                'text-gray-500': session.status === 'Pas encore'\n                            }\">\n                            <span class=\"mr-2\" *ngIf=\"session.status === 'Terminée'\">✓</span>\n                            <span class=\"mr-2\" *ngIf=\"session.status === 'En cours'\">⟳</span>\n                            <span class=\"mr-2\" *ngIf=\"session.status === 'Pas encore'\">⏰</span>\n                            {{ session.status }}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <!-- Pagination controls\n    <div class=\"flex items-center justify-end space-x-4 py-6\">\n        <button (click)=\"previousPage()\" [disabled]=\"currentPage === 0\"\n            class=\"px-3 py-1 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\">\n            <span class=\"inline-block\">&lt;</span>\n        </button>\n        <span class=\"text-sm font-medium text-gray-700\">\n            Page {{ currentPage + 1 }} sur {{ pageCount }}\n        </span>\n        <button (click)=\"nextPage()\" [disabled]=\"currentPage >= pageCount - 1\"\n            class=\"px-3 py-1 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\">\n            <span class=\"inline-block\">&gt;</span>\n        </button>\n    </div> -->\n</div>"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}