{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/constants/roles.constants.ts","./src/app/core/guards/role.guard.ts","./src/app/core/interceptors/jwt.interceptor.ts","./src/app/core/models/quiz.model.ts","./src/app/core/services/auth.service.ts","./src/app/core/services/formation.service.ts","./src/app/core/services/group.service.ts","./src/app/core/services/notification.service.ts","./src/app/core/services/quiz.service.ts","./src/app/core/services/sesssions.service.ts","./src/app/layout/admin-layout/admin-layout.component.ts","./src/app/layout/admin-layout/admin-layout.component.html","./src/app/layout/auth-layout/auth-layout.component.ts","./src/app/layout/auth-layout/auth-layout.component.html","./src/app/layout/employee-layout/employee-layout.component.ts","./src/app/layout/employee-layout/employee-layout.component.html","./src/app/layout/error-layout/error-layout.component.ts","./src/app/layout/error-layout/error-layout.component.html","./src/app/layout/layout.module.ts","./src/app/layout/main-layout/main-layout.component.ts","./src/app/layout/main-layout/main-layout.component.html","./src/app/layout/manager-layout/manager-layout.component.ts","./src/app/layout/manager-layout/manager-layout.component.html","./src/app/layout/team-leader-layout/team-leader-layout.component.ts","./src/app/layout/team-leader-layout/team-leader-layout.component.html","./src/app/shared/app-sidebar/app-sidebar.component.ts","./src/app/shared/app-sidebar/app-sidebar.component.html","./src/app/shared/components/create-group-dialog/create-group-dialog.component.ts","./src/app/shared/components/create-group-dialog/create-group-dialog.component.html","./src/app/shared/components/create-user-dialog/create-user-dialog.component.ts","./src/app/shared/components/create-user-dialog/create-user-dialog.component.html","./src/app/shared/components/select-group-popup/select-group-popup.component.ts","./src/app/shared/components/select-group-popup/select-group-popup.component.html","./src/app/shared/components/select-quiz/select-quiz.component.ts","./src/app/shared/components/select-quiz/select-quiz.component.html","./src/app/shared/components/session-popup/session-popup.component.ts","./src/app/shared/components/session-popup/session-popup.component.html","./src/app/shared/quiz-results/quiz-results.component.ts","./src/app/shared/quiz-results/quiz-results.component.html","./src/app/shared/shared.module.ts","./src/app/shared/training-card/training-card.component.ts","./src/app/shared/training-card/training-card.component.html","./src/app/shared/ui/buttom/buttom.component.ts","./src/app/shared/ui/buttom/buttom.component.html","./src/app/shared/ui/input/input.component.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainLayoutComponent } from './layout/main-layout/main-layout.component';\nimport { AuthLayoutComponent } from './layout/auth-layout/auth-layout.component';\nimport { ErrorLayoutComponent } from './layout/error-layout/error-layout.component';\nimport { AdminLayoutComponent } from './layout/admin-layout/admin-layout.component';\nimport { EmployeeLayoutComponent } from './layout/employee-layout/employee-layout.component';\nimport { ManagerLayoutComponent } from './layout/manager-layout/manager-layout.component';\nimport { TeamLeaderLayoutComponent } from './layout/team-leader-layout/team-leader-layout.component';\nimport { RoleGuard } from './core/guards/role.guard';\nimport { UserRole } from './core/constants/roles.constants';\n\nconst routes: Routes = [\n  {\n    path: '', component: MainLayoutComponent, children: [\n      { path: '', redirectTo: '/', pathMatch: 'full' },\n      {\n        path: '',\n        loadChildren: () => import('./main/main.module').then(m => m.MainModule)\n      }\n    ]\n  },\n  {\n    path: '', component: AdminLayoutComponent, children: [\n      {\n\n        path: 'admin',\n        loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n\n      }\n    ],\n    canActivate: [RoleGuard],\n    data: { roles: [UserRole.Administrator] },\n\n  },\n  {\n    path: '', component: EmployeeLayoutComponent, children: [\n      {\n        path: 'condidat',\n        loadChildren: () => import('./condidat/condidat.module').then(m => m.CondidatModule)\n      }\n    ],\n    // canActivate: [RoleGuard],\n    // data: { roles: [UserRole.Employee] }\n  },\n  {\n    path: '', component: ManagerLayoutComponent, children: [\n      {\n        path: 'manager',\n        loadChildren: () => import('./manager/manager.module').then(m => m.ManagerModule)\n      }\n    ],\n    // canActivate: [RoleGuard],\n    // data: { roles: [UserRole.Manager] }\n  },\n  {\n    path: '', component: TeamLeaderLayoutComponent, children: [\n      {\n        path: 'team-leader',\n        loadChildren: () => import('./supervisor/supervisor.module').then(m => m.SupervisorModule)\n      }\n    ],\n    // canActivate: [RoleGuard],\n    // data: { roles: [UserRole.TeamLeader] }\n  },\n  {\n    path: '', component: AuthLayoutComponent, children: [\n      {\n        path: '',\n        loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)\n      }\n    ]\n  },\n  {\n    path: '', component: ErrorLayoutComponent, children: [\n\n      {\n        path: '',\n        loadChildren: () => import('./error/error.module').then(m => m.ErrorModule)\n      },\n      { path: '**', redirectTo: '404', pathMatch: 'full' },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './core/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'formationApp';\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.setcurrentUser()\n  }\n  setcurrentUser() {\n    const item = localStorage.getItem('user')\n    if (item != null) {\n      this.auth.setCurrentUser(JSON.parse(item))\n      // this.infoUser.loadUser()\n    }\n\n  }\n\n}\n","<p-toast></p-toast>   <!-- Ajout du composant Toast pour les notifications -->\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { JwtInterceptor } from './core/interceptors/jwt.interceptor';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LayoutModule } from './layout/layout.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    LayoutModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    DragDropModule,\n    ToastModule\n  ],\n  providers: [\n    MessageService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum UserRole {\n    Administrator = 'Administrator',\n    HierarchicalLeader = 'HierarchicalLeader',\n    TeamLeader = 'TeamLeader',\n    PostLeader = 'PostLeader',\n    QualityAgent = 'QualityAgent',\n    Manager = 'Manager',\n    Employee = 'Employee'\n}\n\nexport const USER_ROLES = [\n    UserRole.Administrator,\n    UserRole.HierarchicalLeader,\n    UserRole.TeamLeader,\n    UserRole.PostLeader,\n    UserRole.QualityAgent,\n    UserRole.Manager,\n    UserRole.Employee\n]; ","\nimport { Injectable } from '@angular/core';\n\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n/**\n * Garde de rôle pour protéger les routes en fonction des rôles utilisateur\n *\n * Ce garde vérifie si l'utilisateur connecté possède au moins un des rôles\n * requis pour accéder à une route spécifique. Si l'utilisateur n'est pas\n * connecté ou ne possède pas les rôles nécessaires, il sera redirigé.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  /**\n   * Constructeur du garde de rôle\n   *\n   * @param authService - Service d'authentification pour accéder à l'utilisateur courant\n   * @param router - Service de routage pour les redirections\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Méthode principale du garde qui détermine si l'accès à la route est autorisé\n   *\n   * @param route - Instantané de la route activée contenant les données de route\n   * @param state - État actuel du routeur\n   * @returns Observable<boolean> - Observable qui émet true si l'accès est autorisé, false sinon\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    // Récupération des rôles requis depuis les données de la route\n    const requiredRoles = route.data['roles'] as string[];\n\n\n    // Observation de l'utilisateur courant via le service d'authentification\n    return this.authService.currentUser$.pipe(\n      // Prend seulement la première émission puis se désabonne\n      take(1),\n      map(user => {\n        console.log('RoleGuard: User:', user, 'Required Roles:', requiredRoles); // Log de débogage\n\n        // Vérification si l'utilisateur est connecté\n        if (!user) {\n          console.log('RoleGuard: No user, redirecting to /login');\n          // Redirection vers la page de connexion si aucun utilisateur n'est connecté\n          this.router.navigate(['/login']);\n          return false;\n        }\n\n        // Vérification si l'utilisateur possède au moins un des rôles requis\n        const hasRequiredRole = requiredRoles.some(role =>\n          user.roles.includes(role)\n        );\n\n        // Redirection vers la page 403 (Accès interdit) si l'utilisateur n'a pas les rôles nécessaires\n        if (!hasRequiredRole) {\n          console.log('RoleGuard: User lacks required role, redirecting to /403');\n          this.router.navigate(['/403']);\n          return false;\n        }\n\n        // Accès autorisé si l'utilisateur a les rôles requis\n        console.log('RoleGuard: Access granted');\n        return true;\n      })\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n        const user = localStorage.getItem('user');\n        if (user) {\n            const {token} = JSON.parse(user);\n            if (token) {\n                request = request.clone({\n                    setHeaders: {\n                        Authorization: `Bearer ${token}`\n                    }\n                });\n            }\n        }\n        \n        // Pass the request to the next handler\n        return next.handle(request);\n    }\n} ","export interface Quiz {\n    id: number;\n    title: string;\n    questions: Question[];\n    createdAt: Date;\n}\n\nexport interface Question {\n    id: number;\n    quizId?: number;\n    title: string;\n    options: string[];\n    correctAnswer: number;\n    points: number;\n    answers : Answer[]\n} \n\ninterface Answer {\n  id: number;\n  text: string;\n  isCorrect: boolean;\n  questionId: number;\n  createdAt: Date;\n  updatedAt: Date | null;\n  deletedAt: Date | null;\n  enable: boolean;\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { map, ReplaySubject } from 'rxjs';\nimport { LoggedIn } from '../models/loggedIn';\nimport { Router } from '@angular/router';\nimport { NotificationService } from './notification.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSource = new ReplaySubject<LoggedIn | null>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  baseUrl = environment.baseUrl\n  constructor(\n    private http: HttpClient,\n    private route: Router,\n    private notificationService: NotificationService\n  ) {\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.currentUserSource.next(JSON.parse(user));\n    } else {\n      this.currentUserSource.next(null);\n    }\n  }\n\n  login(model: any) {\n    return this.http.post<LoggedIn>(this.baseUrl + \"/auth/login\",\n      { username: model.email, password: model.password }\n    ).pipe(\n      map((res: any) => {\n        const user = res;\n        if (user) {\n          this.setCurrentUser(user)\n          this.redirectUser(user.redirectUrl)\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: LoggedIn) {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n\n    // Initialiser les notifications après la connexion\n    this.notificationService.initNotifications(user);\n  }\n\n  redirectUser(redirectUrl: string) {\n    this.route.navigateByUrl(redirectUrl)\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    // Réinitialiser les notifications lors de la déconnexion\n    this.notificationService.resetNotifications();\n    this.route.navigateByUrl('/login');\n  }\n\n  redirectToDashboard() {\n    this.currentUser$.subscribe(\n      (user: LoggedIn | null) => {\n        if (user) {\n          this.redirectUser(user.redirectUrl);\n        }\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Formation } from '../models/formation.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormationService {\n    private apiUrl = `${environment.baseUrl}/formation`;\n\n    constructor(private http: HttpClient) { }\n\n    createFormation(formation: Formation): Observable<Formation> {\n        return this.http.post<Formation>(this.apiUrl, formation);\n    }\n\n    getFormations() {\n        return this.http.get<Formation[]>(this.apiUrl);\n    }\n\n    getFormation(id: number): Observable<Formation> {\n        return this.http.get<Formation>(`${this.apiUrl}/${id}`);\n    }\n\n    updateFormation(id: number, formation: Formation): Observable<Formation> {\n        return this.http.put<Formation>(`${this.apiUrl}/${id}`, formation);\n    }\n\n    deleteFormation(id: number): Observable<void> {\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\n    }\n\n    updateFormationContent(id: number, formationContent: any): Observable<Formation> {\n        return this.http.put<Formation>(`${this.apiUrl}/${id}/content`, formationContent);\n    }\n\n    updateFormationCategory(id: number, category: any): Observable<Formation> {\n        return this.http.put<Formation>(`${this.apiUrl}/${id}/category`, category);\n    }\n\n    updateFormationGroups(id: number, groupIds: any): Observable<Formation> {\n        return this.http.put<Formation>(`${this.apiUrl}/${id}/groups`, groupIds);\n    }\n\n    updateFormationModules(id: number, modules: any): Observable<Formation> {\n        return this.http.put<Formation>(`${this.apiUrl}/${id}/modules`, modules);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Group } from '../models/group.model';\nimport { environment } from '../../../environments/environment';\nimport { User } from '../models/user.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GroupService {\n    \n    private apiUrl = `${environment.baseUrl}/group`;\n\n    constructor(private http: HttpClient) { }\n\n    getGroups(): Observable<Group[]> {\n        return this.http.get<Group[]>(this.apiUrl);\n    }\n\n    getGroup(id: number): Observable<Group> {\n        return this.http.get<Group>(`${this.apiUrl}/${id}`);\n    }\n\n    createGroup(newGroup: Partial<Group>) {\n       return this.http.post<Group>(this.apiUrl, newGroup);\n    }\n\n    createUser(model: any) {\n        return this.http.post<User>(`${environment.baseUrl}/users/create-user`, model);\n    }\n} ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Notification } from '../models/notification.model';\nimport { LoggedIn } from '../models/loggedIn';\nimport { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  private apiUrl = `${environment.baseUrl}/notification`;\n  // Propriétés pour SignalR\n  private hubConnection?: HubConnection;\n  hubUrl = environment.hubsUrl;\n\n  private notificationSound: HTMLAudioElement;\n\n\n  // BehaviorSubject pour stocker toutes les notifications\n  private notificationsSubject = new BehaviorSubject<Notification[]>([]);\n  public notifications$ = this.notificationsSubject.asObservable();\n\n\n\n  constructor(private http: HttpClient) {\n    this.notificationSound = new Audio('assets/audio/notification-1.wav');\n  }\n  /**\n   * Charge toutes les notifications de l'utilisateur\n   * Si l'utilisateur est sur la page de notifications, les marque comme lues\n   */\n  private loadNotifications(): void {\n    this.http.get<Notification[]>(`${this.apiUrl}/user`).subscribe({\n      next: (notifications) => {\n        this.notificationsSubject.next(notifications);\n      },\n      error: (err) => {\n        console.error('Erreur lors du chargement des notifications', err);\n      }\n    });\n  }\n\n  /**\n   * Initialise les notifications pour l'utilisateur connecté\n   * À appeler après la connexion ou au chargement de l'application\n   */\n  initNotifications(user: LoggedIn): void {\n    // Réinitialiser d'abord pour éviter les doublons\n    this.resetNotifications();\n    // Puis charger les notifications\n    this.loadNotifications();\n    this.createHubConnection(user); //  creattion de pont entre application angular et application dotnet \n  }\n\n  /**\n   * Réinitialise les notifications\n   * À appeler lors de la déconnexion\n   */\n  resetNotifications(): void {\n    this.notificationsSubject.next([]);\n    this.stopHubConnection()\n  }\n\n  /**\n   * Crée et démarre la connexion au hub SignalR\n   */\n  private createHubConnection(user: LoggedIn): void {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        skipNegotiation: false,\n        // transport: signalR.HttpTransportType.WebSockets,\n        // credentials: \"omit\",\n        accessTokenFactory: () => user.token\n      })\n      .configureLogging(LogLevel.Information)\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch(error => console.log(error));\n    \n\n    // ecouter les evenements avec le nom \"ReceiveNotification\" et faire le logic necessaire\n    this.hubConnection.on('ReceiveNotification', (notification: Notification) => {\n      this.notificationsSubject.next([...this.notificationsSubject.value, notification]); // ajouter la nouvelle notification a la liste des notifications\n      this.notificationSound.play().catch(err => console.error('Erreur lors de la lecture du son:', err)); // lecture du son de notification\n    });\n  }\n\n\n  /**\n   * Arrête la connexion au hub\n   */\n  private stopHubConnection(): void {\n    if (this.hubConnection) {\n      this.hubConnection.stop()\n        .then(() => {\n          console.log('SignalR connection stopped');\n        })\n        .catch(error => {\n          console.error('Error stopping SignalR connection:', error);\n        });\n    }\n  }\n\n  /**\n   * Indique que l'utilisateur entre dans la page de notifications\n   */\n  enterNotificationsPage(): void {\n    // Charger les notifications fraîches\n    this.loadNotifications();\n  }\n\n  /**\n   * Indique que l'utilisateur quitte la page de notifications\n   * Marque automatiquement toutes les notifications comme lues\n   */\n  exitNotificationsPage(): void {\n    // Marquer toutes les notifications comme lues\n    this.markAllAsRead().subscribe();\n  }\n\n\n\n  /**\n   * Récupère toutes les notifications de l'utilisateur connecté\n   * Utilise le BehaviorSubject pour retourner les notifications en cache\n   */\n  // getUserNotifications(): Observable<Notification[]> {\n  //   // Retourne les notifications en cache\n  //   return this.notifications$;\n  // }\n\n  /**\n   * Marque toutes les notifications comme lues et met à jour le cache\n   */\n  markAllAsRead(): Observable<any> {\n    return this.http.put(`${this.apiUrl}/read-all`, {}).pipe(\n      tap(() => {\n        // Mettre à jour le cache local\n        const notifications = this.notificationsSubject.value;\n        const updatedNotifications = notifications.map(n => ({ ...n, received: true }));\n        this.notificationsSubject.next(updatedNotifications);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Quiz, Question } from '../models/quiz.model';\nimport { FormationResults, QuizAttempt } from '../models/quiz-result.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QuizService {\n    private apiUrl = `${environment.baseUrl}/quizs`;\n\n    constructor(private http: HttpClient) { }\n\n    createQuiz(quiz: Quiz): Observable<Quiz> {\n        return this.http.post<Quiz>(this.apiUrl, quiz);\n    }\n\n    getQuizzes() {\n        return this.http.get<Quiz[]>(this.apiUrl);\n    }\n\n    getQuiz(id: number): Observable<Quiz> {\n        return this.http.get<Quiz>(`${this.apiUrl}/${id}`);\n    }\n\n    getQuizzesByFormation(formationId: number): Observable<Quiz[]> {\n        return this.http.get<Quiz[]>(`${this.apiUrl}/formation/${formationId}`);\n    }\n\n    updateQuiz(id: number, quiz: Quiz): Observable<Quiz> {\n        return this.http.put<Quiz>(`${this.apiUrl}/${id}`, quiz);\n    }\n\n    deleteQuiz(id: number): Observable<void> {\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\n    }\n\n    submitQuizAnswer(quizId: number, sessionId: number, answers: { questionId: number, selectedAnswerId: number }[]): Observable<{ score: number, passed: boolean }> {\n        return this.http.post<{ score: number, passed: boolean }>(`${this.apiUrl}/${quizId}/submit`, {\n            sessionId,\n            answers\n        });\n    }\n\n    /**\n     * Récupère les tentatives de quiz pour une formation spécifique\n     * @param formationId ID de la formation\n     * @returns Observable avec les résultats de la formation\n     */\n    getQuizAttemptsByFormation(formationId: number): Observable<FormationResults> {\n        return this.http.get<FormationResults>(`${environment.baseUrl}/quizresults/formation/${formationId}`);\n    }\n\n    /**\n     * Récupère les tentatives de quiz pour une session spécifique\n     * @param sessionId ID de la session\n     * @returns Observable avec les tentatives de quiz\n     */\n    getQuizAttemptsBySession(sessionId: number): Observable<QuizAttempt[]> {\n        return this.http.get<QuizAttempt[]>(`${environment.baseUrl}/quizresults/session/${sessionId}`);\n    }\n\n    /**\n     * Récupère une tentative de quiz spécifique\n     * @param attemptId ID de la tentative\n     * @returns Observable avec la tentative de quiz\n     */\n    getQuizAttempt(attemptId: number): Observable<QuizAttempt> {\n        return this.http.get<QuizAttempt>(`${environment.baseUrl}/quizresults/attempt/${attemptId}`);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Session } from '../models/session.model';\nimport { environment } from '../../../environments/environment';\n\nexport type SessionStatus = 'Terminée' | 'En cours' | 'Pas encore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SesssionsService {\n  private apiUrl = `${environment.baseUrl}/session`;\n\n  constructor(private http: HttpClient) { }\n\n  // Create a new session\n  getAll() {\n    return this.http.get<Session[]>(this.apiUrl).pipe(\n      map(sessions => sessions.map(session => ({\n        ...session,\n        startDate: new Date(session.startDate),\n        endDate: new Date(session.endDate),\n        status: this.getSessionStatus(session)\n      })))\n    );\n  }\n\n  createSession(model: any) {\n    return this.http.post<Session>(this.apiUrl, model).pipe(\n      map(session => ({\n        ...session,\n        startDate: new Date(session.startDate),\n        endDate: new Date(session.endDate),\n        status: this.getSessionStatus(session)\n      }))\n    );\n  }\n\n  updateSession(model: any) {\n    return this.http.put<Session>(`${this.apiUrl}/${model.id}`, model).pipe(\n      map(session => ({\n        ...session,\n        startDate: new Date(session.startDate),\n        endDate: new Date(session.endDate),\n        status: this.getSessionStatus(session)\n      }))\n    );\n  }\n\n  deleteSession(sessionId: number) {\n    return this.http.delete<void>(`${this.apiUrl}/${sessionId}`);\n  }\n\n  getSessionStatus(session: Session): SessionStatus {\n    const now = new Date();\n    const startDate = new Date(session.startDate);\n    const endDate = new Date(session.endDate);\n\n    if (now > endDate) {\n      return 'Terminée';\n    } else if (now < startDate) {\n      return 'Pas encore';\n    } else {\n      return 'En cours';\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from 'src/app/shared/app-sidebar/app-sidebar.component';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n  sidebarMenuItems: MenuItem[] = [\n    { path: '/admin', name: 'Tableau de bord', icon: 'fas fa-chart-bar' },\n    { path: '/admin/formations', name: 'Formations', icon: 'fas fa-graduation-cap' },\n    { path: '/admin/employees', name: 'Employés', icon: 'fas fa-users' },\n    { path: '/admin/quizs', name: 'Quizs', icon: 'fas fa-question' },\n    { path: '/admin/sessions', name: 'Sessions', icon: 'fas fa-calendar' },\n    { path: '/admin/settings', name: 'Paramètres', icon: 'fas fa-cog' },\n    // { path: \"/admin/test\", name: \"Tests\", icon: \"fas fa-cog\" },\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSidebarToggle(isOpen: boolean): void {\n    console.log('Sidebar toggled:', isOpen);\n  }\n\n}\n","<div class=\"min-h-screen min-w-full flex flex-row\">\n    <app-sidebar [menuItems]=\"sidebarMenuItems\" (sidebarToggled)=\"onSidebarToggle($event)\"></app-sidebar>\n    <div class=\"flex-1 max-h-screen overflow-y-auto\">\n        <router-outlet></router-outlet>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"min-h-screen min-w-full\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from 'src/app/shared/app-sidebar/app-sidebar.component';\n\n@Component({\n  selector: 'app-employee-layout',\n  templateUrl: './employee-layout.component.html',\n  styleUrls: ['./employee-layout.component.scss']\n})\nexport class EmployeeLayoutComponent implements OnInit {\n  sidebarMenuItems: MenuItem[] = [\n    { path: '/condidat', name: 'Tableau de bord', icon: 'fas fa-chart-bar' },\n    { path: '/condidat/formations', name: 'Formations', icon: 'fas fa-graduation-cap' },\n    { path: '/condidat/certification', name: 'Certifications', icon: 'fas fa-certificate' },\n    { path: '/condidat/notifications', name: 'Notifications', icon: 'fas fa-bell' },\n    // { path: '/admin/employees', name: 'Employés', icon: 'fas fa-users' },\n    // { path: '/admin/quizs', name: 'Quizs', icon: 'fas fa-question' },\n    // { path: '/admin/sessions', name: 'Sessions', icon: 'fas fa-calendar' },\n    // { path: '/admin/settings', name: 'Paramètres', icon: 'fas fa-cog' },\n    // { path: \"/admin/test\", name: \"Tests\", icon: \"fas fa-cog\" },\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSidebarToggle(isOpen: boolean): void {\n    console.log('Sidebar toggled:', isOpen);\n  }\n}\n","<div class=\"min-h-screen min-w-full flex flex-row\">\n    <app-sidebar [menuItems]=\"sidebarMenuItems\" (sidebarToggled)=\"onSidebarToggle($event)\"></app-sidebar>\n    <div class=\"flex-1 max-h-screen overflow-y-auto\">\n        <router-outlet></router-outlet>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-layout',\n  templateUrl: './error-layout.component.html',\n  styleUrls: ['./error-layout.component.scss']\n})\nexport class ErrorLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"h-screen min-w-full\">\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { ErrorLayoutComponent } from './error-layout/error-layout.component';\nimport { AuthLayoutComponent } from './auth-layout/auth-layout.component';\nimport { RouterModule } from '@angular/router';\nimport { AdminLayoutComponent } from './admin-layout/admin-layout.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { EmployeeLayoutComponent } from './employee-layout/employee-layout.component';\nimport { ManagerLayoutComponent } from './manager-layout/manager-layout.component';\nimport { TeamLeaderLayoutComponent } from './team-leader-layout/team-leader-layout.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    MainLayoutComponent,\n    ErrorLayoutComponent,\n    AuthLayoutComponent,\n    AdminLayoutComponent,\n    EmployeeLayoutComponent,\n    ManagerLayoutComponent,\n    TeamLeaderLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule\n  ]\n})\nexport class LayoutModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"min-h-screen min-w-full\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from 'src/app/shared/app-sidebar/app-sidebar.component';\n\n@Component({\n  selector: 'app-manager-layout',\n  templateUrl: './manager-layout.component.html',\n  styleUrls: ['./manager-layout.component.scss']\n})\nexport class ManagerLayoutComponent implements OnInit {\n  sidebarMenuItems: MenuItem[] = [\n    { path: '/manager', name: 'Tableau de bord', icon: 'fas fa-chart-bar' },\n    { path: '/manager/formations', name: 'Formations', icon: 'fas fa-graduation-cap' },\n    // { path: '/admin/employees', name: 'Employés', icon: 'fas fa-users' },\n    // { path: '/admin/quizs', name: 'Quizs', icon: 'fas fa-question' },\n    { path: '/manager/sessions', name: 'Sessions', icon: 'fas fa-calendar' },\n    { path: '/manager/settings', name: 'Paramètres', icon: 'fas fa-cog' },\n    // { path: \"/admin/test\", name: \"Tests\", icon: \"fas fa-cog\" },\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSidebarToggle(isOpen: boolean): void {\n    console.log('Sidebar toggled:', isOpen);\n  }\n\n}\n","<div class=\"min-h-screen min-w-full flex flex-row\">\n    <app-sidebar [menuItems]=\"sidebarMenuItems\" (sidebarToggled)=\"onSidebarToggle($event)\"></app-sidebar>\n    <div class=\"flex-1 max-h-screen overflow-y-auto\">\n        <router-outlet></router-outlet>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from 'src/app/shared/app-sidebar/app-sidebar.component';\n\n@Component({\n  selector: 'app-team-leader-layout',\n  templateUrl: './team-leader-layout.component.html',\n  styleUrls: ['./team-leader-layout.component.scss']\n})\nexport class TeamLeaderLayoutComponent implements OnInit {\n  sidebarMenuItems: MenuItem[] = [\n    { path: '/admin', name: 'Tableau de bord', icon: 'fas fa-chart-bar' },\n    { path: '/admin/formations', name: 'Formations', icon: 'fas fa-graduation-cap' },\n    { path: '/admin/employees', name: 'Employés', icon: 'fas fa-users' },\n    { path: '/admin/quizs', name: 'Quizs', icon: 'fas fa-question' },\n    { path: '/admin/sessions', name: 'Sessions', icon: 'fas fa-calendar' },\n    { path: '/admin/settings', name: 'Paramètres', icon: 'fas fa-cog' },\n    // { path: \"/admin/test\", name: \"Tests\", icon: \"fas fa-cog\" },\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSidebarToggle(isOpen: boolean): void {\n    console.log('Sidebar toggled:', isOpen);\n  }\n\n}\n","<div class=\"min-h-screen min-w-full flex flex-row\">\n    <app-sidebar [menuItems]=\"sidebarMenuItems\" (sidebarToggled)=\"onSidebarToggle($event)\"></app-sidebar>\n    <div class=\"flex-1 max-h-screen overflow-y-auto\">\n        <router-outlet></router-outlet>\n    </div>\n\n</div>","import { Component, EventEmitter, inject, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription, filter } from 'rxjs';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { NotificationService } from 'src/app/core/services/notification.service';\n\nexport interface MenuItem {\n  path: string;\n  name: string;\n  icon: string;\n  badge?: number; // Nombre à afficher dans le badge\n}\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './app-sidebar.component.html',\n  styleUrls: ['./app-sidebar.component.scss']\n})\nexport class AppSidebarComponent implements OnInit, OnDestroy {\n  @Input() menuItems: MenuItem[] = [];\n  @Output() sidebarToggled = new EventEmitter<boolean>();\n  auth = inject(AuthService);\n  notificationService = inject(NotificationService);\n  showPopup: boolean = false;\n  isOpen: boolean = false;\n\n  private subscription: Subscription = new Subscription();\n\n  popupMenuItems = [\n    { name: 'Settings', icon: 'fas fa-cog' },\n    { name: 'Get Help', icon: 'fas fa-question-circle' },\n    { name: 'Search', icon: 'fas fa-search' },\n    { name: 'Account', icon: 'fas fa-user' },\n    { name: 'Billing', icon: 'fas fa-credit-card' },\n    { name: 'Notifications', icon: 'fas fa-bell' },\n    { name: 'Log out', icon: 'fas fa-sign-out-alt', action: () => { this.auth.logout() } },\n  ];\n  constructor(private router: Router) {\n    // Subscribe to route changes to update active state (optional)\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      this.showPopup = false;\n    });\n  }\n\n  ngOnInit(): void {\n    // S'abonner au nombre de notifications non lues\n    this.subscription.add(\n      this.notificationService.notifications$.subscribe(notifications => {\n        // Mettre à jour le badge de notifications dans le menu\n        const notificationMenuItem = this.menuItems.find(item => item.path.includes('/notifications'));\n        if (notificationMenuItem) {\n          notificationMenuItem.badge = notifications.filter(n => !n.received).length;;\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    // Se désabonner pour éviter les fuites de mémoire\n    this.subscription.unsubscribe();\n  }\n\n  toggleSidebar(): void {\n    this.isOpen = !this.isOpen;\n    this.sidebarToggled.emit(this.isOpen); // Emit the new state\n  }\n  togglePopup(): void {\n    this.showPopup = !this.showPopup;\n  }\n  handlePopupAction(item: any): void {\n    if (item.action) {\n      item.action();\n    }\n    this.showPopup = false; // Close popup after action\n  }\n}\n","<!-- Mobile menu button -->\n<button class=\"md:hidden fixed top-4 left-4 z-50 p-2 rounded-md bg-primary text-white\" (click)=\"toggleSidebar()\"\n    aria-label=\"Toggle menu\">\n    <i [ngClass]=\"isOpen ? 'fas fa-times' : 'fas fa-bars'\" style=\"font-size: 20px;\"></i>\n</button>\n\n<!-- Sidebar backdrop for mobile -->\n<div *ngIf=\"isOpen\" class=\"md:hidden fixed inset-0 bg-black bg-opacity-50 z-40\" (click)=\"toggleSidebar()\"></div>\n\n<!-- Sidebar -->\n<aside class=\"h-full z-40 w-64 bg-sidebar transform transition-transform duration-300 ease-in-out\n      {{ isOpen ? 'translate-x-0' : '-translate-x-full' }} md:translate-x-0 flex flex-col shadow-lg\">\n    <div class=\"p-4 border-b border-sidebar-border\">\n        <div class=\"flex items-center\" routerLink=\"/\">\n            <div class=\"!h-10 !w-10 bg-white rounded-md flex items-center justify-center mr-3 \">\n                <i class=\"fas fa-graduation-cap text-sidebar-primary\" style=\"font-size: 24px;\"></i>\n            </div>\n            <div>\n                <h1 class=\"text-xl font-bold text-white !m-0\">Formation</h1>\n                <p class=\"text-xs text-white text-opacity-80 !m-0\">SUMITOMO Formation</p>\n            </div>\n        </div>\n    </div>\n\n    <nav class=\"flex-1 overflow-y-auto py-4\">\n        <ul class=\"space-y-1 px-2\">\n            <li *ngFor=\"let item of menuItems\">\n                <a [routerLink]=\"item.path\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\"\n                    class=\"sidebar-item flex items-center p-2 rounded-md text-white hover:bg-white/10 relative\">\n                    <i [ngClass]=\"item.icon\" style=\"font-size: 20px;\" class=\"w-8 h-8 text-center\"></i>\n                    <span>{{ item.name }}</span>\n                    <!-- Badge de notification -->\n                    <span *ngIf=\"item.badge && item.badge > 0\"\n                        class=\"notification-badge bg-red-500 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center\">\n                        {{ item.badge > 99 ? '99+' : item.badge }}\n                    </span>\n                </a>\n            </li>\n        </ul>\n    </nav>\n\n    <!-- User Profile Section -->\n    <div *ngIf=\"(auth.currentUser$ |async ) as user\" class=\"p-4 border-t border-sidebar-border cursor-pointer\"\n        (click)=\"togglePopup()\">\n        <div class=\"flex items-center\">\n            <div class=\"h-10 w-10 rounded-full bg-white flex items-center justify-center mr-3\">\n                <div *ngIf=\"user.imageUrl;else noImage\">\n                    <img [src]=\"user.imageUrl\" class=\"h-10 w-10 rounded-full\" alt=\"\">\n                </div>\n                <ng-template #noImage>\n                    <span class=\"text-sidebar-primary font-medium\">{{user.username.slice(0, 2)}}</span>\n                </ng-template>\n\n            </div>\n            <div class=\"text-sm\">\n                <p class=\"text-white font-medium !mb-0\">{{user.username}}</p>\n                <p class=\"text-white text-opacity-70 text-xs !mb-0\">{{user.email}}</p>\n            </div>\n        </div>\n    </div>\n\n    <!-- Popup Menu -->\n    <div *ngIf=\"showPopup\"\n        class=\"absolute z-50 bottom-4 right-[-180px] bg-white dark:bg-gray-900 rounded-md shadow-md p-2 w-56 border border-gray-200 dark:border-gray-800\"\n        (click)=\"$event.stopPropagation()\">\n        <div class=\"px-2 py-1.5 text-sm font-medium text-gray-500 dark:text-gray-400\">\n            Account\n        </div>\n        <ul class=\"space-y-1 w-full !pl-0\">\n            <li *ngFor=\"let item of popupMenuItems\"\n                class=\"w-full flex px-2 py-1.5 text-sm rounded-sm hover:bg-gray-100 dark:hover:bg-gray-800 cursor-pointer\"\n                (click)=\"handlePopupAction(item)\">\n                <i [ngClass]=\"item.icon\" class=\"mr-2 h-4 w-4 text-gray-500 dark:text-gray-400\"></i>\n                <span class=\"text-gray-700 dark:text-gray-300\">{{ item.name }}</span>\n            </li>\n        </ul>\n        <div class=\"h-px my-1 bg-gray-200 dark:bg-gray-800\"></div>\n        <div class=\"px-2 py-1.5 text-sm text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-sm cursor-pointer\"\n            (click)=\"auth.logout()\">\n            <i class=\"fas fa-sign-out-alt mr-2 h-4 w-4\"></i>\n            <span>Logout</span>\n        </div>\n    </div>\n</aside>","import { Component, Inject, OnInit, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Group } from '../../../core/models/group.model';\nimport { GroupService } from 'src/app/core/services/group.service';\n\n\n@Component({\n    selector: 'app-create-group-dialog',\n    templateUrl: './create-group-dialog.component.html',\n    styleUrls: ['./create-group-dialog.component.scss']\n})\nexport class CreateGroupDialogComponent implements OnInit {\n    form!: FormGroup;\n    private groupService = inject(GroupService);\n    isLoading = false;\n    constructor(\n        private dialogRef: MatDialogRef<CreateGroupDialogComponent>,\n        private fb: FormBuilder,\n        @Inject(MAT_DIALOG_DATA) public data: { group?: Partial<Group> }\n    ) {\n\n    }\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            name: ['', Validators.required],\n        });\n    }\n\n    onSubmit(): void {\n        console.log(this.form.value, this.form.valid);\n        if (this.form.valid) {\n            this.isLoading = true;\n            this.groupService.createGroup(this.form.value).subscribe({\n                next: (group) => {\n                    this.dialogRef.close(group);\n                },\n                error: (error) => {\n                    console.error(error);\n                },\n                complete: () => {\n                    this.isLoading = false;\n                }\n            });\n        }\n    }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n} ","<div class=\"bg-white rounded-lg shadow-xl max-w-4xl w-full mx-auto\">\n    <!-- Header -->\n    <div class=\"px-8 py-5 border-b border-gray-200\">\n        <div class=\"flex items-center justify-between\">\n            <h2 class=\"text-2xl font-semibold text-gray-900\">Create New Group</h2>\n            <button (click)=\"onCancel()\" class=\"text-gray-400 hover:text-gray-500 transition-colors\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n    </div>\n\n    <!-- Form Content -->\n    <div class=\"p-8\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <!-- Group Name -->\n            <div class=\"space-y-8\">\n                <div class=\"grid grid-cols-1 gap-6\">\n                    <div>\n                        <label for=\"name\" class=\"block text-base font-medium text-gray-700 mb-2\">Group Name</label>\n                        <div class=\"mt-1\">\n                            <input type=\"text\" id=\"name\" formControlName=\"name\"\n                                class=\"block w-full px-4 py-3 text-base border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-primary focus:border-primary text-black\"\n                                [ngClass]=\"{'border-red-300 focus:ring-red-500 focus:border-red-500': form.get('name')?.invalid && form.get('name')?.touched}\"\n                                placeholder=\"Enter group name\">\n                            <div *ngIf=\"form.get('name')?.invalid && form.get('name')?.touched\"\n                                class=\"mt-2 text-sm text-red-600\">\n                                This field is required\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Actions -->\n            <div class=\"mt-8 flex justify-end space-x-4\">\n                <button type=\"button\" (click)=\"onCancel()\"\n                    class=\"inline-flex justify-center px-6 py-3 text-base font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n                    Cancel\n                </button>\n                <button type=\"submit\" [disabled]=\"!form.valid || isLoading\"\n                    class=\"inline-flex justify-center px-6 py-3 text-base font-medium text-white bg-primary border border-transparent rounded-md shadow-sm hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary disabled:opacity-50 disabled:cursor-not-allowed\">\n                    <svg *ngIf=\"isLoading\" class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                        xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\">\n                        </circle>\n                        <path class=\"opacity-75\" fill=\"currentColor\"\n                            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n                        </path>\n                    </svg>\n                    {{ isLoading ? 'Creating...' : 'Create Group' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Group } from '../../../core/models/group.model';\nimport { User } from '../../../core/models/user.model';\nimport { UserRole, USER_ROLES } from '../../../core/constants/roles.constants';\nimport { GroupService } from 'src/app/core/services/group.service';\n\n@Component({\n    selector: 'app-create-user-dialog',\n    templateUrl: './create-user-dialog.component.html',\n    styleUrls: ['./create-user-dialog.component.scss']\n})\nexport class CreateUserDialogComponent implements OnInit {\n    form!: FormGroup;\n    isLoading = false;\n    roles = USER_ROLES;\n    UserRole = UserRole;\n    constructor(\n        private dialogRef: MatDialogRef<CreateUserDialogComponent>,\n        private fb: FormBuilder,\n        private groupService: GroupService,\n        @Inject(MAT_DIALOG_DATA) public data: { selectedGroup: Group }\n    ) { }\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            userName: ['', [Validators.required, Validators.minLength(3)]],\n            email: ['', [Validators.required, Validators.email]],\n            role: ['', Validators.required],\n            groupId: [this.data.selectedGroup?.id, Validators.required]\n        });\n    }\n\n    onSubmit(): void {\n        if (this.form.valid) {\n            this.isLoading = true;\n            const formValue = this.form.value;\n            const newUser = {\n                username: formValue.userName,\n                email: formValue.email,\n                role: formValue.role,\n                groupId: this.data.selectedGroup.id\n            };\n            this.groupService.createUser(newUser).subscribe({\n                next: (user) => {\n                    this.isLoading = false;\n                    this.dialogRef.close(user);\n                },\n                error: (error) => {\n                    this.isLoading = false;\n                    console.error('Error creating user:', error);\n                }\n            }\n\n            );\n        }\n    }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n\n    getErrorMessage(field: string): string {\n        const control = this.form.get(field);\n        if (!control?.errors) return '';\n\n        const errors = control.errors;\n        if (errors['required']) return 'This field is required';\n        if (errors['email']) return 'Invalid email address';\n        if (errors['minlength']) return `Minimum length is ${errors['minlength'].requiredLength} characters`;\n\n        return 'Invalid value';\n    }\n} ","<div class=\"bg-white rounded-lg shadow-xl max-w-4xl w-full mx-auto\">\n    <!-- Header -->\n    <div class=\"px-8 py-5 border-b border-gray-200\">\n        <div class=\"flex items-center justify-between\">\n            <h2 class=\"text-2xl font-semibold text-gray-900\">Create New User</h2>\n            <button (click)=\"onCancel()\" class=\"text-gray-400 hover:text-gray-500 transition-colors\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n            </button>\n        </div>\n    </div>\n\n    <!-- Form Content -->\n    <div class=\"p-8\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"space-y-6\">\n                <!-- Username -->\n                <div>\n                    <label for=\"userName\" class=\"block text-base font-medium text-gray-700 mb-2\">Username</label>\n                    <div class=\"mt-1\">\n                        <input type=\"text\" id=\"userName\" formControlName=\"userName\"\n                            class=\"block w-full px-4 py-3 text-base border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-primary focus:border-primary text-black\"\n                            [ngClass]=\"{'border-red-300 focus:ring-red-500 focus:border-red-500': form.get('userName')?.invalid && form.get('userName')?.touched}\"\n                            placeholder=\"Enter username\">\n                        <div *ngIf=\"form.get('userName')?.invalid && form.get('userName')?.touched\"\n                            class=\"mt-2 text-sm text-red-600\">\n                            {{ getErrorMessage('userName') }}\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Email -->\n                <div>\n                    <label for=\"email\" class=\"block text-base font-medium text-gray-700 mb-2\">Email</label>\n                    <div class=\"mt-1\">\n                        <input type=\"email\" id=\"email\" formControlName=\"email\"\n                            class=\"block w-full px-4 py-3 text-base border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-primary focus:border-primary text-black\"\n                            [ngClass]=\"{'border-red-300 focus:ring-red-500 focus:border-red-500': form.get('email')?.invalid && form.get('email')?.touched}\"\n                            placeholder=\"Enter email\">\n                        <div *ngIf=\"form.get('email')?.invalid && form.get('email')?.touched\"\n                            class=\"mt-2 text-sm text-red-600\">\n                            {{ getErrorMessage('email') }}\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Role -->\n                <div>\n                    <label class=\"block text-base font-medium text-gray-700 mb-2\">Role</label>\n                    <div class=\"mt-1 space-y-2\">\n                        <div class=\"grid grid-cols-2 gap-4\">\n                            <div *ngFor=\"let roleOption of roles\" class=\"flex items-center\">\n                                <input type=\"radio\" [value]=\"roleOption\" formControlName=\"role\"\n                                    [id]=\"'role-' + roleOption\"\n                                    class=\"h-4 w-4 text-primary border-gray-300 focus:ring-primary\">\n                                <label [for]=\"'role-' + roleOption\" class=\"ml-2 text-gray-700\">\n                                    {{ roleOption }}\n                                </label>\n                            </div>\n                        </div>\n                        <div *ngIf=\"form.get('role')?.invalid && form.get('role')?.touched\"\n                            class=\"mt-2 text-sm text-red-600\">\n                            {{ getErrorMessage('role') }}\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Selected Group -->\n                <div class=\"bg-gray-50 p-4 rounded-lg\">\n                    <div class=\"flex items-center\">\n                        <div class=\"flex-shrink-0\">\n                            <svg class=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\n                                fill=\"currentColor\">\n                                <path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n                                    clip-rule=\"evenodd\" />\n                            </svg>\n                        </div>\n                        <div class=\"ml-3\">\n                            <h3 class=\"text-sm font-medium text-gray-900\">Selected Group</h3>\n                            <p class=\"text-sm text-gray-500\">{{ data.selectedGroup.name || 'No group selected' }}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Actions -->\n            <div class=\"mt-8 flex justify-end space-x-4\">\n                <button type=\"button\" (click)=\"onCancel()\"\n                    class=\"inline-flex justify-center px-6 py-3 text-base font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n                    Cancel\n                </button>\n                <button type=\"submit\" [disabled]=\"!form.valid || isLoading\"\n                    class=\"inline-flex justify-center px-6 py-3 text-base font-medium text-white bg-primary border border-transparent rounded-md shadow-sm hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary disabled:opacity-50 disabled:cursor-not-allowed\">\n                    <svg *ngIf=\"isLoading\" class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                        xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\">\n                        </circle>\n                        <path class=\"opacity-75\" fill=\"currentColor\"\n                            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n                        </path>\n                    </svg>\n                    {{ isLoading ? 'Creating...' : 'Create User' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Group } from '../../../core/models/group.model';\nimport { GroupService } from '../../../core/services/group.service';\nexport interface GroupSelectionDialogData {\n    groups?: Group[];\n    multiSelect?: boolean;\n}\n\n\n@Component({\n    selector: 'app-select-group-popup',\n    templateUrl: './select-group-popup.component.html',\n    styleUrls: ['./select-group-popup.component.scss']\n})\nexport class SelectGroupPopupComponent implements OnInit {\n    groups: Group[] = [];\n    multiSelect = false;\n\n    selectedGroupIds: number[] = [];\n    selectedGroupId: number | null = null;\n\n    constructor(\n        private groupService: GroupService,\n        private dialogRef: MatDialogRef<SelectGroupPopupComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: GroupSelectionDialogData\n    ) { }\n\n    ngOnInit(): void {\n        this.multiSelect = this.data.multiSelect ?? false;\n\n        if (this.data.groups) {\n            this.groups = this.data.groups;\n        } else {\n            this.groupService.getGroups().subscribe((fetched) => {\n                this.groups = fetched;\n\n                console.log(this.groups, fetched);\n\n            });\n        }\n    }\n\n    isSelected(id: number): boolean {\n        return this.multiSelect ? this.selectedGroupIds.includes(id) : this.selectedGroupId === id;\n    }\n\n    toggleSelection(id: number): void {\n        if (this.multiSelect) {\n            this.selectedGroupIds = this.isSelected(id)\n                ? this.selectedGroupIds.filter(gid => gid !== id)\n                : [...this.selectedGroupIds, id];\n        } else {\n            this.selectedGroupId = id;\n        }\n    }\n\n    confirm(): void {\n        this.dialogRef.close(this.multiSelect ? this.selectedGroupIds : this.selectedGroupId);\n    }\n\n    cancel(): void {\n        this.dialogRef.close(null);\n    }\n} ","<div class=\"p-6 bg-white rounded-lg z-50\">\n    <h2 class=\"text-2xl text-gray-700 font-bold mb-4\">Select Group</h2>\n    <p class=\"text-sm text-gray-600 mb-6\">Choose {{ multiSelect ? 'groups' : 'a group' }}</p>\n\n    <div class=\"grid grid-cols-2 gap-4 max-h-96 overflow-y-auto\">\n        <div *ngIf=\"groups.length === 0\" class=\"text-center text-gray-500 col-span-2\">\n            No groups available. Please create one.\n        </div>\n\n        <div *ngFor=\"let group of groups\" class=\"flex !w-full items-center space-x-2\">\n            <input [type]=\"multiSelect ? 'checkbox' : 'radio'\" [id]=\"'group-' + group.id\"\n                [checked]=\"isSelected(group.id)\" (change)=\"toggleSelection(group.id)\"\n                [name]=\"multiSelect ? 'multi' : 'single'\" class=\"group-input\" />\n            <label [for]=\"'group-' + group.id\" class=\"cursor-pointer group-label\">\n                <div>\n                    <div class=\"font-semibold text-gray-800\">{{ group.name }}</div>\n                    <div class=\"text-xs text-gray-500\">{{ group.count }} users</div>\n                </div>\n            </label>\n        </div>\n    </div>\n\n\n    <div class=\"flex justify-end mt-6 space-x-4\">\n        <button type=\"button\" (click)=\"cancel()\"\n            class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\">\n            Cancel\n        </button>\n        <button type=\"button\" (click)=\"confirm()\"\n            [disabled]=\"multiSelect ? selectedGroupIds.length === 0 : !selectedGroupId\"\n            class=\"px-4 py-2 text-sm font-medium text-white bg-primary hover:bg-primary-dark rounded-md disabled:opacity-50\">\n            Confirm\n        </button>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Quiz } from 'src/app/core/models/quiz.model';\nimport { QuizService } from 'src/app/core/services/quiz.service';\n\n@Component({\n  selector: 'app-select-quiz',\n  templateUrl: './select-quiz.component.html',\n  styleUrls: ['./select-quiz.component.scss']\n})\nexport class SelectQuizComponent implements OnInit {\n\n  quizzes: Quiz[] = [];\n  selectedQuizId: number | null = null;\n  disabledQuizIds: number[] = [];\n  context: 'formation' | 'module';\n\n  constructor(\n    public dialogRef: MatDialogRef<SelectQuizComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      // quizzes: Quiz[],\n      disabledQuizIds: number[],\n      context: 'formation' | 'module',\n      selectedQuizId?: number\n    },\n    private quizService: QuizService\n  ) {\n    this.disabledQuizIds = data.disabledQuizIds;\n    this.context = data.context;\n    this.selectedQuizId = data.selectedQuizId || null;\n  }\n  ngOnInit(): void {\n    this.quizService.getQuizzes().subscribe((quizzes: Quiz[]) => {\n      this.quizzes = quizzes.filter(quiz => !this.disabledQuizIds.includes(quiz.id));\n    });\n  }\n\n  confirm(): void {\n    if (this.selectedQuizId) {\n      const selectedQuiz = this.quizzes.find(quiz => quiz.id === this.selectedQuizId);\n      this.dialogRef.close(selectedQuiz);\n    }\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"quiz-selection-dialog p-6 bg-white rounded-lg shadow-lg\">\n    <h2 class=\"text-2xl text-gray-600 font-bold mb-4\">Select Quiz</h2>\n    <p class=\"text-sm text-gray-600 mb-6\">Choose a quiz for {{ context === 'formation' ? 'the formation' : 'the module'\n        }}</p>\n\n    <div class=\"quiz-list \">\n        <div *ngIf=\"quizzes.length === 0\" class=\"text-center text-gray-500\">\n            No quizzes available. create a quiz to start.\n        </div>\n        <div *ngIf=\"quizzes.length > 0\"\n            class=\"text-center text-gray-500 grid grid-cols-2 gap-4 max-h-96 overflow-y-auto\">\n            <div *ngFor=\"let quiz of quizzes\" class=\"quiz-item \">\n                <input type=\"radio\" [id]=\"'quiz-' + quiz.id\" [value]=\"quiz.id\" [(ngModel)]=\"selectedQuizId\"\n                    [disabled]=\"disabledQuizIds.includes(quiz.id)\" class=\"quiz-radio\" />\n                <label [for]=\"'quiz-' + quiz.id\" class=\"quiz-label\"\n                    [ngClass]=\"{'opacity-50 cursor-not-allowed': disabledQuizIds.includes(quiz.id)}\">\n                    <div class=\"quiz-content\">\n                        <span class=\"quiz-name\">{{ quiz.title }}</span>\n                        <span class=\"quiz-description text-xs text-gray-500 mt-1\">{{ quiz.questions.length }}\n                            questions</span>\n                    </div>\n                    <div class=\"quiz-icon\">\n                        <i class=\"fas fa-check\"></i>\n                    </div>\n                </label>\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"flex justify-end mt-6 space-x-4\">\n        <button type=\"button\" (click)=\"cancel()\"\n            class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\">\n            Cancel\n        </button>\n        <button type=\"button\" (click)=\"confirm()\" [disabled]=\"!selectedQuizId\"\n            class=\"px-4 py-2 text-sm font-medium text-white bg-primary hover:bg-primary-dark rounded-md disabled:opacity-50\">\n            Confirm\n        </button>\n    </div>\n</div>","import { Component, Inject, OnInit, inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { FormationService } from '../../../core/services/formation.service';\nimport { Formation } from 'src/app/core/models/formation.model';\nimport { SesssionsService } from 'src/app/core/services/sesssions.service';\n\n\n@Component({\n    selector: 'app-session-popup',\n    templateUrl: './session-popup.component.html',\n    styleUrls: ['./session-popup.component.scss']\n})\nexport class SessionPopupComponent implements OnInit {\n    sessionForm: FormGroup;\n    formations: Formation[] = [];\n    isLoading = false;\n    formationsService = inject(FormationService)\n    sessionsService = inject(SesssionsService)\n    constructor(\n        public dialogRef: MatDialogRef<SessionPopupComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: { formationId?: number, session?: any },\n        private fb: FormBuilder\n    ) {\n        // Initialize form with default values or existing session data if provided\n        this.sessionForm = this.fb.group({\n            title: [data.session?.title || '', Validators.required],\n            startDate: [data.session?.startDate ? new Date(data.session.startDate).toISOString().split('T')[0] : '', Validators.required],\n            endDate: [data.session?.endDate ? new Date(data.session.endDate).toISOString().split('T')[0] : '', Validators.required],\n            formationId: [data.formationId?.toString() || data.session?.formationId?.toString() || '', Validators.required]\n        });\n\n        // If formationId is provided, disable the field to prevent changes\n        if (data.formationId) {\n            this.sessionForm.get('formationId')?.disable();\n        }\n    }\n\n    ngOnInit(): void {\n        // Only load formations if formationId is not provided\n        if (!this.data.formationId) {\n            this.formationsService.getFormations()\n                .subscribe({\n                    next: (formations) => {\n                        this.formations = formations;\n                    },\n                    error: (error) => {\n                        console.error('Error loading formations:', error);\n                        this.dialogRef.close();\n                    }\n                });\n        } else {\n            // If formationId is provided, just load that specific formation for display\n            this.formationsService.getFormation(this.data.formationId)\n                .subscribe({\n                    next: (formation) => {\n                        this.formations = [formation];\n                    },\n                    error: (error) => {\n                        console.error('Error loading formation:', error);\n                        this.dialogRef.close();\n                    }\n                });\n        }\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onSubmit(): void {\n        if (this.sessionForm.valid) {\n            this.isLoading = true;\n\n            // Prepare form data - include the disabled formationId\n            const formData = {\n                ...this.sessionForm.getRawValue(), // Gets all values including disabled fields\n            };\n\n            // If we have a session ID, it's an update operation\n            if (this.data.session?.id) {\n                formData.id = this.data.session.id;\n                this.sessionsService.updateSession(formData).subscribe({\n                    next: (session: any) => {\n                        this.dialogRef.close(session);\n                        this.isLoading = false;\n                    },\n                    error: (error: any) => {\n                        console.error('Error updating session:', error);\n                        this.isLoading = false;\n                        this.dialogRef.close();\n                    }\n                });\n            } else {\n                // Otherwise it's a create operation\n                this.sessionsService.createSession(formData).subscribe({\n                    next: (session: any) => {\n                        this.dialogRef.close(session);\n                        this.isLoading = false;\n                    },\n                    error: (error: any) => {\n                        console.error('Error creating session:', error);\n                        this.isLoading = false;\n                        this.dialogRef.close();\n                    }\n                });\n            }\n        }\n    }\n}","<div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n    <div class=\"bg-white rounded-lg p-6 w-full max-w-md\">\n        <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">\n            {{ data.session?.id ? 'Modifier la session' : 'Créer une nouvelle session' }}\n        </h2>\n\n        <form [formGroup]=\"sessionForm\" class=\"space-y-4\">\n            <div class=\"space-y-2\">\n                <label class=\"block text-sm font-medium text-gray-700\">Title</label>\n                <input type=\"text\" formControlName=\"title\" required\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 text-gray-900 placeholder-gray-400\">\n                <div *ngIf=\"sessionForm.get('title')?.invalid && sessionForm.get('title')?.touched\"\n                    class=\"text-red-500 text-sm\">\n                    Title is required\n                </div>\n            </div>\n\n            <div class=\"space-y-2\">\n                <label class=\"block text-sm font-medium text-gray-700\">Formation</label>\n                <div class=\"relative\">\n                    <select formControlName=\"formationId\" required\n                        class=\"block w-full px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary text-gray-700 text-sm appearance-none\">\n                        <option value=\"\" disabled selected class=\"text-gray-400\">Select a formation</option>\n                        <option *ngFor=\"let formation of formations\" [value]=\"formation.id\" class=\"text-gray-900\">\n                            {{ formation.title }}\n                        </option>\n                    </select>\n\n                    <!-- Arrow Icon -->\n                    <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3\">\n                        <svg class=\"h-4 w-4 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                        </svg>\n                    </div>\n                </div>\n                <div *ngIf=\"sessionForm.get('formationId')?.invalid && sessionForm.get('formationId')?.touched\"\n                    class=\"text-red-500 text-sm\">\n                    Formation is required\n                </div>\n            </div>\n\n            <div class=\"grid grid-cols-2 gap-4\">\n                <div class=\"space-y-2\">\n                    <label class=\"block text-sm font-medium text-gray-700\">Start Date</label>\n                    <input type=\"date\" formControlName=\"startDate\" required\n                        class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 text-gray-900\">\n                    <div *ngIf=\"sessionForm.get('startDate')?.invalid && sessionForm.get('startDate')?.touched\"\n                        class=\"text-red-500 text-sm\">\n                        Start date is required\n                    </div>\n                </div>\n\n                <div class=\"space-y-2\">\n                    <label class=\"block text-sm font-medium text-gray-700\">End Date</label>\n                    <input type=\"date\" formControlName=\"endDate\" required\n                        class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 text-gray-900\">\n                    <div *ngIf=\"sessionForm.get('endDate')?.invalid && sessionForm.get('endDate')?.touched\"\n                        class=\"text-red-500 text-sm\">\n                        End date is required\n                    </div>\n                </div>\n            </div>\n        </form>\n\n        <div class=\"flex justify-end space-x-3 mt-6\">\n            <button (click)=\"onNoClick()\"\n                class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n                Cancel\n            </button>\n            <button (click)=\"onSubmit()\" [disabled]=\"sessionForm.invalid || isLoading\"\n                class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-blue-500 disabled:cursor-not-allowed\">\n                <span *ngIf=\"isLoading\">\n                    <i class=\"fa-solid fa-spinner animate-spin mr-1\"></i>\n                    Chargement...\n                </span>\n                <span *ngIf=\"!isLoading\">\n                    {{ data.session?.id ? 'Mettre à jour' : 'Créer la session' }}\n                </span>\n            </button>\n        </div>\n    </div>\n</div>","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormationResults, QuizAttempt } from 'src/app/core/models/quiz-result.model';\nimport { QuizService } from 'src/app/core/services/quiz.service';\nimport html2pdf from 'html2pdf.js';\n\n@Component({\n  selector: 'app-quiz-results',\n  templateUrl: './quiz-results.component.html',\n  styleUrls: ['./quiz-results.component.scss']\n})\nexport class QuizResultsComponent implements OnInit {\n  @Input() formationId!: number;\n  @ViewChild('pdfContent') pdfContent!: ElementRef;\n\n  formationResults!: FormationResults;\n  loading = false;\n  error: string | null = null;\n  sortField: string = 'score';\n  sortDirection: 'asc' | 'desc' = 'desc';\n  today = new Date();\n  generatingPdf = false;\n\n  // Filtres\n  showOnlyPassed = false;\n  searchTerm = '';\n\n  constructor(private quizService: QuizService) { }\n\n  ngOnInit(): void {\n    if (this.formationId) {\n      this.loadResults();\n    }\n  }\n\n  loadResults(): void {\n    this.loading = true;\n    this.quizService.getQuizAttemptsByFormation(this.formationId).subscribe({\n      next: (results) => {\n        this.formationResults = results;\n        this.loading = false;\n      },\n      error: (err) => {\n        console.error('Erreur lors du chargement des résultats:', err);\n        this.error = 'Impossible de charger les résultats. Veuillez réessayer plus tard.';\n        this.loading = false;\n      }\n    });\n  }\n\n  /**\n   * Trie les tentatives de quiz selon le champ spécifié\n   * @param field Champ à trier\n   */\n  sortBy(field: string): void {\n    if (this.sortField === field) {\n      // Inverser la direction si on clique sur le même champ\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortField = field;\n      this.sortDirection = 'desc'; // Par défaut, tri descendant\n    }\n  }\n\n  /**\n   * Filtre et trie les tentatives de quiz\n   * @returns Tentatives filtrées et triées\n   */\n  get filteredAttempts(): QuizAttempt[] {\n    if (!this.formationResults?.attempts) return [];\n\n    let filtered = [...this.formationResults.attempts];\n\n    // Filtrer par réussite\n    if (this.showOnlyPassed) {\n      filtered = filtered.filter(attempt => attempt.hasPassed);\n    }\n\n    // Filtrer par terme de recherche\n    if (this.searchTerm) {\n      const term = this.searchTerm.toLowerCase();\n      filtered = filtered.filter(attempt =>\n        attempt.user?.userName?.toLowerCase().includes(term) ||\n        attempt.user?.email?.toLowerCase().includes(term) ||\n        attempt.session?.title?.toLowerCase().includes(term)\n      );\n    }\n\n    // Trier les résultats\n    filtered.sort((a, b) => {\n      let comparison = 0;\n\n      switch (this.sortField) {\n        case 'score':\n          comparison = a.score - b.score;\n          break;\n        case 'date':\n          comparison = new Date(a.attemptedAt).getTime() - new Date(b.attemptedAt).getTime();\n          break;\n        case 'user':\n          comparison = (a.user?.userName || '').localeCompare(b.user?.userName || '');\n          break;\n        case 'session':\n          comparison = (a.session?.title || '').localeCompare(b.session?.title || '');\n          break;\n        default:\n          comparison = a.score - b.score;\n      }\n\n      return this.sortDirection === 'asc' ? comparison : -comparison;\n    });\n\n    return filtered;\n  }\n\n  /**\n   * Calcule le taux de réussite des tentatives\n   * @returns Pourcentage de réussite\n   */\n  getSuccessRate(): number {\n    if (!this.formationResults?.attempts || this.formationResults.attempts.length === 0) {\n      return 0;\n    }\n\n    const passedCount = this.formationResults.attempts.filter(a => a.hasPassed).length;\n    return (passedCount / this.formationResults.attempts.length) * 100;\n  }\n\n  /**\n   * Calcule le score moyen des tentatives\n   * @returns Score moyen\n   */\n  getAverageScore(): number {\n    if (!this.formationResults?.attempts || this.formationResults.attempts.length === 0) {\n      return 0;\n    }\n\n    const totalScore = this.formationResults.attempts.reduce((sum, a) => sum + a.score, 0);\n    return totalScore / this.formationResults.attempts.length;\n  }\n\n  /**\n   * Vérifie si une réponse a été sélectionnée\n   * @param questionId ID de la question\n   * @param answerId ID de la réponse\n   * @returns Vrai si la réponse a été sélectionnée\n   */\n  isAnswerSelected(_questionId: number, _answerId: number): boolean {\n    // Cette méthode est utilisée dans le template pour vérifier si une réponse a été sélectionnée\n    // Les paramètres sont préfixés avec _ pour indiquer qu'ils ne sont pas utilisés\n    return true;\n  }\n\n  /**\n   * Génère un PDF des résultats en utilisant html2pdf.js\n   */\n  generatePDF(): void {\n    this.generatingPdf = true;\n\n    // Attendre que l'interface soit mise à jour pour afficher l'indicateur de chargement\n    setTimeout(() => {\n      const content = this.pdfContent.nativeElement;\n      const filename = `resultats_${this.formationResults.formationTitle.replace(/\\s+/g, '_')}.pdf`;\n\n      // Options pour html2pdf\n      const options = {\n        margin: 10,\n        filename: filename,\n        image: { type: 'jpeg', quality: 0.98 },\n        html2canvas: { scale: 2, useCORS: true },\n        jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n      };\n\n      // Générer le PDF\n      html2pdf()\n        .from(content)\n        .set(options)\n        .save()\n        .then(() => {\n          this.generatingPdf = false;\n        });\n    }, 100);\n  }\n\n  /**\n   * Imprime les résultats (méthode d'impression du navigateur)\n   */\n  printResults(): void {\n    window.print();\n  }\n\n  /**\n   * Formate une date pour l'affichage\n   * @param date Date à formater\n   * @returns Date formatée\n   */\n  formatDate(date: Date | string): string {\n    if (!date) return '';\n    const d = new Date(date);\n    return d.toLocaleDateString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n}\n","<!-- Chargement -->\n<div *ngIf=\"loading || generatingPdf\" class=\"flex justify-center items-center py-10\">\n    <div class=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2\"\n        [ngClass]=\"{'border-primary': loading, 'border-red-500': generatingPdf}\"></div>\n    <div class=\"ml-4 text-lg font-medium\" *ngIf=\"generatingPdf\">Génération du PDF en cours...</div>\n</div>\n\n<!-- Erreur -->\n<div *ngIf=\"error\" class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n    <strong class=\"font-bold\">Erreur!</strong>\n    <span class=\"block sm:inline\">{{ error }}</span>\n</div>\n\n<!-- Résultats -->\n<div *ngIf=\"!loading && !error && formationResults && !generatingPdf\" class=\"print:bg-white\">\n\n    <!-- Contenu pour le PDF (caché) -->\n    <div #pdfContent class=\"hidden\">\n        <div class=\"bg-white p-8\">\n            <div class=\"text-center mb-8\">\n                <h1 class=\"text-3xl font-bold mb-2\">Résultats de formation</h1>\n                <h2 class=\"text-xl font-semibold mb-4\">{{ formationResults.formationTitle }}</h2>\n                <p class=\"text-gray-600\">Date d'impression: {{ formatDate(today) }}</p>\n            </div>\n\n            <!-- Statistiques pour PDF -->\n            <div class=\"mb-8\">\n                <h3 class=\"text-xl font-semibold mb-4\">Statistiques globales</h3>\n                <div class=\"grid grid-cols-3 gap-4\">\n                    <div class=\"border border-gray-300 p-4 rounded-lg\">\n                        <h4 class=\"font-medium text-gray-700 mb-2\">Total des tentatives</h4>\n                        <p class=\"text-2xl font-bold text-blue-600\">{{ formationResults.attempts.length }}</p>\n                    </div>\n                    <div class=\"border border-gray-300 p-4 rounded-lg\">\n                        <h4 class=\"font-medium text-gray-700 mb-2\">Taux de réussite</h4>\n                        <p class=\"text-2xl font-bold text-green-600\">{{ getSuccessRate() | number:'1.0-0' }}%</p>\n                    </div>\n                    <div class=\"border border-gray-300 p-4 rounded-lg\">\n                        <h4 class=\"font-medium text-gray-700 mb-2\">Score moyen</h4>\n                        <p class=\"text-2xl font-bold text-blue-600\">{{ getAverageScore() | number:'1.0-1' }}%</p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Tableau des résultats pour PDF -->\n            <div class=\"mb-8\">\n                <h3 class=\"text-xl font-semibold mb-4\">Résultats globaux</h3>\n                <table class=\"w-full border-collapse border border-gray-300\">\n                    <thead>\n                        <tr class=\"bg-gray-100\">\n                            <th class=\"border border-gray-300 p-2 text-left\">Utilisateur</th>\n                            <th class=\"border border-gray-300 p-2 text-left\">Session</th>\n                            <th class=\"border border-gray-300 p-2 text-left\">Date</th>\n                            <th class=\"border border-gray-300 p-2 text-left\">Score</th>\n                            <th class=\"border border-gray-300 p-2 text-left\">Statut</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let attempt of formationResults.attempts\">\n                            <td class=\"border border-gray-300 p-2\">\n                                <div class=\"font-medium\">{{ attempt.user?.userName }}</div>\n                                <div class=\"text-sm text-gray-500\">{{ attempt.user?.email }}</div>\n                            </td>\n                            <td class=\"border border-gray-300 p-2\">{{ attempt.session?.title }}</td>\n                            <td class=\"border border-gray-300 p-2\">{{ formatDate(attempt.attemptedAt) }}</td>\n                            <td class=\"border border-gray-300 p-2\" [ngClass]=\"{\n                                'text-green-600': attempt.score >= 70,\n                                'text-red-600': attempt.score < 70\n                            }\">{{ attempt.score | number:'1.0-1' }}%</td>\n                            <td class=\"border border-gray-300 p-2\">\n                                <span [ngClass]=\"{\n                                    'text-green-600': attempt.hasPassed,\n                                    'text-red-600': !attempt.hasPassed\n                                }\">{{ attempt.hasPassed ? 'Réussi' : 'Échoué' }}</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <!-- Résultats par session pour PDF -->\n            <div *ngIf=\"formationResults.sessionResults && formationResults.sessionResults.length > 0\">\n                <h3 class=\"text-xl font-semibold mb-4\">Résultats par session</h3>\n\n                <div *ngFor=\"let sessionResult of formationResults.sessionResults\" class=\"mb-6\">\n                    <h4 class=\"text-lg font-medium mb-3\">{{ sessionResult.sessionTitle }}</h4>\n\n                    <table class=\"w-full border-collapse border border-gray-300\">\n                        <thead>\n                            <tr class=\"bg-gray-100\">\n                                <th class=\"border border-gray-300 p-2 text-left\">Utilisateur</th>\n                                <th class=\"border border-gray-300 p-2 text-left\">Date</th>\n                                <th class=\"border border-gray-300 p-2 text-left\">Score</th>\n                                <th class=\"border border-gray-300 p-2 text-left\">Statut</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let attempt of sessionResult.attempts\">\n                                <td class=\"border border-gray-300 p-2\">\n                                    <div class=\"font-medium\">{{ attempt.user?.userName }}</div>\n                                    <div class=\"text-sm text-gray-500\">{{ attempt.user?.email }}</div>\n                                </td>\n                                <td class=\"border border-gray-300 p-2\">{{ formatDate(attempt.attemptedAt) }}</td>\n                                <td class=\"border border-gray-300 p-2\" [ngClass]=\"{\n                                    'text-green-600': attempt.score >= 70,\n                                    'text-red-600': attempt.score < 70\n                                }\">{{ attempt.score | number:'1.0-1' }}%</td>\n                                <td class=\"border border-gray-300 p-2\">\n                                    <span [ngClass]=\"{\n                                        'text-green-600': attempt.hasPassed,\n                                        'text-red-600': !attempt.hasPassed\n                                    }\">{{ attempt.hasPassed ? 'Réussi' : 'Échoué' }}</span>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"sessionResult.attempts.length === 0\">\n                                <td colspan=\"4\" class=\"border border-gray-300 p-2 text-center text-gray-500\">\n                                    Aucun résultat pour cette session.\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- En-tête avec titre et options -->\n    <div class=\"flex justify-between items-center mb-6 print:hidden\">\n        <h2 class=\"text-2xl font-bold\">Résultats de la formation: {{ formationResults.formationTitle }}</h2>\n        <div class=\"flex space-x-2\">\n            <button (click)=\"generatePDF()\" [disabled]=\"generatingPdf\"\n                class=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg flex items-center mr-2\">\n                <i class=\"fas fa-file-pdf mr-2\"></i>\n                <span *ngIf=\"!generatingPdf\">Générer PDF</span>\n                <span *ngIf=\"generatingPdf\">Génération en cours...</span>\n            </button>\n            <button (click)=\"printResults()\"\n                class=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center\">\n                <i class=\"fas fa-print mr-2\"></i> Imprimer\n            </button>\n        </div>\n    </div>\n\n    <!-- En-tête pour impression -->\n    <div class=\"hidden print:block mb-6\">\n        <h1 class=\"text-3xl font-bold text-center mb-2\">Résultats de formation</h1>\n        <h2 class=\"text-xl font-semibold text-center mb-4\">{{ formationResults.formationTitle }}</h2>\n        <p class=\"text-center text-gray-600\">Date d'impression: {{ formatDate(today) }}</p>\n    </div>\n\n    <!-- Filtres -->\n    <div class=\"bg-gray-50 p-4 rounded-lg mb-6 print:hidden\">\n        <div class=\"flex flex-wrap gap-4 items-center\">\n            <div class=\"flex-1\">\n                <label for=\"search\" class=\"block text-sm font-medium text-gray-700 mb-1\">Rechercher</label>\n                <input type=\"text\" id=\"search\" [(ngModel)]=\"searchTerm\"\n                    placeholder=\"Rechercher par nom, email ou session...\"\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-primary focus:border-primary\">\n            </div>\n            <div class=\"flex items-center\">\n                <input type=\"checkbox\" id=\"showPassed\" [(ngModel)]=\"showOnlyPassed\"\n                    class=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded\">\n                <label for=\"showPassed\" class=\"ml-2 block text-sm text-gray-900\">Afficher uniquement les\n                    réussites</label>\n            </div>\n        </div>\n    </div>\n\n    <!-- Statistiques -->\n    <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n        <div class=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n            <h3 class=\"text-lg font-medium text-gray-700 mb-2\">Total des tentatives</h3>\n            <p class=\"text-3xl font-bold text-primary\">{{ formationResults.attempts.length }}</p>\n        </div>\n        <div class=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n            <h3 class=\"text-lg font-medium text-gray-700 mb-2\">Taux de réussite</h3>\n            <p class=\"text-3xl font-bold text-green-600\">\n                {{ getSuccessRate() | number:'1.0-0' }}%\n            </p>\n        </div>\n        <div class=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n            <h3 class=\"text-lg font-medium text-gray-700 mb-2\">Score moyen</h3>\n            <p class=\"text-3xl font-bold text-blue-600\">\n                {{ getAverageScore() | number:'1.0-1' }}%\n            </p>\n        </div>\n    </div>\n\n    <!-- Tableau des résultats -->\n    <div class=\"overflow-x-auto bg-white rounded-lg shadow\">\n        <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n                <tr>\n                    <th scope=\"col\"\n                        class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                        (click)=\"sortBy('user')\">\n                        Utilisateur\n                        <i class=\"fas fa-sort ml-1\" [ngClass]=\"{\n              'fa-sort-up': sortField === 'user' && sortDirection === 'asc',\n              'fa-sort-down': sortField === 'user' && sortDirection === 'desc'\n            }\"></i>\n                    </th>\n                    <th scope=\"col\"\n                        class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                        (click)=\"sortBy('session')\">\n                        Session\n                        <i class=\"fas fa-sort ml-1\" [ngClass]=\"{\n              'fa-sort-up': sortField === 'session' && sortDirection === 'asc',\n              'fa-sort-down': sortField === 'session' && sortDirection === 'desc'\n            }\"></i>\n                    </th>\n                    <th scope=\"col\"\n                        class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                        (click)=\"sortBy('date')\">\n                        Date\n                        <i class=\"fas fa-sort ml-1\" [ngClass]=\"{\n              'fa-sort-up': sortField === 'date' && sortDirection === 'asc',\n              'fa-sort-down': sortField === 'date' && sortDirection === 'desc'\n            }\"></i>\n                    </th>\n                    <th scope=\"col\"\n                        class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                        (click)=\"sortBy('score')\">\n                        Score\n                        <i class=\"fas fa-sort ml-1\" [ngClass]=\"{\n              'fa-sort-up': sortField === 'score' && sortDirection === 'asc',\n              'fa-sort-down': sortField === 'score' && sortDirection === 'desc'\n            }\"></i>\n                    </th>\n                    <th scope=\"col\"\n                        class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Statut\n                    </th>\n                </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n                <tr *ngFor=\"let attempt of filteredAttempts\">\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <div class=\"flex items-center\">\n                            <div class=\"ml-4\">\n                                <div class=\"text-sm font-medium text-gray-900\">{{ attempt.user?.userName }}</div>\n                                <div class=\"text-sm text-gray-500\">{{ attempt.user?.email }}</div>\n                            </div>\n                        </div>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <div class=\"text-sm text-gray-900\">{{ attempt.session?.title }}</div>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <div class=\"text-sm text-gray-500\">{{ formatDate(attempt.attemptedAt) }}</div>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <div class=\"text-sm font-medium\" [ngClass]=\"{\n              'text-green-600': attempt.score >= 70,\n              'text-red-600': attempt.score < 70\n            }\">\n                            {{ attempt.score | number:'1.0-1' }}%\n                        </div>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <span class=\"px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full\" [ngClass]=\"{\n                    'bg-green-100 text-green-800': attempt.hasPassed,\n                    'bg-red-100 text-red-800': !attempt.hasPassed\n                  }\">\n                            {{ attempt.hasPassed ? 'Réussi' : 'Échoué' }}\n                        </span>\n                    </td>\n                </tr>\n                <tr *ngIf=\"filteredAttempts.length === 0\">\n                    <td colspan=\"5\" class=\"px-6 py-4 text-center text-gray-500\">\n                        Aucun résultat trouvé.\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <!-- Résultats par session -->\n    <div *ngIf=\"formationResults.sessionResults && formationResults.sessionResults.length > 0\" class=\"mt-8\">\n        <h3 class=\"text-xl font-semibold mb-4\">Résultats par session</h3>\n\n        <div *ngFor=\"let sessionResult of formationResults.sessionResults\" class=\"mb-6 bg-white rounded-lg shadow p-4\">\n            <h4 class=\"text-lg font-medium mb-3\">{{ sessionResult.sessionTitle }}</h4>\n\n            <div class=\"overflow-x-auto\">\n                <table class=\"min-w-full divide-y divide-gray-200\">\n                    <thead class=\"bg-gray-50\">\n                        <tr>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Utilisateur\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Date\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Score\n                            </th>\n                            <th scope=\"col\"\n                                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                Statut\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"bg-white divide-y divide-gray-200\">\n                        <tr *ngFor=\"let attempt of sessionResult.attempts\">\n                            <td class=\"px-6 py-4 whitespace-nowrap\">\n                                <div class=\"flex items-center\">\n                                    <div class=\"ml-4\">\n                                        <div class=\"text-sm font-medium text-gray-900\">{{ attempt.user?.userName }}\n                                        </div>\n                                        <div class=\"text-sm text-gray-500\">{{ attempt.user?.email }}</div>\n                                    </div>\n                                </div>\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap\">\n                                <div class=\"text-sm text-gray-500\">{{ formatDate(attempt.attemptedAt) }}</div>\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap\">\n                                <div class=\"text-sm font-medium\" [ngClass]=\"{\n                  'text-green-600': attempt.score >= 70,\n                  'text-red-600': attempt.score < 70\n                }\">\n                                    {{ attempt.score | number:'1.0-1' }}%\n                                </div>\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap\">\n                                <span class=\"px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full\"\n                                    [ngClass]=\"{\n                        'bg-green-100 text-green-800': attempt.hasPassed,\n                        'bg-red-100 text-red-800': !attempt.hasPassed\n                      }\">\n                                    {{ attempt.hasPassed ? 'Réussi' : 'Échoué' }}\n                                </span>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"sessionResult.attempts.length === 0\">\n                            <td colspan=\"4\" class=\"px-6 py-4 text-center text-gray-500\">\n                                Aucun résultat pour cette session.\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Message si aucun résultat -->\n<div *ngIf=\"!loading && !error && (!formationResults || formationResults.attempts.length === 0)\"\n    class=\"bg-gray-50 p-8 rounded-lg text-center\">\n    <p class=\"text-gray-500\">Aucun résultat disponible pour cette formation.</p>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputComponent } from './ui/input/input.component';\nimport { ButtomComponent } from './ui/buttom/buttom.component';\nimport { RouterModule } from '@angular/router';\nimport { AppSidebarComponent } from './app-sidebar/app-sidebar.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TrainingCardComponent } from './training-card/training-card.component';\nimport { CreateGroupDialogComponent } from './components/create-group-dialog/create-group-dialog.component';\nimport { CreateUserDialogComponent } from './components/create-user-dialog/create-user-dialog.component';\nimport { SessionPopupComponent } from './components/session-popup/session-popup.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { SelectQuizComponent } from './components/select-quiz/select-quiz.component';\nimport { SelectGroupPopupComponent } from './components/select-group-popup/select-group-popup.component';\nimport { QuizResultsComponent } from './quiz-results/quiz-results.component';\n\n@NgModule({\n  declarations: [\n    InputComponent,\n    ButtomComponent,\n    AppSidebarComponent,\n    TrainingCardComponent,\n    CreateGroupDialogComponent,\n    CreateUserDialogComponent,\n    SessionPopupComponent,\n    SelectQuizComponent,\n    SelectGroupPopupComponent,\n    QuizResultsComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  exports: [\n    ButtomComponent,\n    AppSidebarComponent,\n    TrainingCardComponent,\n    CreateGroupDialogComponent,\n    CreateUserDialogComponent,\n    SessionPopupComponent,\n    QuizResultsComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Formation } from 'src/app/core/models/formation.model';\nimport Training from 'src/app/core/models/training';\n\n@Component({\n  selector: 'app-training-card',\n  templateUrl: './training-card.component.html',\n  styleUrls: ['./training-card.component.scss']\n})\nexport class TrainingCardComponent implements OnInit {\n  @Input() training!: Formation;\n  @Input() canEdit: boolean = false;\n  @Input() canDelete: boolean = false;\n  @Output() edit = new EventEmitter<number>();\n  @Output() delete = new EventEmitter<number>();\n  @Output() addSession = new EventEmitter<number>();\n\n  usersCount: number = 0;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.training.groups.forEach(group => {\n      this.usersCount += group.users?.length || 0;\n    });\n  }\n\n  getCategoryColor(category: string): string {\n    switch (category) {\n      case 'Technical Training':\n        return 'bg-blue-100 text-blue-800';\n      case 'Soft Skills':\n        return 'bg-red-100 text-red-800';\n      case  'Leadership':\n        return 'bg-green-100 text-green-800';\n      case 'Project Management':\n        return 'bg-purple-100 text-purple-800';\n      case 'Compliance':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  }\n\n  getCategoryLabel(category: string): string {\n    switch (category) {\n      case 'Technical Training':\n        return 'Technique';\n      case 'Soft Skills':\n        return 'Sécurité';\n      case  'Leadership':\n        return 'Qualité';\n      case 'Project Management':\n        return 'Project Management';\n      case 'Compliance':\n        return 'Compliance';\n      default:\n        return category;\n    }\n  }\n\n}\n","<div class=\"bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-shadow\">\n    <div class=\"p-4\">\n        <div class=\"flex justify-between items-start mb-3\">\n            <h3 class=\"font-semibold text-gray-800 text-lg\">{{ training.title }}</h3>\n            <span class=\"px-2 py-1 rounded-full text-xs font-medium\" [ngClass]=\"getCategoryColor(training.category)\">\n                {{ getCategoryLabel(training.category) }}\n            </span>\n        </div>\n\n        <p class=\"text-gray-600 text-sm mb-4 line-clamp-2 line-coverage min-h-[3.5rem]\">\n            {{ training.description }}\n        </p>\n\n        <div class=\"grid grid-cols-2 gap-2 mb-3\">\n            <div class=\"flex items-center text-gray-600 text-sm\">\n                <i class=\"fa-solid fa-clock w-4 h-4 mr-2 text-gray-400\"></i>\n                {{ training.groups.length }} groupes\n            </div>\n\n            <div class=\"flex items-center text-gray-600 text-sm\">\n\n                <i class=\"fa-solid fa-calendar text-gray-300  mr-2\"></i>\n                {{ training.sessions.length }} sessions\n            </div>\n\n            <div class=\"flex items-center text-gray-600 text-sm\">\n\n                <i class=\"fa-solid fa-users mr-2 text-gray-400\"></i>\n                {{ usersCount }} participants\n            </div>\n            <div class=\"flex items-center text-gray-600 text-sm\">\n                <i class=\"fa-solid fa-book text-gray-400 w-4 h-4 mr-2\"></i>\n                {{ training.modules.length }} modules\n            </div>\n        </div>\n    </div>\n\n    <div class=\"px-4 py-3 bg-gray-50 border-t border-gray-200 flex justify-between\">\n        <button (click)=\"addSession.emit(training.id)\"\n            class=\"text-primary text-sm font-medium flex items-center hover:text-primary-dark\">\n            <svg class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\"\n                    d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n                    clip-rule=\"evenodd\" />\n            </svg>\n            Session\n        </button>\n\n        <div class=\"flex space-x-2\">\n            <button *ngIf=\"canEdit\" (click)=\"edit.emit(training.id)\" class=\"text-gray-600 hover:text-gray-900\">\n                <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n                    <path fill-rule=\"evenodd\"\n                        d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n                        clip-rule=\"evenodd\" />\n                </svg>\n            </button>\n\n            <button *ngIf=\"canDelete\" (click)=\"delete.emit(training.id)\" class=\"text-gray-600 hover:text-red-600\">\n                <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\"\n                        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                        clip-rule=\"evenodd\" />\n                </svg>\n            </button>\n\n            <button [routerLink]=\"['.', training.id]\" class=\"text-gray-400 hover:text-gray-900\">\n                <i class=\"fa-solid fa-eye text-gray-500 hover:text-blue-600\"></i>\n            </button>\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './buttom.component.html',\n  styleUrls: ['./buttom.component.scss']\n})\nexport class ButtomComponent {\n\n  @Input() variant: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link' = 'default';\n  @Input() size: 'default' | 'sm' | 'lg' | 'icon' = 'default';\n  @Input() routerLink?: string | null = null;\n  @Input() disabled: boolean = false;\n\n  get buttonClasses(): string {\n    const baseClasses = 'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0';\n\n    const variantClasses = {\n      default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n      destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n      outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n      secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n      ghost: 'hover:bg-accent hover:text-accent-foreground',\n      link: 'text-primary underline-offset-4 hover:underline',\n    };\n\n    const sizeClasses = {\n      default: 'h-10 px-4 py-2',\n      sm: 'h-9 rounded-md px-3',\n      lg: 'h-11 rounded-md px-8',\n      icon: 'h-10 w-10',\n    };\n\n    return `${baseClasses} ${variantClasses[this.variant]} ${sizeClasses[this.size]}`;\n  }\n\n}\n","<button [ngClass]=\"buttonClasses\" [routerLink]=\"routerLink\"\n    class=\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\"\n    [disabled]=\"disabled\">\n    <ng-content></ng-content>\n</button>","import { Component, Input } from '@angular/core';\n\ntype InputType = 'text' | 'password' | 'email' | 'number' | 'tel' | 'url' | 'search';\n\n@Component({\n  selector: 'Input',\n  template: `\n    <input\n      [type]=\"type\"\n      [attr.formControlName]=\"formControlName\"\n      [placeholder]=\"placeholder\"\n      class=\"flex h-10 w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n    />\n  `\n})\nexport class InputComponent {\n  @Input() type: InputType = 'text';\n  @Input() placeholder: string = '';\n  @Input() formControlName!: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // baseUrl: \"https://formationapi-production.up.railway.app/api\"\n  baseUrl: \"https://localhost:7173/api\",\n  hubsUrl: 'https://localhost:7173/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["EventEmitter","inject","NavigationEnd","Subscription","filter","AuthService","NotificationService","i0","_r11","$event","AppSidebarComponent","constructor","router","name","icon","action","auth","logout","events","pipe","event","subscribe","showPopup","ngOnInit","subscription","add","notificationService","notifications$","notifications","notificationMenuItem","menuItems","find","item","path","includes","badge","n","received","length","ngOnDestroy","unsubscribe","toggleSidebar","isOpen","sidebarToggled","emit","togglePopup","handlePopupAction","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}