{"version":3,"file":"src_app_admin_admin_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACuD;AACD;AACsB;AACP;AACN;AACG;AACJ;AACoB;AACA;AACA;AACiB;AACP;AACO;AACA;;;AAEnG,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAa,EAAE;IACtC,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,qFAAiB,EAAE;IACpD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,6GAAwB,EAAE;IAClE,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,6GAAwB,EAAE;IAC/D,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,4GAAwB,EAAE;IACpE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8EAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wEAAgB,EAAE;IACjD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,uEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,2FAAoB,EAAE;IACzD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAoB,EAAE;IACtD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,2FAAoB,EAAE;IAC3D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,qGAAoB,EAAE;CAC5D,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;gHAAlB,kBAAkB;oHAHnB,mEAAqB,CAAC,MAAM,CAAC,EAC7B,0DAAY;oIAEX,kBAAkB,qFAFnB,0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCuB;AAEa;AACN;AACY;AACP;AACiB;AACP;AACN;AACG;AACX;AACD;AAEQ;AACoB;AACA;AACA;AACiB;AACA;AAEA;;AA2B5F,MAAM,WAAW;;sEAAX,WAAW;yGAAX,WAAW;6GARpB,0DAAY;QACZ,qEAAkB;QAClB,gEAAmB;QACnB,sEAAe;QACf,wDAAW;QACX,+DAAY;oIAGH,WAAW,mBAvBpB,+DAAa;QACb,qFAAiB;QACjB,8EAAkB;QAClB,wEAAgB;QAChB,2EAAiB;QACjB,+DAAa;QACb,6GAAwB;QACxB,uEAAc;QACd,2FAAoB;QACpB,4FAAoB;QACpB,4FAAoB;QACpB,6GAAwB;QACxB,6GAAwB,aAGxB,0DAAY;QACZ,qEAAkB;QAClB,gEAAmB;QACnB,sEAAe;QACf,wDAAW;QACX,+DAAY;;;;;;;;;;;;;;;;;;;;;ACrCyG;AACH;;;;;;;ICiBlH,+DAAmE;IAAnE,0EAAmE;IAC/D,qEAAkF;IACtF,4DAAM;;;;;IAGN,+DAAgH;IAAhH,0EAAgH;IAClF,iEAAM;IAAA,4DAAS;IACzC,2EAA8B;IAAA,uDAAW;IAAA,4DAAO;IAChD,6EAAkF;IAA1E,iSAAS,8EAAa,KAAC;IAC3B,8DACwB;IADxB,0EACwB;IACpB,sEAC+O;IACnP,4DAAM;;;IANoB,0DAAW;IAAX,6EAAW;;;;IAgBjC,0EAEoG;IAFlE,iWAAS,sFAAkB,KAAC;IAG1D,0EAA+C;IACL,uDAAc;IAAA,4DAAK;IACzD,2EAAqF;IACjF,uDACJ;IAAA,4DAAO;;;;IANX,wJAAmD;IAGT,0DAAc;IAAd,8EAAc;IAEhD,0DACJ;IADI,uGACJ;;;;;IA2CI,yEAAsE;IAKtD,uDACJ;IAAA,4DAAM;IACN,0EAAkB;IACiC,uDAAiB;IAAA,4DAAM;IAIlF,yEAAwC;IACD,wDAAc;IAAA,4DAAM;IAE3D,0EAAwC;IAUhC,uEAOU;IACV,wDACJ;IAAA,4DAAO;;;IA7BC,0DACJ;IADI,qHACJ;IAEmD,0DAAiB;IAAjB,kFAAiB;IAKrC,0DAAc;IAAd,+EAAc;IAG3C,0DAOJ;IAPI,8iBAOJ;IAE4C,0DAOxC;IAPwC,+iBAOxC;IACF,0DACJ;IADI,6HACJ;;;IAGR,qEAA6C;IAGjC,8DAC0D;IAD1D,0EAC0D;IACtD,sEACwH;IAC5H,4DAAM;IACN,+DAAkD;IAAlD,wEAAkD;IAAA,iFAAsB;IAAA,4DAAI;;;IAjF5G,0EAA4E;IAKf,uDAAsB;IAAA,4DAAK;IAE5E,0EAAqC;IAE7B,mEACJ;IAAA,4DAAO;IACP,2EAAqF;IACjF,wDACJ;IAAA,4DAAO;IAMnB,2EAAiB;IAOO,iEAAI;IAAA,4DAAK;IACb,0EAC2F;IACvF,kEAAK;IAAA,4DAAK;IACd,0EAC2F;IACvF,iEAAI;IAAA,4DAAK;IAGrB,6EAAiD;IAC7C,8HAoCK;IACL,4HAWK;IACT,4DAAQ;;;IAhFqC,0DAAsB;IAAtB,0FAAsB;IAO/D,0DACJ;IADI,4GACJ;IAuByB,2DAAsB;IAAtB,+FAAsB;IAqCtC,0DAAsC;IAAtC,yGAAsC;;;;IA5FnE,+DAA8E;IAA9E,0EAA8E;IAGjB,iEAAM;IAAA,4DAAK;IAChE,0EAAuB;IACnB,sHASM;IACV,4DAAM;IAIV,uHAyFM;IACV,4DAAM;;;IAxG6B,0DAAS;IAAT,kFAAS;IAce,0DAAmB;IAAnB,sFAAmB;;AD/C3E,MAAM,kBAAkB;IAQ7B,YACU,YAA0B,EAC1B,MAAiB;QADjB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAW;QAT3B,WAAM,GAAY,EAAE,CAAC;QACrB,kBAAa,GAAiB,IAAI,CAAC;QACnC,wBAAmB,GAAG,KAAK,CAAC;QAC5B,YAAO,GAAG,IAAI,CAAC;QACf,UAAK,GAAkB,IAAI,CAAC;IAMxB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;YACtC,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE;gBACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBAChC;gBACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,KAAK,GAAG,gDAAgD,CAAC;gBAC9D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;YAC/C,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,mBAAmB;QACjB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gIAAyB,EAAE;YAC5D,IAAI,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE;YAC3C,KAAK,EAAE,QAAQ;SAChB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YAC/C,IAAI,IAAI,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mIAA0B,CAAC,CAAC;QAC/D,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,KAAY,EAAE,EAAE;YACjD,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;IAEV,CAAC;;oFAlEU,kBAAkB;gHAAlB,kBAAkB;QChB/B,yEAAmC;QAGkB,4EAAiB;QAAA,4DAAK;QACnE,yEAAwB;QACZ,0IAAS,yBAAqB,IAAC;QAEnC,8DAAgG;QAAhG,yEAAgG;QAC5F,qEACkJ;QACtJ,4DAAM;QACN,wEACJ;QAAA,4DAAS;QACT,+DACsH;QADtH,4EACsH;QAD9G,0IAAS,0BAAsB,IAAC;QAEpC,8DAAgG;QAAhG,0EAAgG;QAC5F,sEAE0B;QAC9B,4DAAM;QACN,0EACJ;QAAA,4DAAS;QAKjB,gHAEM;QAGN,iHAUM;QAGN,iHA6GM;QACV,4DAAM;;QAhII,2DAAa;QAAb,6EAAa;QAKb,0DAAW;QAAX,2EAAW;QAaX,0DAAwB;QAAxB,4FAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3C6C;AAQI;AACb;AACH;AACgC;;;;;;;;;;;IC0BvE,0EAA+D;IAC3D,uEACwD;IACxD,4EAA6D;IAEzB,uDAAc;IAAA,4DAAO;IAErD,0EAA2B;IACvB,mEAA4B;IAChC,4DAAM;;;IARU,0DAA6B;IAA7B,yFAA6B;IAE1C,0DAA8B;IAA9B,0FAA8B;IAED,0DAAc;IAAd,4EAAc;;;;IActD,0EAA2D;IAGnD,mWAAU,oFAAgB,KAAC;IAF/B,4DAEwD;IACxD,4EAAiD;IAEjB,uDAAU;IAAA,4DAAO;IAE7C,0EAAuB;IACnB,mEAA4B;IAChC,4DAAM;;;;;IATa,0DAAqB;IAArB,iFAAqB;IAGrC,0DAAsB;IAAtB,kFAAsB;IAEG,0DAAU;IAAV,wEAAU;;;IAsClC,2EAA0D;IAAA,uDACpD;IAAA,4DAAO;;;IAD6C,0DACpD;IADoD,qFACpD;;;;IARlB,0EAAqD;IAG7C,sWAAU,0FAAqB,KAAC;IAFpC,4DAE8D;IAC9D,4EAAuD;IAEtB,uDAAgB;IAAA,4DAAO;IAChD,8HACa;IACjB,4DAAM;IACN,0EAAwB;IACpB,mEAA4B;IAChC,4DAAM;;;;;IAXa,0DAA0B;IAA1B,sFAA0B;IAG1C,0DAA2B;IAA3B,uFAA2B;IAED,0DAAgB;IAAhB,8EAAgB;IAClC,0DAAuB;IAAvB,sFAAuB;;;;IAuB1C,0EACgC;IAK2C,gEAAK;IAAA,4DAAQ;IACpE,uEAC6G;IACjH,4DAAM;IACN,sEAAK;IAEmD,uEAAW;IAAA,4DAAQ;IACvE,2EACsH;IAC1H,4DAAM;IACN,uEAAK;IACsD,gEAAI;IAAA,4DAAQ;IACnE,2EAAkB;IACQ,+VAAS,0FAAwB,QAAQ,QAAI,KAAC;IAEhE,wDACA;IAAA,oEAAwC;IAC5C,4DAAS;IAKzB,2EAAqC;IAE7B,oEAAoC;IACxC,4DAAM;IACN,8EACsE;IADhD,+VAAS,4FAAkB,CAAC,CAAC,KAAC;IAEhD,oEAA+B;IACnC,4DAAS;IACT,8EAEsE;IAFhD,+VAAS,4FAAkB,CAAC,CAAC,KAAC;IAGhD,oEAAiC;IACrC,4DAAS;IACT,8EACgD;IAD1B,+VAAS,qFAAe,KAAC;IAE3C,oEAA4B;IAChC,4DAAS;IAGjB,2EAAwC;IACpC,wDACJ;IAAA,4DAAM;;;;;;;IAjDkD,gFAAmB;IAqBnD,2DACA;IADA,oKACA;IAUqC,0DAAoB;IAApB,iFAAoB;IAKrE,0DAAqC;IAArC,yGAAqC;IAW7C,0DACJ;IADI,2JACJ;;;;IAiBJ,0EACyB;IAG0C,gEAAK;IAAA,4DAAQ;IACpE,uEAC6G;IACjH,4DAAM;IACN,sEAAK;IACsD,qEAAU;IAAA,4DAAQ;IACzE,uEAC6G;IACjH,4DAAM;IACN,uEAAK;IACsD,oEAAQ;IAAA,4DAAQ;IACvE,wEAC6G;IACjH,4DAAM;IAEV,2EAAmC;IACT,+VAAS,sFAAgB,KAAC;IAE5C,oEAA4B;IAChC,4DAAS;;;IAvB6C,gFAAmB;;AD1KtG,MAAM,wBAAwB;IAcjC,YACY,EAAe,EACf,gBAAkC,EAClC,YAA0B,EAC1B,WAAwB,EACxB,MAAc,EACd,MAAiB,EACjB,OAAuB;QANvB,OAAE,GAAF,EAAE,CAAa;QACf,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QACjB,YAAO,GAAP,OAAO,CAAgB;QAnBnC,WAAM,GAAY,EAAE,CAAC;QACrB,YAAO,GAAW,EAAE,CAAC;QACrB,eAAU,GAAG,qFAAoB,CAAC;QAClC,mBAAc,GAAG;YACb,mFAAsB;YACtB,wFAA2B;YAC3B,gFAAmB;YACnB,gFAAmB;YACnB,kFAAqB;YACrB,6EAAgB;SACnB,CAAC;QAWE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9D,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,WAAW,EAAE,CAAC,IAAI,CAAC;YACnB,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC3B,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC7B,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;YACpC,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACb,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YACpC,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE;gBACd,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YAC3B,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACb,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;YACnD,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;IAC1D,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;IAC3D,CAAC;IAED,qBAAqB;QACjB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjB,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,+DAAmB,CAAC;YACxD,MAAM,EAAE,CAAC,IAAI,CAAC;SACjB,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,KAAa;QACtB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,CAAC;IAED,qBAAqB;QACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YAC7C,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,SAAiB,EAAE,OAAe;QACzC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,CAAC;IAED,sBAAsB;QAClB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjB,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,SAAS,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACrC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,aAAa,CAAC,KAAa;QACvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,OAAe;QACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAiB,CAAC;QACvE,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC;SACtF;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,CAAC,GAAG,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;SACvE;IACL,CAAC;IAED,UAAU,CAAC,IAAY;QACnB,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,KAAiB,CAAC;QACrE,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC1B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;SAC/E;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAClE;IACL,CAAC;IAED,uBAAuB,CAAC,OAA+B,EAAE,WAAoB;QACzE,MAAM,eAAe,GAAa,EAAE,CAAC;QAErC,4CAA4C;QAC5C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YAC7C,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC;YAC5C,IAAI,MAAM,IAAI,CAAC,OAAO,KAAK,QAAQ,IAAI,KAAK,KAAK,WAAW,CAAC,EAAE;gBAC3D,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAChC;QACL,CAAC,CAAC,CAAC;QAEH,+CAA+C;QAC/C,IAAI,OAAO,KAAK,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE;YACtE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC;SACtE;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qGAAmB,EAAE;YACpD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACF,eAAe;gBACf,OAAO;gBACP,cAAc,EAAE,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;aAClL;SACJ,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrC,IAAI,IAAI,EAAE;gBACN,IAAI,OAAO,KAAK,WAAW,EAAE;oBACzB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;iBAC3D;qBAAM,IAAI,WAAW,KAAK,SAAS,EAAE;oBAClC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;iBAChE;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,MAAqB;QAC9B,OAAO,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,KAAK,IAAI,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC;IACxG,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAEtC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBACtE,IAAI,EAAE,GAAG,EAAE;oBACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAChD,CAAC;gBACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;oBACb,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;oBAClD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC9C,CAAC;aACJ,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,+CAA+C,CAAC,CAAC;SAE3F;IACL,CAAC;IAED,UAAU,CAAC,KAA+B;QACtC,uEAAe,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QAChF,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,CAAC;;gGAjMQ,wBAAwB;sHAAxB,wBAAwB;QCpBrC,yEAAyC;QAKM,+EAAoB;QAAA,4DAAK;QACxD,uEAAsC;QAAA,uHAA4D;QAAA,4DAAI;QAI1G,yEAAiB;QACqB,oJAAY,cAAU,IAAC;QAErD,0EAA4C;QACJ,6EAAiB;QAAA,4DAAK;QAC1D,2EAAoC;QAE2B,iEAAK;QAAA,4DAAQ;QACpE,wEAC6G;QACjH,4DAAM;QACN,uEAAK;QACsD,uEAAW;QAAA,4DAAQ;QAC1E,2EACsH;QAC1H,4DAAM;QACN,uEAAK;QACsD,mEAAO;QAAA,4DAAQ;QACtE,2EACsH;QAC1H,4DAAM;QAKd,0EAA4C;QACJ,oEAAQ;QAAA,4DAAK;QACjD,2EAAmD;QAC/C,uHAWM;QACV,4DAAM;QAIV,0EAA4C;QACJ,iEAAK;QAAA,4DAAK;QAC9C,2EAAmD;QAC/C,uHAYM;QACV,4DAAM;QAIV,0EAA4C;QACJ,sEAAU;QAAA,4DAAK;QACnD,2EAAyC;QAEsB,6EAAiB;QAAA,4DAAQ;QAChF,2EAAkB;QACQ,iJAAS,4BAAwB,WAAW,CAAC,IAAC;QAEhE,wDACA;QAAA,oEAAwC;QAC5C,4DAAS;QAOzB,0EAA4C;QACJ,yEAAa;QAAA,4DAAK;QACtD,2EAAmD;QAC/C,uHAcM;QACV,4DAAM;QAIV,0EAA4C;QAEL,mEAAO;QAAA,4DAAK;QAC3C,8EACoJ;QAD9H,iJAAS,eAAW,IAAC;QAEvC,oEAAgC;QAChC,wEACJ;QAAA,4DAAS;QAGb,2EAA+C;QAC3C,wHAkDM;QACV,4DAAM;QAIV,0EAA4C;QAEL,oEAAQ;QAAA,4DAAK;QAC5C,8EACoJ;QAD9H,iJAAS,gBAAY,IAAC;QAExC,oEAAgC;QAChC,yEACJ;QAAA,4DAAS;QAGb,2EAAgD;QAC5C,wHAyBM;QACV,4DAAM;QAIV,2EAA8B;QAGtB,8EACJ;QAAA,4DAAS;;;QArNX,0DAA2B;QAA3B,wFAA2B;QA2BK,2DAAa;QAAb,mFAAa;QAmBjB,0DAAiB;QAAjB,uFAAiB;QAyB3B,2DACA;QADA,6KACA;QAWW,0DAAS;QAAT,+EAAS;QA8BR,0DAAqB;QAArB,yFAAqB;QAkEpB,0DAAsB;QAAtB,0FAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IErLnE,0EAAoE;IAChE,qEAA4F;IAChG,4DAAM;;;IAGN,0EAAiD;IAEf,kEAAO;IAAA,4DAAS;IAC1C,2EAA8B;IAAA,uDAAW;IAAA,4DAAO;;;IAAlB,0DAAW;IAAX,6EAAW;;;IAgE7B,0EAA0E;IACV,qEAAU;IAAA,4DAAQ;IAC9E,0EAC0F;IAElF,mEAA8C;IAC9C,2EAAkC;IAAA,uDAC5B;IAAA,4DAAO;;;IADqB,0DAC5B;IAD4B,kHAC5B;;;IA9B1B,sEAAkC;IACM,+EAAoB;IAAA,4DAAK;IAC7D,0EAAoC;IAE2B,gEAAK;IAAA,4DAAQ;IACpE,0EAAmE;IAC/D,uDACJ;IAAA,4DAAM;IAEV,sEAAK;IACsD,uEAAW;IAAA,4DAAQ;IAC1E,2EAAgF;IAC5E,wDACJ;IAAA,4DAAM;IAEV,uEAAK;IACsD,mEAAO;IAAA,4DAAQ;IACtE,2EAAiF;IAC7E,wDACJ;IAAA,4DAAM;IAIV,oIAUM;IACV,4DAAM;;;IA5BM,0DACJ;IADI,kGACJ;IAKI,0DACJ;IADI,wGACJ;IAKI,0DACJ;IADI,oGACJ;IAIE,0DAA2B;IAA3B,8FAA2B;;;;IAwCzB,qEAA+C;IAEQ,uDAAmB;IAAA,4DAAM;IAE5E,yEAAwC;IACD,uDAA8B;;IAAA,4DAAM;IAE3E,yEAAwC;IACD,wDAA4B;;IAAA,4DAAM;IAEzE,0EAAwC;IAOhC,wDACJ;IAAA,4DAAO;;;;IAhBwC,0DAAmB;IAAnB,kFAAmB;IAG/B,0DAA8B;IAA9B,uJAA8B;IAG9B,0DAA4B;IAA5B,sJAA4B;IAI3D,0DAIE;IAJF,2RAIE;IACF,0DACJ;IADI,yGACJ;;;IAGR,qEAA4C;IAEpC,sFACJ;IAAA,4DAAK;;;IAjDzB,sEAAsC;IAEC,mEAAQ;IAAA,4DAAK;IAIhD,0EAA6B;IAMT,iEAAK;IAAA,4DAAK;IACd,0EAC2F;IACvF,+EAAa;IAAA,4DAAK;IACtB,0EAC2F;IACvF,wEAAW;IAAA,4DAAK;IACpB,0EAC2F;IACvF,mEAAM;IAAA,4DAAK;IAGvB,6EAAiD;IAC7C,oIAoBK;IACL,kIAIK;IACT,4DAAQ;;;IA1BoB,2DAAqB;IAArB,8FAAqB;IAqBxC,0DAAqC;IAArC,wGAAqC;;;IA2B1C,0EAA6D;IAAA,uDAC7D;IAAA,4DAAM;;;IADuD,0DAC7D;IAD6D,gGAC7D;;;IAJJ,0EAC6D;IAChC,uDAAgB;IAAA,4DAAM;IAC/C,yIACM;IACV,4DAAM;;;IAHuB,0DAAgB;IAAhB,+EAAgB;IACnC,0DAAuB;IAAvB,uFAAuB;;;IAGjC,0EACqD;IACjD,6GACJ;IAAA,4DAAM;;;IAtBlB,0EAAsD;IAGX,yEAAS;IAAA,4DAAK;IACjD,0EAA8D;IAC1D,uDACJ;IAAA,4DAAM;IAIV,sEAAK;IACkC,yEAAc;IAAA,4DAAK;IACtD,0EAAmD;IAC/C,oIAKM;IACN,oIAGM;IACV,4DAAM;;;IAlBF,0DACJ;IADI,qGACJ;IAO2B,0DAAmB;IAAnB,4FAAmB;IAMpC,0DAAmC;IAAnC,sGAAmC;;;IAsBjC,0EACsF;IAClF,mEAAwD;IACxD,2EAAkC;IAAA,uDAAiC;IAAA,4DAAO;;;;IAAxC,0DAAiC;IAAjC,wGAAiC;;;IAO/D,wEAE+F;IAC3F,qEAC2B;IAC3B,2EAAsB;IAAA,uDACE;IAAA,4DAAO;;;;IAL/B,kJAAwB;IAEnB,0DAAoC;IAApC,sKAAoC;IAEnB,0DACE;IADF,6IACE;;;IATpC,0EAA8E;IACrC,8EAAc;IAAA,4DAAK;IACxD,0EAAmD;IAC/C,0IAOI;IACR,4DAAM;;;IARwB,0DAAqB;IAArB,2FAAqB;;;IAUvD,0EACuC;IACnC,oGACJ;IAAA,4DAAM;;;IA/BlB,0EAC6D;IAGf,uDAAkB;IAAA,4DAAK;IACzD,wEAA8B;IAAA,uDAAwB;IAAA,4DAAI;IAG1D,wIAIM;IAGN,wIAYM;IACN,wIAGM;IACV,4DAAM;IACN,2EAAmC;IAC/B,wDACJ;IAAA,4DAAM;;;IA/BgC,0DAAkB;IAAlB,iFAAkB;IACtB,0DAAwB;IAAxB,uFAAwB;IAGhD,0DAAmB;IAAnB,mFAAmB;IAOnB,0DAAyD;IAAzD,6HAAyD;IAazD,0DAA4D;IAA5D,gIAA4D;IAMlE,0DACJ;IADI,yGACJ;;;IAGR,0EAAmF;IAC/E,yGACJ;IAAA,4DAAM;;;IA7Cd,sEAAqC;IAEE,kEAAO;IAAA,4DAAK;IAE/C,0EAAuB;IACnB,mIAqCM;IACN,kIAEM;IACV,4DAAM;;;IAzCsB,0DAAoB;IAApB,6FAAoB;IAsCtC,0DAAoC;IAApC,uGAAoC;;;IAQ9C,kFAAqF;;;IAAjD,6FAA6B;;;IADrE,sEAAqC;IACjC,4JAAqF;IACzF,4DAAM;;;IADiB,0DAAe;IAAf,kFAAe;;;;;IAlNlD,0EAA+C;IAKvB,wSAAS,+EAAa,MAAM,CAAC,KAAC;IAGlC,iFACJ;IAAA,4DAAS;IACT,6EAEwE;IAFhE,wSAAS,+EAAa,UAAU,CAAC,KAAC;IAGtC,qEACJ;IAAA,4DAAS;IACT,6EAEwE;IAFhE,wSAAS,+EAAa,QAAQ,CAAC,KAAC;IAGpC,sFACJ;IAAA,4DAAS;IACT,8EAEwE;IAFhE,ySAAS,+EAAa,SAAS,CAAC,KAAC;IAGrC,qEACJ;IAAA,4DAAS;IACT,8EAEwE;IAFhE,ySAAS,+EAAa,SAAS,CAAC,KAAC;IAGrC,yFACJ;IAAA,4DAAS;IAKjB,2EAAiB;IAEb,8HAmCM;IAGN,8HAsDM;IAGN,8HAyBM;IAGN,6HA+CM;IAGN,6HAEM;IACV,4DAAM;;;IA9MM,0DAAqK;IAArK,qMAAqK;IAKrK,0DAA6K;IAA7K,6MAA6K;IAK7K,0DAAyK;IAAzK,yMAAyK;IAKzK,0DAA2K;IAA3K,2MAA2K;IAK3K,0DAA2K;IAA3K,2MAA2K;IAU7K,0DAA0B;IAA1B,6FAA0B;IAsC1B,0DAA8B;IAA9B,iGAA8B;IAyD9B,0DAA4B;IAA5B,+FAA4B;IA4B5B,0DAA6B;IAA7B,gGAA6B;IAkD7B,0DAA6B;IAA7B,gGAA6B;;;ADxNhD,MAAM,wBAAwB;IAQnC,YACU,gBAAkC,EAClC,WAAwB,EACxB,iBAAoC,EACpC,KAAqB,EACrB,MAAc;QAJd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAZxB,cAAS,GAAqB,IAAI,CAAC;QACnC,YAAO,GAAY,KAAK,CAAC;QACzB,UAAK,GAAkB,IAAI,CAAC;QAC5B,cAAS,GAAW,MAAM,CAAC;QAC3B,YAAO,GAAW,EAAE,CAAC;QACb,kBAAa,GAAmB,EAAE,CAAC;IAQvC,CAAC;IAEL,QAAQ;QACN,uBAAuB;QACvB,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YACpE,yCAAyC;YACzC,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAExC,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,qCAAqC;QACrC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IACvD,CAAC;IACD,aAAa,CAAC,EAAU;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAC/C,IAAI,EAAE,CAAC,SAAoB,EAAE,EAAE;gBAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAEjF,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAEvB,CAAC;SACF,CAAC;IACJ,CAAC;IAED,8CAA8C;IAC9C,WAAW,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,WAAW,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED,SAAS,CAAC,OAAgB;QACxB,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3B,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC1C,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACtC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEzB,IAAI,KAAK,GAAG,KAAK,EAAE;YACjB,OAAO,YAAY,CAAC,CAAC,kBAAkB;SACxC;aAAM,IAAI,KAAK,GAAG,GAAG,EAAE;YACtB,OAAO,UAAU,CAAC,CAAG,WAAW;SACjC;aAAM;YACL,OAAO,UAAU,CAAC,CAAG,UAAU;SAChC;IACH,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,OAAe;QAC1B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,KAAK;YACtB,WAAW,EAAE;gBACX,GAAG,EAAE,IAAI,CAAC,SAAS;aACpB;YACD,mBAAmB,EAAE,OAAO;YAC5B,UAAU,EAAE,IAAI,CAAC,wDAAwD;SAC1E,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YACtC,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE;gBAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACzB,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;gBAC/C,IAAI,CAAC,KAAK,GAAG,iCAAiC,CAAC;YACjD,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,MAAqB;QAChC,IAAI,CAAC,MAAM;YAAE,OAAO,wBAAwB,CAAC;QAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC;IAC5C,CAAC;;gGAtIU,wBAAwB;sHAAxB,wBAAwB;QCfrC,yEAA+B;QAI0B,uFAAuB;QAAA,4DAAK;QACzE,uEAAsC;QAAA,qGAA0C;QAAA,4DAAI;QAIxF,oHAEM;QAGN,oHAKM;QAGN,sHAsNM;QAGN,wEAC4H;QACxH,mEAAmC;QACvC,4DAAI;;QAzOE,0DAAa;QAAb,6EAAa;QAKb,0DAAW;QAAX,2EAAW;QAQX,0DAA2B;QAA3B,+FAA2B;QAyN9B,0DAA0D;QAA1D,8LAA0D;;;;;;;;;;;;;;;;;;;;;;;;;;AC5Oa;AAKsB;;;;;;;;;;ICFxF,mEAAgE;;;IAEhE,8DACwB;IADxB,0EACwB;IACpB,wEAAkG;IAItG,4DAAM;;;IA6CF,6EAA+D;IAAA,uDAAY;IAAA,4DAAS;;;IAAxC,8EAAkB;IAAC,0DAAY;IAAZ,4EAAY;;;;IAMnF,0EAAmE;IACtB,uTAAQ,2FAA0B,KAAC,6TAC3C,iGAA6B,KADc,4QAE1D,0FAAwB,KAFkC;IAEhC,4DAAoB;;;IAF7C,0DAAqB;IAArB,iFAAqB;;;IAMhD,0EAAoF;IAC/C,iHAAiD;IAAA,4DAAI;;;;IAzC9F,0EAA2C;IAI3B,8DAA2E;IAA3E,0EAA2E;IACvE,sEAE0B;IAC9B,4DAAM;IAEV,+DAE0D;IAF1D,4EAE0D;IAAtD,iZAAwB,+OAAU,kFAAgB,KAA1B;IAF5B,4DAE0D;IAG9D,0EAAsB;IAEd,8DAA2E;IAA3E,0EAA2E;IACvE,uEAE0B;IAC9B,4DAAM;IAEV,+DAEqE;IAFrE,8EAEqE;IAAjE,uZAA4B,mPAAW,0FAAwB,KAAnC;IAC5B,8EAAiB;IAAA,sFAAqB;IAAA,4DAAS;IAC/C,6HAAoF;IACxF,4DAAS;IAIjB,2EAAkE;IAC9D,uHAIM;IACV,4DAAM;IAEN,uHAEM;IACV,4DAAM;;;IA/BU,0DAAwB;IAAxB,sFAAwB;IAaxB,0DAA4B;IAA5B,0FAA4B;IAEC,0DAAa;IAAb,sFAAa;IAMxB,0DAAoB;IAApB,6FAAoB;IAO5C,0DAAkD;IAAlD,4HAAkD;;AD1DzD,MAAM,iBAAiB;IAW5B,YACU,gBAAkC,EAClC,MAAiB,EACjB,OAAuB,EACvB,MAAc;QAHd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAW;QACjB,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAQ;QAdxB,eAAU,GAAG,4FAAoB;QACjC,cAAS,GAAgB,EAAE,CAAC;QAE5B,eAAU,GAAW,EAAE,CAAC;QACxB,eAAU,GAAY,KAAK,CAAC;QAC5B,oBAAe,GAAoB,IAAI,CAAC;QACxC,mBAAc,GAAW,EAAE,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;IAQvB,CAAC;IAGL,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CACtC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YACpE,CAAC,IAAI,CAAC,cAAc,KAAK,EAAE,IAAI,QAAQ,CAAC,QAAQ,KAAK,IAAI,CAAC,cAAc,CAAC,CAC1E,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,KAAY;QACnB,IAAI,CAAC,UAAU,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,KAAY;QAC3B,IAAI,CAAC,cAAc,GAAI,KAAK,CAAC,MAA4B,CAAC,KAAK,CAAC;IAClE,CAAC;IAED,kBAAkB,CAAC,EAAU;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC7B,gFAAgF;QAChF,8DAA8D;QAC9D,IAAI;IACN,CAAC;IAED,gBAAgB,CAAC,EAAU;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kHAAqB,EAAE;YACxD,IAAI,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE;SAC1B,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC3D,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;QACxE,CAAC,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,IAAI,MAAM,CAAC,OAAO,CAAC,sDAAsD,CAAC,EAAE;YAC1E,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;gBACvD,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,qBAAqB,EAAE,2CAA2C,CAAC,CAAC;YAE/F,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;gBACtE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,iEAAiE,CAAC,CAAC;YACtG,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;kFAjFU,iBAAiB;+GAAjB,iBAAiB;QCd9B,yEAAmD;QAEE,iFAAsB;QAAA,4DAAK;QACxE,yEAAwB;QACZ,yIAAS,qBAAiB,IAAC;QAE/B,yGAAgE;QAEhE,kHAMM;QAEN,uDACJ;QAAA,4DAAS;QACT,4EACyJ;QACrJ,8DAA6D;QAA7D,0EAA6D;QACzD,sEAE0B;QAC9B,4DAAM;QACN,+DAAM;QAAN,wEAAM;QAAA,8EAAkB;QAAA,4DAAO;QAO3C,iHA2CM;QACV,4DAAM;;QAxE0C,0DAAsB;QAAtB,mFAAsB;QAElD,0DAAgB;QAAhB,gFAAgB;QAEd,0DAAe;QAAf,+EAAe;QAQrB,0DACJ;QADI,6HACJ;QAeF,0DAAiB;QAAjB,iFAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BoD;AAIG;AAChB;AAQwB;AAE4B;AACpB;AACM;;;;;;;;;;;;;ICThG,0EAAgD;IACnB,yEAAa;IAAA,6DAAI;;;IAI9C,0EAA+D;IAClC,uFAAsB;IAAA,6DAAI;;;IAkDvB,wEAA+D;IAAA,gFACpD;IAAA,6DAAO;;;IAClB,wEAAgE;IAAA,8GAC7B;IAAA,6DAAO;;;IAL9C,2EACsC;IAClC,2IACkB;IAClB,2IAC0C;IAC9C,6DAAM;;;;;IAJK,2DAAsD;IAAtD,4LAAsD;IAEtD,2DAAuD;IAAvD,6LAAuD;;;IAU9D,wEAAqE;IAAA,uFACzC;IAAA,6DAAO;;;IACnC,wEAAsE;IAAA,qHACjB;IAAA,6DAAO;;;IALhE,2EACsC;IAClC,4IACmC;IACnC,4IAC4D;IAChE,6DAAM;;;;;IAJK,2DAA4D;IAA5D,kMAA4D;IAE5D,2DAA6D;IAA7D,mMAA6D;;;IAUpE,wEAAiE;IAAA,kFACtD;IAAA,6DAAO;;;IAHtB,2EACsC;IAClC,4IACkB;IACtB,6DAAM;;;;IAFK,2DAAwD;IAAxD,+LAAwD;;;;IAa/D,2EAAqE;IAC3C,0TAAS,iGAA8B,KAAC;IAE1D,oEAAoD;IACpD,6FACJ;IAAA,6DAAS;;;;IAEb,2EACiG;IAEzF,oEAA8C;IAC9C,4EAAkC;IAAA,wDAC0B;IAAA,6DAAO;IAEvE,2EAA4B;IACF,0TAAS,iGAA8B,KAAC;IAE1D,oEAAmC;IACvC,6DAAS;IACT,8EAC4C;IADtB,0TAAS,oFAAiB,KAAC;IAE7C,oEAA4B;IAChC,6DAAS;;;;IAXyB,2DAC0B;IAD1B,2KAC0B;;;;IAgBhF,2EACmE;IACzC,0TAAS,2EAAQ,KAAC;IAEpC,qEACJ;IAAA,6DAAS;IACT,8EACqH;IACjH,gFACJ;IAAA,6DAAS;;;IAHa,2DAA+C;IAA/C,yHAA+C;;;;IAjFjF,uEAAkC;IACI,uTAAY,kFAAe,KAAC;IAC1D,0EAAoC;IAAA,gFAAoB;IAAA,6DAAK;IAC7D,2EAAoC;IAE2B,iEAAK;IAAA,6DAAQ;IACpE,wEAC6G;IAC7G,mIAMM;IACV,6DAAM;IACN,wEAAK;IACsD,wEAAW;IAAA,6DAAQ;IAC1E,4EACsH;IACtH,qIAMM;IACV,6DAAM;IACN,wEAAK;IACsD,oEAAO;IAAA,6DAAQ;IACtE,4EACsH;IACtH,qIAIM;IACV,6DAAM;IAGN,4EAA4C;IACoB,uEAAU;IAAA,6DAAQ;IAC9E,0EAAsC;IAClC,gMAEJ;IAAA,6DAAI;IACJ,4EAAyC;IACrC,qIAMM;IACN,sIAiBM;IACV,6DAAM;IAGd,qIAUM;IACV,6DAAO;;;;;;;;IArFD,2DAA2B;IAA3B,4FAA2B;IAOf,2DAAgF;IAAhF,uOAAgF;IAYhF,2DAA4F;IAA5F,mPAA4F;IAY5F,2DAAoF;IAApF,2OAAoF;IAehF,2DAA8C;IAA9C,wJAA8C;IAO9C,2DAA6C;IAA7C,qJAA6C;IAqBzD,2DAAyB;IAAzB,6FAAyB;;;IA0BnC,2EAAgE;IAC5D,sEAA0F;IAC9F,6DAAM;;;;;IAyBM,sEAA+C;IAEQ,wDAAmB;IAAA,6DAAM;IAE5E,0EAAwC;IACD,wDAA8B;;IAAA,6DAAM;IAE3E,0EAAwC;IACD,yDAA4B;;IAAA,6DAAM;IAEzE,2EAAwC;IAOhC,yDACJ;IAAA,6DAAO;IAEX,2EAA4D;IAChD,+XAAS,2FAAoB,KAAC;IAElC,qEAA2B;IAC/B,6DAAS;IACT,+EAC4C;IADpC,+XAAS,6FAAsB,KAAC;IAEpC,qEAA4B;IAChC,6DAAS;;;;IA1BsC,2DAAmB;IAAnB,mFAAmB;IAG/B,2DAA8B;IAA9B,yJAA8B;IAG9B,2DAA4B;IAA5B,wJAA4B;IAI3D,2DAIE;IAJF,qTAIE;IACF,2DACJ;IADI,kHACJ;;;IAaR,sEAA4C;IAEpC,uFACJ;IAAA,6DAAK;;;IAxDrB,2EAAwD;IAMpC,kEAAK;IAAA,6DAAK;IACd,0EAC2F;IACvF,+EAAa;IAAA,6DAAK;IACtB,0EAC2F;IACvF,wEAAW;IAAA,6DAAK;IACpB,2EAC2F;IACvF,oEAAM;IAAA,6DAAK;IACf,2EAC2F;IACvF,qEAAO;IAAA,6DAAK;IAGxB,8EAAiD;IAC7C,2IA8BK;IACL,yIAIK;IACT,6DAAQ;;;IApCoB,4DAAqB;IAArB,gGAAqB;IA+BxC,2DAAqC;IAArC,0GAAqC;;;;IArE1D,uEAAsC;IAEC,oEAAQ;IAAA,6DAAK;IAC5C,8EACoJ;IAD9H,mTAAS,sFAAmB,KAAC;IAE/C,oEAAgC;IAChC,iFACJ;IAAA,6DAAS;IAIb,mIAEM;IAGN,oIA4DM;IACV,6DAAM;;;IAlEI,2DAAuB;IAAvB,2FAAuB;IAKC,2DAAwB;IAAxB,4FAAwB;;;IAsE1C,2EAA+D;IAC3D,wEACwD;IACxD,6EAA6D;IAEzB,wDAAc;IAAA,6DAAO;IAErD,2EAA2B;IACvB,oEAA4B;IAChC,6DAAM;;;IARU,2DAA6B;IAA7B,2FAA6B;IAE1C,2DAA8B;IAA9B,4FAA8B;IAED,2DAAc;IAAd,8EAAc;;;;IAQ1D,2EACmE;IACzC,yTAAS,kFAAe,KAAC;IAE3C,qEACJ;IAAA,6DAAS;IACT,8EACqH;IACjH,gFACJ;IAAA,6DAAS;;;IAHa,2DAAiC;IAAjC,mGAAiC;;;IAoB3C,4EAA0D;IAAA,wDACnC;IAAA,6DAAO;;;IAD4B,2DACnC;IADmC,uFACnC;;;;IARnC,2EAAqD;IAG7C,wXAAU,4FAAqB,KAAC;IAFpC,6DAE8D;IAC9D,6EAAuD;IAEtB,wDAAgB;IAAA,6DAAO;IAChD,4IAC8B;IAClC,6DAAM;IACN,2EAAwB;IACpB,oEAA4B;IAChC,6DAAM;;;;IAXa,2DAA0B;IAA1B,wFAA0B;IAG1C,2DAA2B;IAA3B,yFAA2B;IAED,2DAAgB;IAAhB,gFAAgB;IAClC,2DAAuB;IAAvB,wFAAuB;;;;IAS9C,2EACmE;IACzC,0TAAS,oFAAiB,KAAC;IAE7C,qEACJ;IAAA,6DAAS;IACT,8EACqH;IACjH,gFACJ;IAAA,6DAAS;;;IAHa,2DAA8B;IAA9B,gGAA8B;;;;IA5DpE,2EAAsD;IAEjB,uTAAY,mFAAgB,KAAC;IAC1D,2EAAkB;IACqB,0EAAS;IAAA,6DAAK;IACjD,2EAAmD;IAC/C,mIAWM;IACV,6DAAM;IACN,mIAUM;IACV,6DAAM;IAIV,4EAA0D;IAA5B,uTAAY,iFAAc,KAAC;IACrD,uEAAK;IACkC,2EAAc;IAAA,6DAAK;IACtD,4EAAmD;IAC/C,qIAcM;IACV,6DAAM;IACN,qIAUM;IACV,6DAAM;;;IA/DJ,2DAA0B;IAA1B,2FAA0B;IAIM,2DAAa;IAAb,uFAAa;IAarC,2DAAwB;IAAxB,4FAAwB;IAehC,2DAAuB;IAAvB,wFAAuB;IAIM,2DAAS;IAAT,mFAAS;IAgB9B,2DAAyB;IAAzB,6FAAyB;;;;IAiDP,2EAAyD;IAC/B,oZAAS,iGAA0B,KAAC;IAEtD,oEAAoD;IACpD,uFACJ;IAAA,6DAAS;;;;IAEb,4EAC4E;IAEpE,qEAAwD;IACxD,4EAAkC;IAAA,wDACc;IAAA,6DAAO;IAE3D,2EAA4B;IAEpB,oZAAS,iGAA0B,KAAC;IAEpC,oEAAmC;IACvC,6DAAS;IACT,8EAC4C;IADtB,oZAAS,oFAAa,KAAC;IAEzC,oEAA4B;IAChC,6DAAS;;;;;IAZyB,2DACc;IADd,2JACc;;;;IAwBxD,4EAC0E;IAElE,uEAC2C;IAC3C,0EACyC;IACrC,wDAEJ;IAAA,6DAAI;IAER,8EAE4C;IADxC,6dAAS,6GAAkC,KAAC;IAE5C,oEAA4B;IAChC,6DAAS;;;;IAZA,2DAAoC;IAApC,wKAAoC;IAEtC,2DAAwB;IAAxB,oJAAwB;IAEvB,2DAEJ;IAFI,yJAEJ;;;IAVZ,4EAA6D;IACzD,iJAgBM;IACV,6DAAM;;;;IAjB0B,2DAA4B;IAA5B,yGAA4B;;;;IAkCxD,4EAC0D;IAG9C,qEAA6C;IAC7C,4EAAkC;IAAA,wDACN;IAAA,6DAAO;IAEvC,6EAAoC;IAAA,wDACQ;IAAA,6DAAO;IAEvD,+EACgL;IAD1J,oZAAS,oFAAa,KAAC;IAEzC,qEAAkC;IAClC,oFACJ;IAAA,6DAAS;;;;IAViC,2DACN;IADM,mGACN;IAEI,2DACQ;IADR,2HACQ;;;IAUpD,4EAA+D;IAEvD,wIAEJ;IAAA,6DAAI;;;IAcA,wEAAsC;IAAA,gGAC1B;IAAA,6DAAO;;;IACnB,6EAC2B;IACvB,qEAAwC;IACxC,kGACJ;IAAA,6DAAO;;;IAhBf,4EAAyC;IAG7B,uEAC8C;IAClD,6DAAM;IAEV,4EACoE;IAC1D,wDAAgC;IAAA,6DAAO;IAC7C,kJACmB;IACnB,mJAIO;IACX,6DAAM;;;;IAbM,2DAAmC;IAAnC,uGAAmC;IAKrC,2DAAgC;IAAhC,sHAAgC;IAC/B,2DAA6B;IAA7B,sGAA6B;IAE7B,2DAA+B;IAA/B,wGAA+B;;;;IAnItE,4EAC0D;IAKiB,iEAAK;IAAA,6DAAQ;IACpE,wEAC6G;IACjH,6DAAM;IACN,uEAAK;IAEmD,wEAAW;IAAA,6DAAQ;IACvE,6EACsH;IAC1H,6DAAM;IAGN,wEAAK;IAC2D,8EACjD;IAAA,6DAAQ;IACnB,4EAAyC;IACrC,2IAMM;IACN,6IAkBM;IACV,6DAAM;IAIV,wEAAK;IAC2D,gFACjD;IAAA,6DAAQ;IAGnB,4IAkBM;IAGN,6EAAkB;IAEV,sXAAU,gGAAyB,KAAC;IADxC,6DAEyF;IAGzF,+EAEgC;IAA5B,qTAAS,uEAAiB,KAAC;IAC3B,sEAAqC;IACrC,iFACJ;IAAA,6DAAQ;IAGR,6IAgBM;IAGN,4IAKM;IAGN,4IAkBM;IACV,6DAAM;IAIlB,6EAAqC;IAE7B,sEAAkD;IACtD,6DAAM;IACN,gFACsE;IADhD,+WAAS,6FAAkB,CAAC,CAAC,KAAC;IAEhD,sEAA+B;IACnC,6DAAS;IACT,gFAEsE;IAFhD,+WAAS,6FAAkB,CAAC,CAAC,KAAC;IAGhD,sEAAiC;IACrC,6DAAS;IACT,gFACgD;IAD1B,+WAAS,sFAAe,KAAC;IAE3C,qEAA4B;IAChC,6DAAS;IAGjB,6EAAwC;IACpC,yDACJ;IAAA,6DAAM;;;;;;;;IAnKkD,iFAAmB;IAsBjD,4DAAkC;IAAlC,yIAAkC;IAOlC,2DAAiC;IAAjC,sIAAiC;IA4BrC,2DAAwC;IAAxC,iHAAwC;IA2BnC,2DAAuB;IAAvB,uGAAuB;IAQxB,2DAAsB;IAAtB,+FAAsB;IAmBtB,2DAA0C;IAA1C,+HAA0C;IAQ1C,2DAAoB;IAApB,6FAAoB;IA2Be,2DAAoB;IAApB,kFAAoB;IAKrE,2DAAqC;IAArC,2GAAqC;IAW7C,2DACJ;IADI,8JACJ;;;IAEJ,4EAAyE;IACrE,wIACJ;IAAA,6DAAM;;;;IAEV,4EAAmE;IACzC,0TAAS,6EAAU,KAAC;IAEtC,qEACJ;IAAA,6DAAS;IACT,+EACiG;IAD3E,0TAAS,kFAAe,KAAC;IAE3C,qFACJ;IAAA,6DAAS;;;;IA5LrB,uEAAqC;IAGM,mEAAO;IAAA,6DAAK;IAC3C,8EACoJ;IAD9H,oTAAS,8EAAW,KAAC;IAEvC,oEAAgC;IAChC,+EACJ;IAAA,6DAAS;IAEb,2EAA+C;IAC3C,qIAoKM;IACN,qIAEM;IACV,6DAAM;IACN,qIASM;IACV,6DAAO;;;IA7LD,2DAAyB;IAAzB,0FAAyB;IAUC,2DAAqB;IAArB,6FAAqB;IAqKvC,2DAA0B;IAA1B,8FAA0B;IAI9B,2DAAmB;IAAnB,uFAAmB;;;IAcjC,uEAAqC;IACG,uFAAsB;IAAA,6DAAK;IAC/D,4EAAmD;IACtB,qHAA+C;IAAA,6DAAI;;;;;IAzdhG,0EAAiD;IAKzB,6SAAS,iFAAa,MAAM,CAAC,KAAC;IAGlC,kFACJ;IAAA,6DAAS;IACT,8EAEwE;IAFhE,6SAAS,iFAAa,UAAU,CAAC,KAAC;IAGtC,sEACJ;IAAA,6DAAS;IACT,8EAEwE;IAFhE,6SAAS,iFAAa,QAAQ,CAAC,KAAC;IAGpC,uFACJ;IAAA,6DAAS;IACT,+EAEwE;IAFhE,8SAAS,iFAAa,SAAS,CAAC,KAAC;IAGrC,sEACJ;IAAA,6DAAS;IACT,+EAEwE;IAFhE,8SAAS,iFAAa,SAAS,CAAC,KAAC;IAGrC,0FACJ;IAAA,6DAAS;IAKjB,4EAAiB;IAEb,+HAuFM;IAGN,8HA6EM;IAGN,+HAmEM;IAGN,+HA+LM;IAGN,8HAKM;IACV,6DAAM;;;IAtdM,2DAAqK;IAArK,uMAAqK;IAKrK,2DAA6K;IAA7K,+MAA6K;IAK7K,2DAAyK;IAAzK,2MAAyK;IAKzK,2DAA2K;IAA3K,6MAA2K;IAK3K,2DAA2K;IAA3K,6MAA2K;IAU7K,2DAA0B;IAA1B,8FAA0B;IA0F1B,2DAA8B;IAA9B,kGAA8B;IAgF9B,2DAA4B;IAA5B,gGAA4B;IAsE5B,2DAA6B;IAA7B,iGAA6B;IAkM7B,2DAA6B;IAA7B,iGAA6B;;ADhdhD,MAAM,wBAAwB;IA+BnC,YACU,EAAe,EACf,gBAAkC,EAClC,YAA0B,EAC1B,iBAAoC,EACpC,eAAiC,EACjC,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,OAAuB,EACvB,MAAiB;QATjB,OAAE,GAAF,EAAE,CAAa;QACf,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAkB;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAW;QAvC3B,eAAU,GAAG,4FAAoB,CAAC;QAClC,mBAAc,GAAG;YACf,0FAAsB;YACtB,+FAA2B;YAC3B,uFAAmB;YACnB,uFAAmB;YACnB,yFAAqB;YACrB,oFAAgB;SACjB,CAAC;QAMF,cAAS,GAAqB,IAAI,CAAC;QACnC,WAAM,GAAY,EAAE,CAAC;QACrB,YAAO,GAAW,EAAE,CAAC;QACrB,cAAS,GAAG,IAAI,CAAC;QAEjB,cAAS,GAAW,MAAM,CAAC;QAC3B,kBAAa,GAA4B,EAAE,CAAC;QAC5C,mBAAc,GAA8B,EAAE,CAAC;QAC/C,gBAAW,GAA+B,EAAE,CAAC;QAC7C,mBAAc,GAAW,CAAC,CAAC;QAC3B,sBAAiB,GAAY,KAAK,CAAC;QAE3B,kBAAa,GAAmB,EAAE,CAAC;QAezC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,OAAO,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YAClC,WAAW,EAAE,CAAC,IAAI,CAAC;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC5B,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC3B,CAAC;IAEJ,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;IACrD,CAAC;IAED,IAAI,aAAa;QACf,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QAChE,OAAO,UAAU,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM;YAC7C,UAAU,CAAC,IAAI,CAAC,CAAC,EAAU,EAAE,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,QAAQ;QACN,uBAAuB;QACvB,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YACpE,yCAAyC;YACzC,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;aACrC;YAED,8CAA8C;YAC9C,IAAI,WAAW,CAAC,QAAQ,CAAC,EAAE;gBACzB,IAAI,CAAC,cAAc,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC7C,uEAAuE;gBACvE,UAAU,CAAC,GAAG,EAAE;oBACd,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC1C,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAExC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,qDAAqD;QACrD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED;;OAEG;IACH,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YACtC,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE;gBAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACzB,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;gBAC/C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,iCAAiC,CAAC,CAAC;YACtE,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,mDAAmD;QACnD,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;YACnC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,OAAO,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED;;OAEG;IACH,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,KAAK;YACtB,WAAW,EAAE;gBACX,GAAG,EAAE,IAAI,CAAC,SAAS;gBACnB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC;aACxC;YACD,mBAAmB,EAAE,OAAO;YAC5B,UAAU,EAAE,IAAI,CAAC,wDAAwD;SAC1E,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,OAAe;QAC1B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,WAAW;QACT,+BAA+B;QAC/B,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAE/D,qCAAqC;QACrC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,iBAAiB;QACf,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kHAAqB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE;SACxC,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,EAAE;gBACV,yEAAyE;gBACzE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;aACjE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,OAAY;QACtB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kHAAqB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,OAAO,EAAE,OAAO;aACjB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,EAAE;gBACV,6EAA6E;gBAC7E,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,iCAAiC,CAAC,CAAC;aACvE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,OAAY;QACxB,IAAI,OAAO,CAAC,kDAAkD,OAAO,CAAC,KAAK,oCAAoC,CAAC,EAAE;YAChH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;gBACvD,IAAI,EAAE,GAAG,EAAE;oBACT,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,+BAA+B,CAAC,CAAC;oBACpE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,CAAC;gBACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;oBACpB,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;oBAChD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBACpC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBACjC,CAAC;aACF,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,OAAY;QAC3B,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC9C,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE1C,IAAI,GAAG,GAAG,OAAO,EAAE;YACjB,OAAO,UAAU,CAAC;SACnB;aAAM,IAAI,GAAG,GAAG,SAAS,EAAE;YAC1B,OAAO,YAAY,CAAC;SACrB;aAAM;YACL,OAAO,UAAU,CAAC;SACnB;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;YAC7D,IAAI,EAAE,CAAC,SAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAE3B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAE7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBAC3B,QAAQ,EAAE,SAAS,CAAC,QAAQ;iBAC7B,CAAC,CAAC;gBAEH,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBAC3B,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;gBAEH,gDAAgD;gBAChD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gBACrB,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACjC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACjC,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,qCAAqC,CAAC,CAAC;gBACxE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACjC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;YACtC,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE;gBACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,oCAAoC,CAAC,CAAC;YACzE,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,SAAoB;QAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;YAC5B,KAAK,EAAE,SAAS,CAAC,KAAK;YACtB,WAAW,EAAE,SAAS,CAAC,WAAW;YAClC,OAAO,EAAE,SAAS,CAAC,OAAO;YAC1B,WAAW,EAAE,SAAS,CAAC,WAAW;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC;QACpF,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ;SACnC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,wBAAwB;QACtB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gIAAyB,EAAE;YAC5D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,WAAW,EAAE,IAAI;aAClB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,+CAA+C;aAChD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,mDAAmD;QACnD,MAAM,QAAQ,GAAG;YACf,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;SACpC,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC;YACjF,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,gDAAgD,CAAC,CAAC;gBACrF,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAE,mBAAmB;YACvC,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YACjG,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,yCAAyC,CAAC,CAAC;gBAC/E,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAE,mBAAmB;YACvC,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC;SACF,CAEA,CAAC;IACJ,CAAC;IACD,YAAY;QACV,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YAC5F,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,uCAAuC,CAAC,CAAC;gBAC7E,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAE,mBAAmB;YACvC,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;IACtD,CAAC;IAED,qBAAqB;QACnB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,CAAC,IAAI,CAAC;YACV,WAAW,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,gEAAmB,CAAC;YACxD,MAAM,EAAE,CAAC,IAAI,CAAC;SACf,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YAC/C,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU,CAAC,SAAiB,EAAE,OAAe;QAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACf,WAAW,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC;YACjC,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YACrE,WAAW,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAClF,QAAQ,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,gEAAmB,CAAC;YAChD,MAAM,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;SACxB,CAAC,CAAC,CAAC;IACN,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAC1B,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBAC/F,IAAI,EAAE,GAAG,EAAE;oBACT,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,gCAAgC,CAAC,CAAC;oBACrE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAE,mBAAmB;gBACvC,CAAC;gBACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;oBACpB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBACtC,CAAC;aACF,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,0CAA0C,CAAC,CAAC;SAC9E;IACH,CAAC;IAED;;;;OAIG;IACH,oBAAoB,CAAC,WAAmB;QACtC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;YAAE,OAAO,EAAE,CAAC;QAE1D,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC;QAC/D,IAAI,CAAC,QAAQ;YAAE,OAAO,EAAE,CAAC;QAEzB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC;QACnE,OAAO,MAAM,EAAE,WAAW,IAAI,EAAE,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,QAAgB;QAC1B,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;IAED;;;;OAIG;IACH,cAAc,CAAC,KAAY,EAAE,WAAmB;QAC9C,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;QAC/C,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAClD;IACH,CAAC;IAED;;;;OAIG;IACH,cAAc,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,WAAmB;QAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI;YAAE,OAAO;QAElB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC;QAC/D,IAAI,CAAC,QAAQ,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,8EAA8E,CAAC,CAAC;YACjH,OAAO;SACR;QAED,sBAAsB;QACtB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QAErC,sBAAsB;QACtB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAErC,cAAc;QACd,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC;YAChE,IAAI,EAAE,GAAG,EAAE;gBACT,0BAA0B;gBAC1B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;gBAEvC,uBAAuB;gBACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,gCAAgC,CAAC,CAAC;gBAErE,qCAAqC;gBACrC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAEhB,6BAA6B;gBAC7B,UAAU,CAAC,GAAG,EAAE;oBACd,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBACvC,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;oBACxC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACvC,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,eAAe;gBACf,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;gBACxC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBAErC,qBAAqB;gBACrB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,YAAoB,EAAE,YAAgC;QACrE,IAAI,CAAC,YAAY;YAAE,OAAO;QAE1B,IAAI,OAAO,CAAC,wFAAwF,CAAC,EAAE;YACrG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC;gBAC9D,IAAI,EAAE,GAAG,EAAE;oBACT,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,oCAAoC,CAAC,CAAC;oBACzE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,CAAC;gBACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;oBACpB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBACtC,CAAC;aACF,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;;OAGG;IACH,uBAAuB,CAAC,WAAmB;QACzC,8DAA8D;QAC9D,MAAM,eAAe,GAAa,EAAE,CAAC;QAErC,4CAA4C;QAC5C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YAC/C,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC;YAC5C,IAAI,MAAM,IAAI,KAAK,KAAK,WAAW,EAAE;gBACnC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;QAEH,qDAAqD;QACrD,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC;QAEzE,kBAAkB;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4GAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,eAAe;gBACf,OAAO,EAAE,QAAQ;gBACjB,cAAc;aACf;SACF,CAAC,CAAC;QAEH,oBAAoB;QACpB,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvC,IAAI,IAAI,EAAE;gBACR,6BAA6B;gBAC7B,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC7D,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,WAAmB;QAC5B,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,MAAqB;QAChC,IAAI,CAAC,MAAM;YAAE,OAAO,wBAAwB,CAAC;QAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC;IAC5C,CAAC;IAED;;OAEG;IACH,4BAA4B;QAC1B,wDAAwD;QACxD,MAAM,eAAe,GAAa,EAAE,CAAC;QAErC,sCAAsC;QACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACtC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC;YAC5C,IAAI,MAAM,EAAE;gBACV,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;QAEH,2CAA2C;QAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC;QAEpE,kBAAkB;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4GAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,eAAe;gBACf,OAAO,EAAE,WAAW;gBACpB,cAAc;aACf;SACF,CAAC,CAAC;QAEH,oBAAoB;QACpB,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvC,IAAI,IAAI,EAAE;gBACR,qCAAqC;gBACrC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;;gGA1qBU,wBAAwB;uHAAxB,wBAAwB;QCzBrC,0EAA+B;QAI0B,iFAAqB;QAAA,6DAAK;QACvE,wEAAsC;QAAA,+GAA8C;QAAA,6DAAI;QAI5F,qHAEM;QAGN,qHAEM;QAGN,uHA8dM;QACV,6DAAM;;QAzeI,2DAAe;QAAf,gFAAe;QAKf,2DAA8B;QAA9B,mGAA8B;QAKlB,2DAA6B;QAA7B,kGAA6B;;;;;;;;;;;;;;;;;;ACZhD,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;2GAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;ACC6D;;;;;;;ICOnE,0EAA2G;IACvG,8GACJ;IAAA,4DAAM;;;;IAmBM,6EAC4C;IADO,2YAAS,iGAA6B,KAAC;IAEtF,mEAA4B;IAChC,4DAAS;;;IAUL,0EACiC;IAC7B,gGACJ;IAAA,4DAAM;;;IAMN,0EACiC;IAC7B,uHACJ;IAAA,4DAAM;;;IAyBE,0EACiC;IAC7B,uGACJ;IAAA,4DAAM;;;;IAQV,6EAE4C;IADxC,gfAAS,iHAAwC,KAAC;IAElD,mEAA4B;IAChC,4DAAS;;;IArBb,0EACqE;IAE7D,uEAEmD;IACnD,8HAGM;IACV,4DAAM;IAEN,0EAAmC;IAC/B,uEAC8E;IAClF,4DAAM;IAEN,qIAIS;IACb,4DAAM;;;;;;IArBF,0FAA6B;IAIrB,0DAA8C;IAA9C,gHAA8C;IAC5C,0DAAsI;IAAtI,0SAAsI;IAWvI,0DAA0C;IAA1C,gHAA0C;;;;IAjEnE,0EAC4E;IAE5C,uDAA8B;IAAA,4DAAK;IAC3D,8HAGS;IACb,4DAAM;IAGN,0EAAwB;IAEuC,+EAAoB;IAAA,4DAAQ;IACnF,uEAEiD;IACjD,yHAGM;IACV,4DAAM;IACN,2EAA6B;IAC8B,kEAAM;IAAA,4DAAQ;IACrE,wEACmH;IACnH,yHAGM;IACV,4DAAM;IAOV,0EAAuB;IAES,yEAAQ;IAAA,4DAAK;IACrC,6EACyO;IADnN,sWAAS,6FAAwB,KAAC;IAEpD,oEAAuC;IACvC,sFACJ;IAAA,4DAAS;IAGb,2EAA+C;IAC3C,0HAsBM;IACV,4DAAM;;;;;;IAtEV,2FAA+B;IAEH,0DAA8B;IAA9B,uGAA8B;IAC7C,0DAA0B;IAA1B,6FAA0B;IAazB,0DAA4G;IAA5G,wQAA4G;IAS5G,0DAA8G;IAA9G,0QAA8G;IAsB5F,0DAAuC;IAAvC,iHAAuC;;;IAoC3E,mEAAsE;;ADnG/E,MAAM,oBAAoB;IAI/B,YACU,EAAe,EACf,MAAc,EACd,WAAwB;QAFxB,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QALlC,cAAS,GAAG,KAAK,CAAC;QAOhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvB,IAAI,CAAC,cAAc,EAAE;aACtB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,KAAW,CAAC;IAEpB,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;IACrD,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,+DAAmB,EAAE,0DAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,KAAK,EAAE,CAAC,CAAC,CAAC;YACV,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,YAAY,EAAE;aACpB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC/B,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IAED,UAAU,CAAC,aAAqB;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;IACtE,CAAC;IAED,SAAS,CAAC,aAAqB;QAC7B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,YAAY,CAAC,aAAqB,EAAE,WAAmB;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SAC/B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBACzD,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;oBACjB,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;oBACpD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;gBACxC,CAAC;gBACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;oBACf,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,CAAC;aACF,CAAC,CAAC;SACJ;aAAM;SACN;QAGD,OAAO,CAAC,GAAG,CACT,IAAI,CAAC,QAAQ,CAAC,KAAK,CACpB;IACH,CAAC;;wFAxFU,oBAAoB;kHAApB,oBAAoB;QCVjC,yEAA2B;QACM,gJAAY,cAAU,IAAC;QAEhD,yEAAuB;QAC6B,wEAAa;QAAA,4DAAQ;QACrE,sEAE0C;QAC1C,gHAEM;QACV,4DAAM;QAGN,yEAAuB;QAEiB,qEAAS;QAAA,4DAAK;QAC9C,6EACyO;QADnN,6IAAS,iBAAa,IAAC;QAEzC,oEAAuC;QACvC,kFACJ;QAAA,4DAAS;QAGb,2EAAiD;QAC7C,oHAyEM;QACV,4DAAM;QAIV,2EAA8B;QAMtB,+GAAsE;QACtE,wDACJ;QAAA,4DAAS;;;QA9GX,0DAAsB;QAAtB,mFAAsB;QAOd,0DAAsE;QAAtE,sNAAsE;QAiB9C,0DAAuB;QAAvB,2FAAuB;QAgFjD,0DAA0C;QAA1C,2GAA0C;QAItC,0DAAe;QAAf,+EAAe;QACnB,0DACJ;QADI,qIACJ;;;;;;;;;;;;;;;;;;;;;;;;;IE7GR,yEAAiF;IAC/E,oEAAuG;IACvG,uEAAkD;IAAA,+EAAoB;IAAA,4DAAI;;;IA+BlE,2EAAoF;IAClF,8DAAmH;IAAnH,0EAAmH;IACjH,sEAAgG;IAClG,4DAAM;IACN,oEACF;IAAA,4DAAO;;;IAZX,0EAI6C;IAEb,uDAAqC;IAAA,4DAAO;IACxE,qIAKO;IACT,4DAAM;;;IAXH,8FAAuC;IAIZ,0DAAqC;IAArC,mGAAqC;IAC1D,0DAAsB;IAAtB,qFAAsB;;;IAbrC,0EAAsK;IAEtD,uDAAW;IAAA,4DAAO;IAC9H,uDACF;IAAA,4DAAK;IACL,0EAAuB;IACrB,6HAcM;IACR,4DAAM;;;;IAnBwG,0DAAW;IAAX,yEAAW;IACvH,0DACF;IADE,6FACF;IAE0B,0DAAmB;IAAnB,wFAAmB;;;IAfjD,yEAAiG;IAE7F,uDACF;IAAA,4DAAK;IACL,uEAAqC;IACnC,uDACF;;IAAA,4DAAI;IAGJ,sHAsBM;IACR,4DAAM;;;IA9BF,0DACF;IADE,gHACF;IAEE,0DACF;IADE,6LACF;IAG0B,0DAAmB;IAAnB,0FAAmB;;ADZ5C,MAAM,oBAAoB;IAI7B,YACY,KAAqB,EACrB,WAAwB;QADxB,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QALpC,SAAI,GAAgB,IAAI,CAAC;QACzB,cAAS,GAAG,IAAI,CAAC;IAKb,CAAC;IAEL,QAAQ;QACJ,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC;YACvC,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE;gBACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAC3B,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACb,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;gBAC7C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAC3B,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;;wFArBQ,oBAAoB;kHAApB,oBAAoB;QCV/B,yEAAuB;QAErB,gHAGM;QAQN,gHAgCM;QACR,4DAAM;;QA5CE,0DAAe;QAAf,+EAAe;QAWf,0DAAwB;QAAxB,4FAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;IENlB,mEAAgE;;;IAEhE,8DACwB;IADxB,0EACwB;IACpB,wEAAkG;IAItG,4DAAM;;;;;;;IAqDF,yEAAkE;IAE1D,uDACJ;IAAA,4DAAK;IACL,yEAAwC;IACW,uDAAc;IAAA,4DAAM;IAEvE,yEAAwC;IAGhC,uDACJ;IAAA,4DAAO;IAEX,yEAA8D;IAC1D,wDACJ;;IAAA,4DAAK;IACL,0EAA4D;IAIhD,oEAA+B;IACnC,4DAAS;IACT,8EAC8C;IAC1C,oEAA2B;IAC/B,4DAAS;IACT,8EAC8C;IAC1C,oEAAmC;IACvC,4DAAS;IACT,8EAA2E;IAAnE,wVAAS,oFAAgB,KAAC;IAC9B,oEAA4B;IAChC,4DAAS;;;IA9Bb,0DACJ;IADI,sFACJ;IAEmD,0DAAc;IAAd,8EAAc;IAKzD,0DACJ;IADI,8GACJ;IAGA,0DACJ;IADI,8KACJ;IAGgB,0DAAwC;IAAxC,0JAAwC;IAIxC,0DAA6C;IAA7C,0JAA6C;IAI7C,0DAAiD;IAAjD,0JAAiD;;;IAUrE,qEAAuD;IAG3C,mEAA2D;IAC3D,wEAAkD;IAAA,iFAAiB;IAAA,4DAAI;;;ADtGvG,qBAAqB;AACrB,gBAAgB;AAChB,kBAAkB;AAClB,wBAAwB;AACxB,wBAAwB;AACxB,qBAAqB;AACrB,4BAA4B;AAC5B,4BAA4B;AAC5B,qBAAqB;AACrB,IAAI;AAEJ,uBAAuB;AACvB,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;AACpB,mBAAmB;AACnB,qBAAqB;AACrB,4BAA4B;AAC5B,4BAA4B;AAC5B,qBAAqB;AACrB,uBAAuB;AACvB,IAAI;AAEJ,mBAAmB;AACnB,gBAAgB;AAChB,mBAAmB;AACnB,qBAAqB;AACrB,4BAA4B;AAC5B,4BAA4B;AAC5B,qBAAqB;AACrB,2BAA2B;AAC3B,IAAI;AAOG,MAAM,cAAc;IAMzB,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QANlC,YAAO,GAAW,EAAE;QACpB,cAAS,GAAG,KAAK;QAEjB,eAAU,GAAW,EAAE,CAAC;IAIrB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAChC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CACjE,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YACtC,IAAI,EAAE,CAAC,MAAM,EAAC,EAAE;gBACZ,IAAI,CAAC,UAAU,GAAE,EAAE;gBACnB,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YAC1B,CAAC;SACF,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,iCAAiC;IACnC,CAAC;IAED,QAAQ,CAAC,IAAU;QACjB,qCAAqC;IACvC,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,uCAAuC;IACzC,CAAC;;4EAzCU,cAAc;4GAAd,cAAc;QC5C3B,yEAAmC;QAGkB,2EAAgB;QAAA,4DAAK;QAClE,yEAAwB;QACZ,sIAAS,iBAAa,IAAC;QAE3B,sGAAgE;QAEhE,+GAMM;QAEN,uDACJ;QAAA,4DAAS;QACT,4EACmH;QAC/G,mEAA2B;QAC3B,gFACJ;QAAA,4DAAS;QAKjB,0EAAkB;QAGN,oEAA2C;QAC/C,4DAAM;QACN,6EAEiE;QAAzB,uLAAwB;QAFhE,4DAEiE;QAKzE,2EAAwD;QAOhC,gEACJ;QAAA,4DAAK;QACL,0EAC2F;QACvF,mEACJ;QAAA,4DAAK;QACL,0EAC2F;QACvF,uEACJ;QAAA,4DAAK;QACL,0EAC2F;QACvF,mFACJ;QAAA,4DAAK;QACL,0EAC2F;QACvF,qEACJ;QAAA,4DAAK;QAGb,6EAAiD;QAC7C,6GAmCK;QACL,2GAOK;QACT,4DAAQ;;QA3GoB,0DAAsB;QAAtB,mFAAsB;QAE9C,0DAAgB;QAAhB,gFAAgB;QAEd,0DAAe;QAAf,+EAAe;QAQrB,0DACJ;QADI,6HACJ;QACQ,0DAAyB;QAAzB,6IAAyB;QAgBO,0DAAwB;QAAxB,mFAAwB;QAiCnC,2DAAkB;QAAlB,wFAAkB;QAoClC,0DAAgD;QAAhD,oHAAgD;;;;;;;;;;;;;;;;;;;;;ACvGM;;;;;;;ICOnE,0EAA2G;IACvG,8GACJ;IAAA,4DAAM;;;;IAmBM,6EAC4C;IADO,2YAAS,iGAA6B,KAAC;IAEtF,mEAA4B;IAChC,4DAAS;;;IAUL,0EACiC;IAC7B,gGACJ;IAAA,4DAAM;;;IAMN,0EACiC;IAC7B,uHACJ;IAAA,4DAAM;;;IAsBE,0EACiC;IAC7B,uGACJ;IAAA,4DAAM;;;;IAQV,6EAE4C;IADxC,gfAAS,iHAAwC,KAAC;IAElD,mEAA4B;IAChC,4DAAS;;;IArBb,0EACqE;IAE7D,uEAEmD;IACnD,8HAGM;IACV,4DAAM;IAEN,0EAAmC;IAC/B,uEAC8E;IAClF,4DAAM;IAEN,qIAIS;IACb,4DAAM;;;;;;IArBF,0FAA6B;IAIrB,0DAA8C;IAA9C,gHAA8C;IAC5C,0DAAsI;IAAtI,0SAAsI;IAWvI,0DAA0C;IAA1C,gHAA0C;;;;IA9DnE,0EAC4E;IAE5C,uDAA8B;IAAA,4DAAK;IAC3D,8HAGS;IACb,4DAAM;IAGN,0EAAwB;IAEuC,+EAAoB;IAAA,4DAAQ;IACnF,uEAEiD;IACjD,yHAGM;IACV,4DAAM;IACN,2EAA6B;IAC8B,kEAAM;IAAA,4DAAQ;IACrE,wEACmH;IACnH,yHAGM;IACV,4DAAM;IAIV,0EAAuB;IAES,yEAAQ;IAAA,4DAAK;IACrC,6EACyO;IADnN,sWAAS,6FAAwB,KAAC;IAEpD,oEAAuC;IACvC,sFACJ;IAAA,4DAAS;IAGb,2EAA+C;IAC3C,0HAsBM;IACV,4DAAM;;;;;;IAnEV,2FAA+B;IAEH,0DAA8B;IAA9B,uGAA8B;IAC7C,0DAA0B;IAA1B,6FAA0B;IAazB,0DAA4G;IAA5G,wQAA4G;IAS5G,0DAA8G;IAA9G,0QAA8G;IAmB5F,0DAAuC;IAAvC,iHAAuC;;;IAoC3E,mEAAsE;;ADhG/E,MAAM,oBAAoB;IAK/B,YACU,EAAe,EACf,MAAc,EACd,KAAqB,EACrB,WAAwB;QAHxB,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QAPlC,cAAS,GAAG,KAAK,CAAC;QAShB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC7B,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;QACrD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9B;IAEH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC;YAC9C,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAa,EAAE,EAAE;oBACvC,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC5C,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;oBACnC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;gBAC5C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;IACrD,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,+DAAmB,EAAE,0DAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,KAAK,EAAE,CAAC,CAAC,CAAC;YACV,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC/B,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IAED,UAAU,CAAC,aAAqB;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;IACtE,CAAC;IAED,SAAS,CAAC,aAAqB;QAC7B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,YAAY,CAAC,aAAqB,EAAE,WAAmB;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SAC/B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBACtE,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;oBACjB,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;oBACpD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzC,CAAC;gBACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;oBACf,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;oBAC7C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,CAAC;aACF,CAAC,CAAC;SACJ;IACH,CAAC;;wFA3GU,oBAAoB;kHAApB,oBAAoB;QCVjC,yEAA2B;QACM,gJAAY,cAAU,IAAC;QAEhD,yEAAuB;QAC4B,wEAAa;QAAA,4DAAQ;QACpE,sEAE0C;QAC1C,gHAEM;QACV,4DAAM;QAGN,yEAAuB;QAEiB,qEAAS;QAAA,4DAAK;QAC9C,6EACyO;QADnN,6IAAS,iBAAa,IAAC;QAEzC,oEAAuC;QACvC,kFACJ;QAAA,4DAAS;QAGb,2EAAiD;QAC7C,oHAsEM;QACV,4DAAM;QAIV,2EAA8B;QAMtB,+GAAsE;QACtE,wDACJ;QAAA,4DAAS;;;QA3GX,0DAAsB;QAAtB,mFAAsB;QAOd,0DAAsE;QAAtE,sNAAsE;QAiB9C,0DAAuB;QAAvB,2FAAuB;QA6EjD,0DAA0C;QAA1C,2GAA0C;QAItC,0DAAe;QAAf,+EAAe;QACnB,0DACJ;QADI,gJACJ;;;;;;;;;;;;;;;;;;;;;;ACvG4F;;;;;;;ICCxF,mEAAgE;;;IAEhE,8DACwB;IADxB,0EACwB;IACpB,wEAAkG;IAItG,4DAAM;;;IAoCM,2EAAyD;IAAA,iEAAC;IAAA,4DAAO;;;IACjE,2EAAyD;IAAA,iEAAC;IAAA,4DAAO;;;IACjE,2EAA2D;IAAA,iEAAC;IAAA,4DAAO;;;;IAd/E,yEAAsD;IAChB,uDAAgB;IAAA,4DAAK;IACvD,yEAAsB;IAAA,uDAAmB;IAAA,4DAAK;IAC9C,yEAAsB;IAAA,uDAA6B;IAAA,4DAAK;IACxD,yEAAsB;IAAA,uDAAmC;IAAA,4DAAK;IAC9D,yEAAsB;IAAA,wDAAiC;IAAA,4DAAK;IAC5D,0EAAsB;IAMd,uHAAiE;IACjE,uHAAiE;IACjE,uHAAmE;IACnE,wDACJ;IAAA,4DAAO;;;;IAfuB,0DAAgB;IAAhB,8EAAgB;IAC5B,0DAAmB;IAAnB,iFAAmB;IACnB,0DAA6B;IAA7B,2FAA6B;IAC7B,0DAAmC;IAAnC,wGAAmC;IACnC,0DAAiC;IAAjC,sGAAiC;IAEnB,0DAI1B;IAJ0B,wPAI1B;IACkB,0DAAmC;IAAnC,uGAAmC;IACnC,0DAAmC;IAAnC,kGAAmC;IACnC,0DAAqC;IAArC,oGAAqC;IACzD,0DACJ;IADI,6FACJ;;AD1CjB,MAAM,gBAAgB;IAI3B,YAAoB,EAAe,EACzB,cAAgC,EAChC,MAAiB;QAFP,OAAE,GAAF,EAAE,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAkB;QAChC,WAAM,GAAN,MAAM,CAAW;QALnB,cAAS,GAAc,EAAE,CAAC;QAClC,cAAS,GAAY,KAAK,CAAC;IAKvB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS;aAClB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACnE,CAAC;IACD,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC;YACrC,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,UAAU,CAAC,IAAU;QACnB,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE;YACnC,GAAG,EAAE,SAAS;YACd,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,SAAS;SAChB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;IACD,uBAAuB;QACrB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kHAAqB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YACpD,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gFApDU,gBAAgB;8GAAhB,gBAAgB;QCZ7B,yEAAmD;QAEQ,gFAAqB;QAAA,4DAAK;QAC7E,yEAAwB;QACZ,wIAAS,oBAAgB,IAAC;QAE9B,wGAAgE;QAEhE,iHAMM;QAEN,uDACJ;QAAA,4DAAS;QACT,4EAC2H;QADnH,wIAAS,6BAAyB,IAAC;QAEvC,iFACJ;QAAA,4DAAS;QAIjB,0EAAyC;QAIyC,8DAAE;QAAA,4DAAK;QACzE,0EAAkE;QAAA,6EAAiB;QAAA,4DAAK;QACxF,0EAAkE;QAAA,qEAAS;QAAA,4DAAK;QAChF,0EAAkE;QAAA,8EAAa;QAAA,4DAAK;QACpF,0EAAkE;QAAA,uEAAW;QAAA,4DAAK;QAClF,0EAAkE;QAAA,kEAAM;QAAA,4DAAK;QAGrF,yEAAO;QACH,+GAkBK;QACT,4DAAQ;;QArD2B,0DAAsB;QAAtB,mFAAsB;QAEjD,0DAAgB;QAAhB,gFAAgB;QAEd,0DAAe;QAAf,+EAAe;QAQrB,0DACJ;QADI,6HACJ;QAqB4B,2DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;ACrCiB;;;AAO7D,MAAM,iBAAiB;IAG5B,YAAoB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;IAAI,CAAC;IAExC,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,CAAC,gCAAgC,EAAE,+DAAmB,CAAC;YACpE,IAAI,EAAE,CAAC,IAAI,CAAC;YACZ,kBAAkB,EAAE,CAAC,IAAI,CAAC;YAC1B,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,0DAAc,CAAC,CAAC,CAAC,EAAE,0DAAc,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,sBAAsB,EAAE,CAAC,EAAE,EAAE,CAAC,0DAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,0BAA0B,EAAE,CAAC,IAAI,CAAC;YAClC,WAAW,EAAE,CAAC,mBAAmB,EAAE,CAAC,4DAAgB,EAAE,+DAAmB,CAAC,CAAC;YAC3E,QAAQ,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACxD,KAAK,CAAC,qCAAqC,CAAC,CAAC;YAC7C,8DAA8D;SAC/D;aAAM;YACL,KAAK,CAAC,mDAAmD,CAAC,CAAC;SAC5D;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtB,WAAW,EAAE,gCAAgC;YAC7C,IAAI,EAAE,IAAI;YACV,kBAAkB,EAAE,IAAI;YACxB,YAAY,EAAE,CAAC;YACf,sBAAsB,EAAE,EAAE;YAC1B,0BAA0B,EAAE,IAAI;YAChC,WAAW,EAAE,mBAAmB;YAChC,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;;kFA3CU,iBAAiB;+GAAjB,iBAAiB;QCR9B,yEAAmD;QAEE,0EAAU;QAAA,4DAAK;QAGhE,yEAA2D;QAEH,2FAAsB;QAAA,4DAAK;QAG/E,0EAAqE;QAApC,6IAAY,cAAU,IAAC;QACpD,yEAAmD;QAEQ,wFAA4B;QAAA,4DAAK;QAEpF,0EAAuB;QAGX,iFACJ;QAAA,4DAAQ;QACR,wEAEkD;QACtD,4DAAM;QAEN,uEAAK;QAEG,kFACJ;QAAA,4DAAQ;QACR,2EAAyC;QAEL,gEAAI;QAAA,4DAAO;QAG3C,8EACsI;QAClI,0EACJ;QAAA,4DAAS;QAKrB,0EAAwD;QAAA,2FAAqB;QAAA,4DAAK;QAElF,uEAAK;QAEG,oFACJ;QAAA,4DAAQ;QACR,8EACkH;QAC3F,yEAAQ;QAAA,4DAAS;QACpC,8EAAmB;QAAA,mEAAO;QAAA,4DAAS;QACnC,8EAAmB;QAAA,mEAAO;QAAA,4DAAS;QAK/C,uEAAK;QACkD,oFAAwB;QAAA,4DAAK;QAEhF,0EAAuB;QAEf,wEAC8E;QAC9E,6EAAmE;QAC/D,iGACJ;QAAA,4DAAQ;QAGZ,2EAA+B;QAC3B,wEAE8E;QAC9E,6EAA2E;QACvE,sGACJ;QAAA,4DAAQ;QAGZ,uEAAK;QAEG,6GACJ;QAAA,4DAAQ;QACR,wEAEuB;QAC3B,4DAAM;QAEN,uEAAK;QAEG,qFACJ;QAAA,4DAAQ;QACR,wEAEqD;QACzD,4DAAM;QAGV,0EAAwD;QAAA,2FAAqB;QAAA,4DAAK;QAElF,uEAAK;QAEG,wGACJ;QAAA,4DAAQ;QACR,wEAEc;QAClB,4DAAM;QAId,2EAA4E;QAClD,0IAAS,cAAU,IAAC;QAEtC,4EAA2B;QAAA,mEAAO;QAAA,4DAAO;QAG7C,8EACyJ;QAC1H,uEAAW;QAAA,4DAAO;;QA5GnD,0DAA0B;QAA1B,uFAA0B;QA0GF,2DAAiC;QAAjC,8FAAiC;;;;;;;;;;;;;;;;;;AC7GhE,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;2GAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;ACGyC;;;AAG3D;;GAEG;AACH,IAAY,QAmBX;AAnBD,WAAY,QAAQ;IAClB,uBAAW;IACX,uBAAW;IACX,yBAAa;IACb,uBAAW;IACX,yBAAa;IACb,uBAAW;IACX,yBAAa;IACb,uBAAW;IACX,yBAAa;IACb,uBAAW;IACX,uBAAW;IACX,uBAAW;IACX,uBAAW;IACX,uBAAW;IACX,uBAAW;IACX,uBAAW;IACX,yBAAa;IACb,+BAAmB;AACrB,CAAC,EAnBW,QAAQ,KAAR,QAAQ,QAmBnB;AAKM,MAAM,iBAAiB;IAG5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,WAAM,GAAG,GAAG,6EAAmB,aAAa,CAAC;IAEb,CAAC;IAEzC;;;;;OAKG;IACH,gBAAgB,CAAC,QAAgB,EAAE,IAAU;QAC3C,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,GAAG,IAAI,CAAC,MAAM,WAAW,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnF,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,YAAoB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,IAAI,CAAC,MAAM,IAAI,YAAY,EAAE,CAAC,CAAC;IAClE,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,QAAQ;YAAE,OAAO,uBAAuB,CAAC;QAE9C,QAAQ,QAAQ,CAAC,WAAW,EAAE,EAAE;YAC9B,iBAAiB;YACjB,KAAK,QAAQ,CAAC,GAAG;gBACf,OAAO,sBAAsB,CAAC;YAEhC,0BAA0B;YAC1B,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,IAAI;gBAChB,OAAO,sBAAsB,CAAC;YAEhC,2BAA2B;YAC3B,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,IAAI;gBAChB,OAAO,sBAAsB,CAAC;YAEhC,gCAAgC;YAChC,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,IAAI;gBAChB,OAAO,sBAAsB,CAAC;YAEhC,cAAc;YACd,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,IAAI,CAAC;YACnB,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,GAAG;gBACf,OAAO,wBAAwB,CAAC;YAElC,cAAc;YACd,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,GAAG;gBACf,OAAO,wBAAwB,CAAC;YAElC,gBAAgB;YAChB,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,MAAM;gBAClB,OAAO,sBAAsB,CAAC;YAEhC,4BAA4B;YAC5B;gBACE,OAAO,uBAAuB,CAAC;SAClC;IACH,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CAAC,QAAgB;QAC/B,IAAI,CAAC,QAAQ;YAAE,OAAO,eAAe,CAAC;QAEtC,QAAQ,QAAQ,CAAC,WAAW,EAAE,EAAE;YAC9B,iBAAiB;YACjB,KAAK,QAAQ,CAAC,GAAG;gBACf,OAAO,cAAc,CAAC;YAExB,0BAA0B;YAC1B,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,IAAI;gBAChB,OAAO,eAAe,CAAC;YAEzB,2BAA2B;YAC3B,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,IAAI;gBAChB,OAAO,gBAAgB,CAAC;YAE1B,gCAAgC;YAChC,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,IAAI;gBAChB,OAAO,iBAAiB,CAAC;YAE3B,cAAc;YACd,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,IAAI,CAAC;YACnB,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,GAAG;gBACf,OAAO,iBAAiB,CAAC;YAE3B,cAAc;YACd,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,GAAG;gBACf,OAAO,eAAe,CAAC;YAEzB,gBAAgB;YAChB,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,GAAG,CAAC;YAClB,KAAK,QAAQ,CAAC,MAAM;gBAClB,OAAO,iBAAiB,CAAC;YAE3B,4BAA4B;YAC5B;gBACE,OAAO,eAAe,CAAC;SAC1B;IACH,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,GAAW;QACrB,IAAI,CAAC,GAAG;YAAE,OAAO,EAAE,CAAC;QAEpB,iCAAiC;QACjC,MAAM,gBAAgB,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3C,8CAA8C;QAC9C,MAAM,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEzC,qDAAqD;QACrD,OAAO,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,QAAQ;YAAE,OAAO,QAAQ,CAAC,OAAO,CAAC;QAEvC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;QAEjE,6DAA6D;QAC7D,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;YAC3B,IAAI,QAAQ,CAAC,IAA6B,CAAC,KAAK,SAAS,EAAE;gBACzD,OAAO,SAAS,CAAC;aAClB;SACF;QAED,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,cAAc,CAAC,KAAa;QAC1B,IAAI,KAAK,KAAK,CAAC;YAAE,OAAO,SAAS,CAAC;QAElC,MAAM,CAAC,GAAG,IAAI,CAAC;QACf,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAChD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpD,OAAO,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;;kFAzLU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM","sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/employees/employees.component.ts","./src/app/admin/employees/employees.component.html","./src/app/admin/formation/create-formation/create-formation.component.ts","./src/app/admin/formation/create-formation/create-formation.component.html","./src/app/admin/formation/formation-detail/formation-detail.component.ts","./src/app/admin/formation/formation-detail/formation-detail.component.html","./src/app/admin/formation/training/training.component.ts","./src/app/admin/formation/training/training.component.html","./src/app/admin/formation/update-formation/update-formation.component.ts","./src/app/admin/formation/update-formation/update-formation.component.html","./src/app/admin/home/home.component.ts","./src/app/admin/home/home.component.html","./src/app/admin/quiz/create-quizs/create-quizs.component.ts","./src/app/admin/quiz/create-quizs/create-quizs.component.html","./src/app/admin/quiz/quiz-details/quiz-details.component.ts","./src/app/admin/quiz/quiz-details/quiz-details.component.html","./src/app/admin/quiz/quizs/quizs.component.ts","./src/app/admin/quiz/quizs/quizs.component.html","./src/app/admin/quiz/update-quizs/update-quizs.component.ts","./src/app/admin/quiz/update-quizs/update-quizs.component.html","./src/app/admin/session/session.component.ts","./src/app/admin/session/session.component.html","./src/app/admin/settings/settings.component.ts","./src/app/admin/settings/settings.component.html","./src/app/admin/test/test.component.ts","./src/app/admin/test/test.component.html","./src/app/core/services/attachment.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { TrainingComponent } from './formation/training/training.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { SessionComponent } from './session/session.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { QuizsComponent } from './quiz/quizs/quizs.component';\nimport { CreateQuizsComponent } from './quiz/create-quizs/create-quizs.component';\nimport { QuizDetailsComponent } from './quiz/quiz-details/quiz-details.component';\nimport { UpdateQuizsComponent } from './quiz/update-quizs/update-quizs.component';\nimport { UpdateFormationComponent } from './formation/update-formation/update-formation.component';\nimport { QuizPassingComponent } from '../condidat/quiz/quiz-passing/quiz-passing.component';\nimport { FormationDetailComponent } from './formation/formation-detail/formation-detail.component';\nimport { CreateFormationComponent } from './formation/create-formation/create-formation.component';\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"formations\", component: TrainingComponent },\n  { path: \"formations/create\", component: CreateFormationComponent },\n  { path: \"formations/:id\", component: FormationDetailComponent },\n  { path: \"formations/edit/:id\", component: UpdateFormationComponent },\n  { path: \"employees\", component: EmployeesComponent },\n  { path: \"sessions\", component: SessionComponent },\n  { path: \"settings\", component: SettingsComponent },\n  { path: \"quizs\", component: QuizsComponent },\n  { path: \"quizs/create\", component: CreateQuizsComponent },\n  { path: \"quizs/:id\", component: QuizDetailsComponent },\n  { path: \"quizs/edit/:id\", component: UpdateQuizsComponent },\n  { path: \"quizs/test/:id\", component: QuizPassingComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TrainingComponent } from './formation/training/training.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { SessionComponent } from './session/session.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TestComponent } from './test/test.component';\n\nimport { QuizsComponent } from './quiz/quizs/quizs.component';\nimport { CreateQuizsComponent } from './quiz/create-quizs/create-quizs.component';\nimport { QuizDetailsComponent } from './quiz/quiz-details/quiz-details.component';\nimport { UpdateQuizsComponent } from './quiz/update-quizs/update-quizs.component';\nimport { CreateFormationComponent } from './formation/create-formation/create-formation.component';\nimport { UpdateFormationComponent } from './formation/update-formation/update-formation.component';\nimport { QuizPassingComponent } from '../condidat/quiz/quiz-passing/quiz-passing.component';\nimport { FormationDetailComponent } from './formation/formation-detail/formation-detail.component';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    TrainingComponent,\n    EmployeesComponent,\n    SessionComponent,\n    SettingsComponent,\n    TestComponent,\n    CreateFormationComponent,\n    QuizsComponent,\n    CreateQuizsComponent,\n    QuizDetailsComponent,\n    UpdateQuizsComponent,\n    UpdateFormationComponent,\n    FormationDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    FormsModule,\n    SharedModule\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Group } from '../../core/models/group.model';\nimport { User } from '../../core/models/user.model';\nimport { Role } from '../../core/models/role.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { GroupService } from 'src/app/core/services/group.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateGroupDialogComponent } from 'src/app/shared/components/create-group-dialog/create-group-dialog.component';\nimport { CreateUserDialogComponent } from 'src/app/shared/components/create-user-dialog/create-user-dialog.component';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.scss']\n})\nexport class EmployeesComponent implements OnInit {\n  groups: Group[] = [];\n  selectedGroup: Group | null = null;\n  showCreateUserModal = false;\n  loading = true;\n  error: string | null = null;\n\n\n  constructor(\n    private groupService: GroupService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.fetchGroups();\n  }\n\n  fetchGroups() {\n    this.loading = true;\n    this.error = null;\n\n    this.groupService.getGroups().subscribe({\n      next: (groups) => {\n        this.groups = groups;\n        if (groups.length > 0) {\n          this.selectedGroup = groups[0];\n        }\n        this.loading = false;\n      },\n      error: (err) => {\n        this.error = 'Failed to load groups. Please try again later.';\n        this.loading = false;\n        console.error('Error fetching groups:', err);\n      }\n    });\n  }\n\n  selectGroup(group: Group) {\n    this.selectedGroup = group;\n  }\n\n  openCreateUserModal() {\n    const dialogRef = this.dialog.open(CreateUserDialogComponent, {\n      data: { selectedGroup: this.selectedGroup },\n      width: '1000px'\n    });\n    dialogRef.afterClosed().subscribe((user: User) => {\n      if (user) {\n        console.log(user);\n        this.groups.find(g => g.id === this.selectedGroup?.id)?.users.push(user);\n      }\n    });\n  }\n\n  openCreateGroupModal() {\n    const dialogRef = this.dialog.open(CreateGroupDialogComponent);\n    dialogRef.afterClosed().subscribe((group: Group) => {\n      if (group) {\n        this.groups.push(group);\n        this.selectedGroup = group;\n      }\n    });\n  }\n\n  createUser() {\n\n  }\n\n\n\n}\n\n\n\n","<div class=\"container mx-auto p-2\">\n    <!-- Header with Actions -->\n    <div class=\"flex justify-between items-center mb-6\">\n        <h1 class=\"text-2xl font-bold text-gray-800\">Groups Management</h1>\n        <div class=\"flex gap-4\">\n            <button (click)=\"openCreateUserModal()\"\n                class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path\n                        d=\"M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z\" />\n                </svg>\n                Create User\n            </button>\n            <button (click)=\"openCreateGroupModal()\"\n                class=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\"\n                        d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\"\n                        clip-rule=\"evenodd\" />\n                </svg>\n                Create Group\n            </button>\n        </div>\n    </div>\n\n    <!-- Loading State -->\n    <div *ngIf=\"loading\" class=\"flex justify-center items-center h-64\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n    </div>\n\n    <!-- Error State -->\n    <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <strong class=\"font-bold\">Error!</strong>\n        <span class=\"block sm:inline\">{{ error }}</span>\n        <button (click)=\"fetchGroups()\" class=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <svg class=\"fill-current h-6 w-6 text-red-500\" role=\"button\" xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\">\n                <path\n                    d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n            </svg>\n        </button>\n    </div>\n\n    <!-- Content -->\n    <div *ngIf=\"!loading && !error\" class=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        <!-- Groups List -->\n        <div class=\"lg:col-span-1 bg-white rounded-lg shadow p-4\">\n            <h2 class=\"text-lg font-semibold mb-4 text-gray-700\">Groups</h2>\n            <div class=\"space-y-2\">\n                <div *ngFor=\"let group of groups\" (click)=\"selectGroup(group)\"\n                    [class.bg-blue-50]=\"selectedGroup?.id === group.id\"\n                    class=\"p-3 rounded-lg cursor-pointer hover:bg-gray-50 transition-colors border border-gray-100\">\n                    <div class=\"flex justify-between items-center\">\n                        <h3 class=\"font-medium text-gray-800\">{{group.name}}</h3>\n                        <span class=\"px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800\">\n                            {{group.users.length}} users\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Group Details -->\n        <div class=\"lg:col-span-3 bg-white rounded-lg shadow\" *ngIf=\"selectedGroup\">\n            <!-- Group Header -->\n            <div class=\"p-6 border-b border-gray-200\">\n                <div class=\"flex justify-between items-center\">\n                    <div>\n                        <h2 class=\"text-2xl font-bold text-gray-800\">{{selectedGroup.name}}</h2>\n                    </div>\n                    <div class=\"flex items-center gap-2\">\n                        <span class=\"px-3 py-1 text-sm font-semibold rounded-full bg-green-100 text-green-800\">\n                            Active\n                        </span>\n                        <span class=\"px-3 py-1 text-sm font-semibold rounded-full bg-blue-100 text-blue-800\">\n                            {{selectedGroup.count}} Users\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Users Table -->\n            <div class=\"p-6\">\n                <div class=\"overflow-x-auto\">\n                    <table class=\"min-w-full divide-y divide-gray-200\">\n                        <thead class=\"bg-gray-50\">\n                            <tr>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    User</th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Email</th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Role</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"bg-white divide-y divide-gray-200\">\n                            <tr *ngFor=\"let user of selectedGroup.users\" class=\"hover:bg-gray-50\">\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <div class=\"flex items-center\">\n                                        <div\n                                            class=\"h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center text-gray-600 font-semibold\">\n                                            {{user.userName.charAt(0).toUpperCase()}}\n                                        </div>\n                                        <div class=\"ml-4\">\n                                            <div class=\"text-sm font-medium text-gray-900\">{{user.userName}}</div>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <div class=\"text-sm text-gray-900\">{{user.email}}</div>\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <span [ngClass]=\"{\n                                        'bg-purple-100 text-purple-800': user.roles?.[0] === 'Administrator',\n                                        'bg-blue-100 text-blue-800': user.roles?.[0] === 'Manager',\n                                        'bg-green-100 text-green-800': user.roles?.[0] === 'TeamLeader',\n                                        'bg-yellow-100 text-yellow-800': user.roles?.[0] === 'PostLeader',\n                                        'bg-red-100 text-red-800': user.roles?.[0] === 'QualityAgent',\n                                        'bg-gray-100 text-gray-800': user.roles?.[0] === 'Employee'\n                                    }\"\n                                        class=\"px-3 py-1.5 inline-flex items-center text-xs leading-4 font-medium rounded-full\">\n                                        <span class=\"w-2 h-2 mr-1.5 rounded-full\" [ngClass]=\"{\n                                            'bg-purple-500': user.roles?.[0] === 'Administrator',\n                                            'bg-blue-500': user.roles?.[0] === 'Manager',\n                                            'bg-green-500': user.roles?.[0] === 'TeamLeader',\n                                            'bg-yellow-500': user.roles?.[0] === 'PostLeader',\n                                            'bg-red-500': user.roles?.[0] === 'QualityAgent',\n                                            'bg-gray-500': user.roles?.[0] === 'Employee'\n                                        }\"></span>\n                                        {{user.roles?.[0]}}\n                                    </span>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"selectedGroup.users.length === 0\">\n                                <td colspan=\"3\" class=\"px-6 py-4 text-center text-gray-500\">\n                                    <div class=\"flex flex-col items-center justify-center py-8\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-12 w-12 text-gray-400\"\n                                            fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                                d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n                                        </svg>\n                                        <p class=\"mt-2 text-sm font-medium text-gray-500\">No users in this group</p>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { FormationService } from '../../../core/services/formation.service';\nimport { GroupService } from '../../../core/services/group.service';\nimport { QuizService } from '../../../core/services/quiz.service';\nimport { Group } from '../../../core/models/group.model';\nimport { Quiz } from '../../../core/models/quiz.model';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FORMATION_CATEGORIES } from '../../../core/constants/formation.constants';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { UserRole } from '../../../core/constants/roles.constants';\nimport { SelectQuizComponent } from '../../../shared/components/select-quiz/select-quiz.component';\nimport { ToasterService } from 'src/app/core/services/toaster.service';\n\n@Component({\n    selector: 'app-create-formation',\n    templateUrl: './create-formation.component.html',\n    styleUrls: ['./create-formation.component.scss']\n})\nexport class CreateFormationComponent implements OnInit {\n    formationForm: FormGroup;\n    groups: Group[] = [];\n    quizzes: Quiz[] = [];\n    categories = FORMATION_CATEGORIES;\n    availableRoles = [\n        UserRole.Administrator,\n        UserRole.HierarchicalLeader,\n        UserRole.TeamLeader,\n        UserRole.PostLeader,\n        UserRole.QualityAgent,\n        UserRole.Manager\n    ];\n\n    constructor(\n        private fb: FormBuilder,\n        private formationService: FormationService,\n        private groupService: GroupService,\n        private quizService: QuizService,\n        private router: Router,\n        private dialog: MatDialog,\n        private toaster: ToasterService\n    ) {\n        this.formationForm = this.fb.group({\n            title: ['', [Validators.required, Validators.minLength(3)]],\n            description: ['', [Validators.required, Validators.minLength(10)]],\n            content: ['', [Validators.required, Validators.minLength(20)]],\n            category: ['', Validators.required],\n            groupIds: [[]],\n            roles: [[]],\n            finalQuizId: [null],\n            sessions: this.fb.array([]),\n            modules: this.fb.array([])\n        });\n    }\n\n    ngOnInit(): void {\n        this.groupService.getGroups().subscribe({\n            next: (groups) => {\n                this.groups = groups;\n            },\n            error: (error) => {\n                console.error('Error loading groups:', error);\n            }\n        });\n\n        this.quizService.getQuizzes().subscribe({\n            next: (quizzes) => {\n                this.quizzes = quizzes;\n            },\n            error: (error) => {\n                console.error('Error loading quizzes:', error);\n            }\n        });\n    }\n\n    get modules(): FormArray {\n        return this.formationForm.get('modules') as FormArray;\n    }\n\n    get sessions(): FormArray {\n        return this.formationForm.get('sessions') as FormArray;\n    }\n\n    createModuleFormGroup(): FormGroup {\n        return this.fb.group({\n            title: ['', [Validators.required, Validators.minLength(3)]],\n            description: ['', [Validators.required, Validators.minLength(10)]],\n            position: [this.modules.length + 1, Validators.required],\n            quizId: [null]\n        });\n    }\n\n    addModule(): void {\n        this.modules.push(this.createModuleFormGroup());\n        this.updateModulePositions();\n    }\n\n    removeModule(index: number): void {\n        this.modules.removeAt(index);\n        this.updateModulePositions();\n    }\n\n    updateModulePositions(): void {\n        this.modules.controls.forEach((control, index) => {\n            control.patchValue({ position: index + 1 });\n        });\n    }\n\n    moveModule(fromIndex: number, toIndex: number): void {\n        const module = this.modules.at(fromIndex);\n        this.modules.removeAt(fromIndex);\n        this.modules.insert(toIndex, module);\n        this.updateModulePositions();\n    }\n\n    createSessionFormGroup(): FormGroup {\n        return this.fb.group({\n            title: ['', [Validators.required, Validators.minLength(3)]],\n            startDate: ['', Validators.required],\n            endDate: ['', Validators.required]\n        });\n    }\n\n    addSession(): void {\n        this.sessions.push(this.createSessionFormGroup());\n    }\n\n    removeSession(index: number): void {\n        this.sessions.removeAt(index);\n    }\n\n    toggleGroup(groupId: number): void {\n        const groupIds = this.formationForm.get('groupIds')?.value as number[];\n        if (groupIds.includes(groupId)) {\n            this.formationForm.patchValue({ groupIds: groupIds.filter(id => id !== groupId) });\n        } else {\n            this.formationForm.patchValue({ groupIds: [...groupIds, groupId] });\n        }\n    }\n\n    toggleRole(role: string): void {\n        const roleNames = this.formationForm.get('roles')?.value as string[];\n        if (roleNames.includes(role)) {\n            this.formationForm.patchValue({ roles: roleNames.filter(r => r !== role) });\n        } else {\n            this.formationForm.patchValue({ roles: [...roleNames, role] });\n        }\n    }\n\n    openQuizSelectionDialog(context: 'formation' | 'module', moduleIndex?: number): void {\n        const disabledQuizIds: number[] = [];\n\n        // Disable quizzes assigned to other modules\n        this.modules.controls.forEach((control, index) => {\n            const quizId = control.get('quizId')?.value;\n            if (quizId && (context !== 'module' || index !== moduleIndex)) {\n                disabledQuizIds.push(quizId);\n            }\n        });\n\n        // Disable final quiz if selecting for a module\n        if (context === 'module' && this.formationForm.get('finalQuizId')?.value) {\n            disabledQuizIds.push(this.formationForm.get('finalQuizId')?.value);\n        }\n\n        const dialogRef = this.dialog.open(SelectQuizComponent, {\n            width: '500px',\n            data: {\n                disabledQuizIds,\n                context,\n                selectedQuizId: context === 'formation' ? this.formationForm.get('finalQuizId')?.value : (moduleIndex !== undefined ? this.modules.at(moduleIndex).get('quizId')?.value : null)\n            }\n        });\n\n        dialogRef.afterClosed().subscribe(quiz => {\n            if (quiz) {\n                if (context === 'formation') {\n                    this.formationForm.patchValue({ finalQuizId: quiz.id });\n                } else if (moduleIndex !== undefined) {\n                    this.modules.at(moduleIndex).patchValue({ quizId: quiz.id });\n                }\n            }\n        });\n    }\n\n    getQuizTitle(quizId: number | null): string {\n        return quizId ? this.quizzes.find(q => q.id === quizId)?.title || 'Select a quiz' : 'Select a quiz';\n    }\n\n    onSubmit(): void {\n        if (this.formationForm.valid) {\n            console.log(this.formationForm.value);\n\n            this.formationService.createFormation(this.formationForm.value).subscribe({\n                next: () => {\n                    this.router.navigate(['/admin/formations']);\n                },\n                error: (error) => {\n                    console.error('Error creating formation:', error);\n                    this.toaster.handleHttpError(error.error);\n                }\n            });\n        } else {\n            this.formationForm.markAllAsTouched();\n            this.toaster.showError('Invalid Form', 'Please fill in all required fields correctly.');\n\n        }\n    }\n\n    dropModule(event: CdkDragDrop<FormGroup[]>) {\n        moveItemInArray(this.modules.controls, event.previousIndex, event.currentIndex);\n        this.updateModulePositions();\n    }\n}","<div class=\"container mx-auto px-4 py-8\">\n    <div class=\"max-w-4xl\">\n        <div class=\"rounded-2xl overflow-hidden\">\n            <!-- Header -->\n            <div class=\"px-8 py-6\">\n                <h1 class=\"text-3xl font-bold\">Create New Formation</h1>\n                <p class=\"mt-1 text-sm text-gray-600\">Fill in the details below to create a new training formation</p>\n            </div>\n\n            <!-- Form Content -->\n            <div class=\"p-8\">\n                <form [formGroup]=\"formationForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-8\">\n                    <!-- Basic Information -->\n                    <div class=\"bg-white shadow rounded-lg p-6\">\n                        <h2 class=\"text-2xl font-bold mb-6\">Basic Information</h2>\n                        <div class=\"grid grid-cols-1 gap-6\">\n                            <div>\n                                <label class=\"block text-sm font-medium text-gray-700\">Title</label>\n                                <input type=\"text\" formControlName=\"title\"\n                                    class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\" />\n                            </div>\n                            <div>\n                                <label class=\"block text-sm font-medium text-gray-700\">Description</label>\n                                <textarea formControlName=\"description\" rows=\"3\"\n                                    class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\n                            </div>\n                            <div>\n                                <label class=\"block text-sm font-medium text-gray-700\">Content</label>\n                                <textarea formControlName=\"content\" rows=\"5\"\n                                    class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Categories Section -->\n                    <div class=\"bg-white shadow rounded-lg p-6\">\n                        <h2 class=\"text-2xl font-bold mb-6\">Category</h2>\n                        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                            <div *ngFor=\"let category of categories\" class=\"category-item\">\n                                <input type=\"radio\" [id]=\"'category-' + category\" [value]=\"category\"\n                                    formControlName=\"category\" class=\"category-radio\" />\n                                <label [for]=\"'category-' + category\" class=\"category-label\">\n                                    <div class=\"category-content\">\n                                        <span class=\"category-name\">{{ category }}</span>\n                                    </div>\n                                    <div class=\"category-icon\">\n                                        <i class=\"fas fa-check\"></i>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Roles Section -->\n                    <div class=\"bg-white shadow rounded-lg p-6\">\n                        <h2 class=\"text-2xl font-bold mb-6\">Roles</h2>\n                        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                            <div *ngFor=\"let role of availableRoles\" class=\"role-item\">\n                                <input type=\"checkbox\" [id]=\"'role-' + role\"\n                                    [checked]=\"formationForm.get('roles')?.value.includes(role)\"\n                                    (change)=\"toggleRole(role)\" class=\"role-checkbox\" />\n                                <label [for]=\"'role-' + role\" class=\"role-label\">\n                                    <div class=\"role-content\">\n                                        <span class=\"role-name\">{{ role }}</span>\n                                    </div>\n                                    <div class=\"role-icon\">\n                                        <i class=\"fas fa-check\"></i>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Final Quiz Section -->\n                    <div class=\"bg-white shadow rounded-lg p-6\">\n                        <h2 class=\"text-2xl font-bold mb-6\">Final Quiz</h2>\n                        <div class=\"flex items-center space-x-4\">\n                            <div class=\"flex-1\">\n                                <label class=\"block text-sm font-medium text-gray-700\">Select Final Quiz</label>\n                                <div class=\"mt-1\">\n                                    <button type=\"button\" (click)=\"openQuizSelectionDialog('formation')\"\n                                        class=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\">\n                                        {{ getQuizTitle(formationForm.get('finalQuizId')?.value) }}\n                                        <i class=\"fas fa-chevron-down ml-2\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Groups Section -->\n                    <div class=\"bg-white shadow rounded-lg p-6\">\n                        <h2 class=\"text-2xl font-bold mb-6\">Target Groups</h2>\n                        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                            <div *ngFor=\"let group of groups\" class=\"group-item\">\n                                <input type=\"checkbox\" [id]=\"'group-' + group.id\"\n                                    [checked]=\"formationForm.get('groupIds')?.value.includes(group.id)\"\n                                    (change)=\"toggleGroup(group.id)\" class=\"group-checkbox\" />\n                                <label [for]=\"'group-' + group.id\" class=\"group-label\">\n                                    <div class=\"group-content\">\n                                        <span class=\"group-name\">{{ group.name }}</span>\n                                        <span *ngIf=\"group.description\" class=\"group-description\">{{ group.description\n                                            }}</span>\n                                    </div>\n                                    <div class=\"group-icon\">\n                                        <i class=\"fas fa-check\"></i>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Modules Section -->\n                    <div class=\"bg-white shadow rounded-lg p-6\">\n                        <div class=\"flex justify-between items-center mb-6\">\n                            <h2 class=\"text-2xl font-bold\">Modules</h2>\n                            <button type=\"button\" (click)=\"addModule()\"\n                                class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark\">\n                                <i class=\"fas fa-plus mr-2\"></i>\n                                Add Module\n                            </button>\n                        </div>\n\n                        <div formArrayName=\"modules\" class=\"space-y-4\">\n                            <div *ngFor=\"let module of modules.controls; let i = index\" [formGroupName]=\"i\"\n                                class=\"module-item\" cdkDrag>\n                                <div class=\"flex items-start space-x-4\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"grid grid-cols-1 gap-4\">\n                                            <div>\n                                                <label class=\"block text-sm font-medium text-gray-700\">Title</label>\n                                                <input type=\"text\" formControlName=\"title\"\n                                                    class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\" />\n                                            </div>\n                                            <div>\n                                                <label\n                                                    class=\"block text-sm font-medium text-gray-700\">Description</label>\n                                                <textarea formControlName=\"description\" rows=\"2\"\n                                                    class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\n                                            </div>\n                                            <div>\n                                                <label class=\"block text-sm font-medium text-gray-700\">Quiz</label>\n                                                <div class=\"mt-1\">\n                                                    <button type=\"button\" (click)=\"openQuizSelectionDialog('module', i)\"\n                                                        class=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\">\n                                                        {{ getQuizTitle(module.get('quizId')?.value) }}\n                                                        <i class=\"fas fa-chevron-down ml-2\"></i>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"flex flex-col space-y-2\">\n                                        <div class=\"drag-handle\" cdkDragHandle>\n                                            <i class=\"fas fa-grip-vertical\"></i>\n                                        </div>\n                                        <button type=\"button\" (click)=\"moveModule(i, i - 1)\" [disabled]=\"i === 0\"\n                                            class=\"p-2 text-gray-500 hover:text-gray-700 disabled:opacity-50\">\n                                            <i class=\"fas fa-arrow-up\"></i>\n                                        </button>\n                                        <button type=\"button\" (click)=\"moveModule(i, i + 1)\"\n                                            [disabled]=\"i === modules.length - 1\"\n                                            class=\"p-2 text-gray-500 hover:text-gray-700 disabled:opacity-50\">\n                                            <i class=\"fas fa-arrow-down\"></i>\n                                        </button>\n                                        <button type=\"button\" (click)=\"removeModule(i)\"\n                                            class=\"p-2 text-red-500 hover:text-red-700\">\n                                            <i class=\"fas fa-trash\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class=\"mt-2 text-sm text-gray-500\">\n                                    Position: {{ module.get('position')?.value }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Sessions Section -->\n                    <div class=\"bg-white shadow rounded-lg p-6\">\n                        <div class=\"flex justify-between items-center mb-6\">\n                            <h2 class=\"text-2xl font-bold\">Sessions</h2>\n                            <button type=\"button\" (click)=\"addSession()\"\n                                class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark\">\n                                <i class=\"fas fa-plus mr-2\"></i>\n                                Add Session\n                            </button>\n                        </div>\n\n                        <div formArrayName=\"sessions\" class=\"space-y-4\">\n                            <div *ngFor=\"let session of sessions.controls; let i = index\" [formGroupName]=\"i\"\n                                class=\"session-item\">\n                                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                                    <div>\n                                        <label class=\"block text-sm font-medium text-gray-700\">Title</label>\n                                        <input type=\"text\" formControlName=\"title\"\n                                            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\" />\n                                    </div>\n                                    <div>\n                                        <label class=\"block text-sm font-medium text-gray-700\">Start Date</label>\n                                        <input type=\"date\" formControlName=\"startDate\"\n                                            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\" />\n                                    </div>\n                                    <div>\n                                        <label class=\"block text-sm font-medium text-gray-700\">End Date</label>\n                                        <input type=\"date\" formControlName=\"endDate\"\n                                            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\" />\n                                    </div>\n                                </div>\n                                <div class=\"mt-2 flex justify-end\">\n                                    <button type=\"button\" (click)=\"removeSession(i)\"\n                                        class=\"text-red-500 hover:text-red-700\">\n                                        <i class=\"fas fa-trash\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Submit Button -->\n                    <div class=\"flex justify-end\">\n                        <button type=\"submit\"\n                            class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-primary hover:bg-primary-dark disabled:opacity-50\">\n                            Create Formation\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Formation } from 'src/app/core/models/formation.model';\nimport { Quiz } from 'src/app/core/models/quiz.model';\nimport { Session, SessionStatus } from 'src/app/core/models/session.model';\nimport { AttachmentService } from 'src/app/core/services/attachment.service';\nimport { FormationService } from 'src/app/core/services/formation.service';\nimport { QuizService } from 'src/app/core/services/quiz.service';\n\n@Component({\n  selector: 'app-formation-detail',\n  templateUrl: './formation-detail.component.html',\n  styleUrls: ['./formation-detail.component.scss']\n})\nexport class FormationDetailComponent implements OnInit, OnDestroy {\n  formation: Formation | null = null;\n  loading: boolean = false;\n  error: string | null = null;\n  activeTab: string = 'info';\n  quizzes: Quiz[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private formationService: FormationService,\n    private quizService: QuizService,\n    private attachmentService: AttachmentService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // Get query parameters\n    const queryParamsSub = this.route.queryParams.subscribe(queryParams => {\n      // Get active tab from URL or use default\n      if (queryParams['tab']) {\n        this.activeTab = queryParams['tab'];\n      }\n    });\n    this.subscriptions.push(queryParamsSub);\n\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.loadFormation(id);\n    this.loadQuizzes();\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  loadFormation(id: number): void {\n    this.loading = true;\n    this.formationService.getFormation(id).subscribe({\n      next: (formation: Formation) => {\n        this.formation = formation;\n        this.loading = false;\n        console.log(this.formation.sessions.map((session: Session) => session.status));\n\n      },\n      error: (error) => {\n        this.error = error;\n        this.loading = false;\n\n      }\n    })\n  }\n\n  // Méthodes déléguées au service d'attachement\n  getFileIcon(type: string): string {\n    return this.attachmentService.getFileIcon(type);\n  }\n\n  getFileIconColor(type: string): string {\n    return this.attachmentService.getFileIconColor(type);\n  }\n\n  getFileName(url: string): string {\n    return this.attachmentService.getFileName(url);\n  }\n\n  formatFileSize(bytes: number): string {\n    return this.attachmentService.formatFileSize(bytes);\n  }\n\n  getStatus(session: Session): SessionStatus {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    const start = new Date(session.startDate);\n    const end = new Date(session.endDate);\n    start.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    if (today < start) {\n      return 'Pas encore'; // Not yet started\n    } else if (today > end) {\n      return 'Terminée';   // Finished\n    } else {\n      return 'En cours';   // Ongoing\n    }\n  }\n\n  /**\n   * Set the active tab and update URL parameters\n   * @param tabName Name of the tab to activate\n   */\n  setActiveTab(tabName: string): void {\n    this.activeTab = tabName;\n    this.updateUrlParams();\n  }\n\n  /**\n   * Update URL parameters without reloading the page\n   */\n  updateUrlParams(): void {\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: {\n        tab: this.activeTab\n      },\n      queryParamsHandling: 'merge',\n      replaceUrl: true // Replace the URL instead of adding a new history entry\n    });\n  }\n\n  /**\n   * Load all available quizzes\n   */\n  loadQuizzes(): void {\n    this.quizService.getQuizzes().subscribe({\n      next: (quizzes) => {\n        this.quizzes = quizzes;\n      },\n      error: (error) => {\n        console.error('Error loading quizzes:', error);\n        this.error = 'Impossible de charger les quiz.';\n      }\n    });\n  }\n\n  /**\n   * Get the title of a quiz by its ID\n   * @param quizId ID of the quiz\n   * @returns Title of the quiz or a default message\n   */\n  getQuizTitle(quizId: number | null): string {\n    if (!quizId) return 'Aucun quiz sélectionné';\n    const quiz = this.quizzes.find(q => q.id === quizId);\n    return quiz ? quiz.title : 'Quiz inconnu';\n  }\n\n  // Cette méthode est maintenant déléguée au service d'attachement\n}\n","<div class=\"max-w-6xl mx-auto\">\n    <div class=\"mt-10\">\n        <!-- Header -->\n        <div class=\"px-8 py-4\">\n            <h1 class=\"text-3xl font-bold text-gray-800\">Détails de la formation</h1>\n            <p class=\"mt-1 text-sm text-gray-600\">Consultez les informations de la formation</p>\n        </div>\n\n        <!-- Loading State -->\n        <div *ngIf=\"loading\" class=\"flex justify-center items-center py-20\">\n            <div class=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"></div>\n        </div>\n\n        <!-- Error State -->\n        <div *ngIf=\"error\" class=\"p-4 max-w-4xl mx-auto\">\n            <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n                <strong class=\"font-bold\">Erreur!</strong>\n                <span class=\"block sm:inline\">{{ error }}</span>\n            </div>\n        </div>\n\n        <!-- Formation Data -->\n        <div *ngIf=\"formation && !loading\" class=\"p-8\">\n            <!-- Tabs Section -->\n            <div class=\"bg-white shadow-md rounded-lg overflow-hidden\">\n                <div class=\"border-b border-gray-200\">\n                    <nav class=\"flex -mb-px\">\n                        <button (click)=\"setActiveTab('info')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'info', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'info'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Informations de base\n                        </button>\n                        <button (click)=\"setActiveTab('sessions')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'sessions', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'sessions'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Sessions\n                        </button>\n                        <button (click)=\"setActiveTab('groups')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'groups', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'groups'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Groupes et Catégorie\n                        </button>\n                        <button (click)=\"setActiveTab('modules')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'modules', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'modules'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Modules\n                        </button>\n                        <button (click)=\"setActiveTab('results')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'results', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'results'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Résultats de formation\n                        </button>\n                    </nav>\n                </div>\n\n                <!-- Tab Content -->\n                <div class=\"p-6\">\n                    <!-- Basic Information Tab -->\n                    <div *ngIf=\"activeTab === 'info'\">\n                        <h2 class=\"text-2xl font-bold mb-6\">Informations de base</h2>\n                        <div class=\"grid grid-cols-1 gap-6\">\n                            <div>\n                                <label class=\"block text-sm font-medium text-gray-700\">Titre</label>\n                                <div class=\"mt-1 p-2 bg-gray-50 rounded-md border border-gray-200\">\n                                    {{ formation.title }}\n                                </div>\n                            </div>\n                            <div>\n                                <label class=\"block text-sm font-medium text-gray-700\">Description</label>\n                                <div class=\"mt-1 p-2 bg-gray-50 rounded-md border border-gray-200 min-h-[80px]\">\n                                    {{ formation.description }}\n                                </div>\n                            </div>\n                            <div>\n                                <label class=\"block text-sm font-medium text-gray-700\">Contenu</label>\n                                <div class=\"mt-1 p-2 bg-gray-50 rounded-md border border-gray-200 min-h-[120px]\">\n                                    {{ formation.content }}\n                                </div>\n                            </div>\n\n                            <!-- Final Quiz Information -->\n                            <div *ngIf=\"formation.finalQuizId\" class=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                                <label class=\"block text-lg font-medium text-gray-700 mb-2\">Quiz final</label>\n                                <div\n                                    class=\"flex items-center justify-between bg-white p-3 rounded border border-gray-200\">\n                                    <div class=\"flex items-center\">\n                                        <i class=\"fas fa-award text-primary mr-2\"></i>\n                                        <span class=\"text-sm font-medium\">{{ getQuizTitle(formation.finalQuizId)\n                                            }}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Sessions Tab -->\n                    <div *ngIf=\"activeTab === 'sessions'\">\n                        <div class=\"flex justify-between items-center mb-6\">\n                            <h2 class=\"text-2xl font-bold\">Sessions</h2>\n                        </div>\n\n                        <!-- Sessions Table -->\n                        <div class=\"overflow-x-auto\">\n                            <table class=\"min-w-full divide-y divide-gray-200\">\n                                <thead class=\"bg-gray-50\">\n                                    <tr>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Titre</th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Date de début</th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Date de fin</th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Statut</th>\n                                    </tr>\n                                </thead>\n                                <tbody class=\"bg-white divide-y divide-gray-200\">\n                                    <tr *ngFor=\"let session of formation.sessions\">\n                                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                                            <div class=\"text-sm font-medium text-gray-900\">{{ session.title }}</div>\n                                        </td>\n                                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                                            <div class=\"text-sm text-gray-500\">{{ session.startDate | date }}</div>\n                                        </td>\n                                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                                            <div class=\"text-sm text-gray-500\">{{ session.endDate | date }}</div>\n                                        </td>\n                                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                                            <span class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\"\n                                                [ngClass]=\"{\n                                                    'bg-green-100 text-green-800': getStatus(session) === 'En cours',\n                                                    'bg-yellow-100 text-yellow-800': getStatus(session) === 'Pas encore',\n                                                    'bg-gray-100 text-gray-800': getStatus(session) === 'Terminée'\n                                                }\">\n                                                {{ getStatus(session) }}\n                                            </span>\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"formation.sessions.length === 0\">\n                                        <td colspan=\"4\" class=\"px-6 py-4 text-center text-sm text-gray-500\">\n                                            Aucune session disponible\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <!-- Groups and Category Tab -->\n                    <div *ngIf=\"activeTab === 'groups'\" class=\"space-y-8\">\n                        <!-- Category Section -->\n                        <div class=\"mb-8\">\n                            <h3 class=\"text-xl font-bold mb-4\">Catégorie</h3>\n                            <div class=\"p-3 bg-gray-50 rounded-md border border-gray-200\">\n                                {{ formation.category }}\n                            </div>\n                        </div>\n\n                        <!-- Groups Section -->\n                        <div>\n                            <h3 class=\"text-xl font-bold mb-4\">Groupes cibles</h3>\n                            <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                                <div *ngFor=\"let group of formation.groups\"\n                                    class=\"p-3 bg-gray-50 rounded-md border border-gray-200\">\n                                    <div class=\"font-medium\">{{ group.name }}</div>\n                                    <div *ngIf=\"group.description\" class=\"text-sm text-gray-500\">{{ group.description }}\n                                    </div>\n                                </div>\n                                <div *ngIf=\"formation.groups.length === 0\"\n                                    class=\"col-span-3 text-center text-gray-500 p-4\">\n                                    Aucun groupe associé à cette formation\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Modules Tab -->\n                    <div *ngIf=\"activeTab === 'modules'\">\n                        <div class=\"flex justify-between items-center mb-6\">\n                            <h2 class=\"text-2xl font-bold\">Modules</h2>\n                        </div>\n                        <div class=\"space-y-6\">\n                            <div *ngFor=\"let module of formation.modules\"\n                                class=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\n                                <div class=\"flex items-start justify-between mb-4\">\n                                    <div class=\"flex-1\">\n                                        <h3 class=\"text-lg font-semibold\">{{ module.title }}</h3>\n                                        <p class=\"text-gray-600 mt-1\">{{ module.description }}</p>\n\n                                        <!-- Module Quiz -->\n                                        <div *ngIf=\"module.quizId\"\n                                            class=\"mt-3 p-2 bg-white rounded border border-gray-200 inline-flex items-center\">\n                                            <i class=\"fas fa-question-circle text-primary mr-2\"></i>\n                                            <span class=\"text-sm font-medium\">{{ getQuizTitle(module.quizId) }}</span>\n                                        </div>\n\n                                        <!-- Attachments -->\n                                        <div *ngIf=\"module.attachments && module.attachments.length > 0\" class=\"mt-4\">\n                                            <h4 class=\"text-md font-medium mb-2\">Pièces jointes</h4>\n                                            <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\n                                                <a *ngFor=\"let attachment of module.attachments\"\n                                                    [href]=\"attachment.lien\" target=\"_blank\"\n                                                    class=\"flex items-center p-2 bg-white rounded border border-gray-200 hover:border-primary\">\n                                                    <img [src]=\"getFileIcon(attachment.type)\" alt=\"File Icon\"\n                                                        class=\"w-6 h-6 mr-2\" />\n                                                    <span class=\"text-sm\">{{ getFileName(attachment.lien) || 'Fichier '\n                                                        + attachment.type }}</span>\n                                                </a>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"!module.attachments || module.attachments.length === 0\"\n                                            class=\"mt-4 text-sm text-gray-500\">\n                                            Aucune pièce jointe pour ce module\n                                        </div>\n                                    </div>\n                                    <div class=\"text-sm text-gray-500\">\n                                        Position: {{ module.position }}\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"formation.modules.length === 0\" class=\"text-center py-8 text-gray-500\">\n                                Aucun module disponible pour cette formation\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Results Tab -->\n                    <div *ngIf=\"activeTab === 'results'\">\n                        <app-quiz-results *ngIf=\"formation\" [formationId]=\"formation.id!\"></app-quiz-results>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Edit Button (Fixed) -->\n        <a [routerLink]=\"['/admin/formations/update', formation?.id]\"\n            class=\"fixed bottom-8 right-8 bg-primary text-white rounded-full p-4 shadow-lg hover:bg-primary-dark transition-colors\">\n            <i class=\"fas fa-edit text-xl\"></i>\n        </a>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { FORMATION_CATEGORIES } from 'src/app/core/constants/formation.constants';\nimport { Formation } from 'src/app/core/models/formation.model';\nimport Training from 'src/app/core/models/training';\nimport { FormationService } from 'src/app/core/services/formation.service';\nimport { ToasterService } from 'src/app/core/services/toaster.service';\nimport { SessionPopupComponent } from 'src/app/shared/components/session-popup/session-popup.component';\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.scss']\n})\nexport class TrainingComponent implements OnInit {\n  categories = FORMATION_CATEGORIES\n  trainings: Formation[] = [];\n\n  searchTerm: string = '';\n  isFormOpen: boolean = false;\n  currentTraining: Training | null = null;\n  filterCategory: string = '';\n  isLoading: boolean = false;\n\n\n  constructor(\n    private formationService: FormationService,\n    private dialog: MatDialog,\n    private toaster: ToasterService,\n    private router: Router\n  ) { }\n\n\n  get filteredTrainings(): Formation[] {\n    return this.trainings.filter(training =>\n      training.title.toLowerCase().includes(this.searchTerm.toLowerCase()) &&\n      (this.filterCategory === '' || training.category === this.filterCategory)\n    );\n  }\n\n  onSearch(event: Event): void {\n    this.searchTerm = (event.target as HTMLInputElement).value;\n  }\n\n  onFilterCategory(event: Event): void {\n    this.filterCategory = (event.target as HTMLSelectElement).value;\n  }\n\n  handleEditTraining(id: number): void {\n    this.router.navigate(['/admin/formations/edit', id]);\n  }\n\n  handleDeleteTraining(id: number): void {\n    // if (window.confirm('Êtes-vous sûr de vouloir supprimer cette formation ?')) {\n    //   this.trainings = this.trainings.filter(t => t.id !== id);\n    // }\n  }\n\n  handleAddSession(id: number): void {\n    const dialogRef = this.dialog.open(SessionPopupComponent, {\n      data: { formationId: id }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.fetchFormations();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.fetchFormations();\n  }\n\n  fetchFormations(): void {\n    this.isLoading = true;\n    this.formationService.getFormations().subscribe(formations => {\n      this.trainings = formations;\n      this.isLoading = false;\n    }, error => {\n      this.isLoading = false;\n      console.error('Erreur lors de la récupération des formations', error);\n    })\n  }\n\n  deleteFormation(id: number): void {\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer cette formation ?')) {\n      this.formationService.deleteFormation(id).subscribe(() => {\n        this.fetchFormations();\n        this.toaster.showSuccess('Formation supprimée', 'La formation a été supprimée avec succès.');\n\n      }, error => {\n        console.error('Erreur lors de la suppression de la formation', error);\n        this.toaster.showError('Erreur', 'Une erreur est survenue lors de la suppression de la formation.');\n      });\n    }\n  }\n}\n","<div class=\"animate-fade-in container mx-auto p-6\">\n    <div class=\"flex justify-between items-center mb-8\">\n        <h1 class=\"text-3xl font-bold text-gray-800\">Gestion des formations</h1>\n        <div class=\"flex gap-3\">\n            <button (click)=\"fetchFormations()\" [disabled]=\"isLoading\"\n                class=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg shadow-sm text-sm font-medium hover:bg-gray-200 transition-colors flex items-center disabled:opacity-50 disabled:cursor-not-allowed\">\n                <i *ngIf=\"!isLoading\" class=\"fa-solid fa-rotate-right mr-2\"></i>\n\n                <svg *ngIf=\"isLoading\" class=\"animate-spin h-4 w-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                    viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n                    </path>\n                </svg>\n\n                {{ isLoading ? 'Actualisation...' : 'Actualiser' }}\n            </button>\n            <button routerLink=\"/admin/formations/create\"\n                class=\"px-4 py-2 bg-primary text-white rounded-lg shadow-sm text-sm font-medium hover:bg-primary-dark flex items-center space-x-2 transition-colors\">\n                <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\"\n                        d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n                        clip-rule=\"evenodd\" />\n                </svg>\n                <span>Nouvelle formation</span>\n            </button>\n        </div>\n\n    </div>\n\n\n    <div *ngIf=\"!isFormOpen\" class=\"space-y-6\">\n        <div class=\"flex flex-col md:flex-row space-y-3 md:space-y-0 md:space-x-4\">\n            <div class=\"relative flex-grow\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"w-5 h-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\"\n                            d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                            clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n                <input type=\"text\" placeholder=\"Rechercher une formation...\"\n                    class=\"pl-10 w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                    [(ngModel)]=\"searchTerm\" (input)=\"onSearch($event)\" />\n            </div>\n\n            <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"w-5 h-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\"\n                            d=\"M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3.586L3.293 6.707A1 1 0 013 6V3z\"\n                            clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n                <select\n                    class=\" h-full w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-gray-50 text-gray-900 pr-10\"\n                    [(ngModel)]=\"filterCategory\" (change)=\"onFilterCategory($event)\">\n                    <option value=\"\">Toutes les catégories</option>\n                    <option *ngFor=\"let category of categories\" [value]=\"category\">{{category}}</option>\n                </select>\n            </div>\n        </div>\n\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <div *ngFor=\"let training of filteredTrainings\" class=\"col-span-1\">\n                <app-training-card [training]=\"training\" (edit)=\"handleEditTraining($event)\" [canEdit]=\"true\"\n                    [canDelete]=\"true\" (delete)=\"deleteFormation(training.id!)\"\n                    (addSession)=\"handleAddSession($event)\"></app-training-card>\n            </div>\n        </div>\n\n        <div *ngIf=\"filteredTrainings.length === 0 && !isLoading\" class=\"text-center py-10\">\n            <p class=\"text-gray-500 text-lg\">Aucune formation ne correspond à votre recherche.</p>\n        </div>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { FORMATION_CATEGORIES } from 'src/app/core/constants/formation.constants';\nimport { UserRole } from 'src/app/core/constants/roles.constants';\nimport { Attachment, Formation, Module } from 'src/app/core/models/formation.model';\nimport { Group } from 'src/app/core/models/group.model';\nimport { Quiz } from 'src/app/core/models/quiz.model';\nimport { AttachmentService } from 'src/app/core/services/attachment.service';\nimport { FormationService } from 'src/app/core/services/formation.service';\nimport { GroupService } from 'src/app/core/services/group.service';\nimport { QuizService } from 'src/app/core/services/quiz.service';\nimport { SesssionsService, SessionStatus } from 'src/app/core/services/sesssions.service';\nimport { ToasterService } from 'src/app/core/services/toaster.service';\nimport { SelectGroupPopupComponent } from 'src/app/shared/components/select-group-popup/select-group-popup.component';\nimport { SelectQuizComponent } from 'src/app/shared/components/select-quiz/select-quiz.component';\nimport { SessionPopupComponent } from 'src/app/shared/components/session-popup/session-popup.component';\n\n@Component({\n  selector: 'app-update-formation',\n  templateUrl: './update-formation.component.html',\n  styleUrls: ['./update-formation.component.scss']\n})\nexport class UpdateFormationComponent implements OnInit, OnDestroy {\n\n  categories = FORMATION_CATEGORIES;\n  availableRoles = [\n    UserRole.Administrator,\n    UserRole.HierarchicalLeader,\n    UserRole.TeamLeader,\n    UserRole.PostLeader,\n    UserRole.QualityAgent,\n    UserRole.Manager\n  ];\n  formationForm: FormGroup;\n  categoryForm: FormGroup;\n  groupForm: FormGroup;\n  modulesForm: FormGroup\n\n  formation: Formation | null = null;\n  groups: Group[] = [];\n  quizzes: Quiz[] = [];\n  isLoading = true;\n  formationId: number;\n  activeTab: string = 'info';\n  selectedFiles: { [key: number]: File } = {};\n  uploadProgress: { [key: number]: number } = {};\n  isUploading: { [key: number]: boolean } = {};\n  scrollPosition: number = 0;\n  isLoadingSessions: boolean = false;\n  private scrollTimeout: any;\n  private subscriptions: Subscription[] = [];\n\n\n  constructor(\n    private fb: FormBuilder,\n    private formationService: FormationService,\n    private groupService: GroupService,\n    private attachmentService: AttachmentService,\n    private sessionsService: SesssionsService,\n    private quizService: QuizService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toaster: ToasterService,\n    private dialog: MatDialog\n  ) {\n    this.formationId = +this.route.snapshot.paramMap.get('id')!;\n    this.formationForm = this.fb.group({\n      title: ['', [Validators.required, Validators.minLength(3)]],\n      description: ['', [Validators.required, Validators.minLength(10)]],\n      content: ['', Validators.required],\n      finalQuizId: [null]\n    });\n\n    this.categoryForm = this.fb.group({\n      category: ['', Validators.required]\n    });\n\n    this.groupForm = this.fb.group({\n      groupIds: this.fb.array([])\n    });\n\n    this.modulesForm = this.fb.group({\n      modules: this.fb.array([])\n    })\n\n  }\n\n  get groupIdsArray(): FormArray {\n    return this.groupForm.get('groupIds') as FormArray;\n  }\n\n  get groupsChanged(): boolean {\n    const currentIds = this.groupIdsArray.value;\n    const originalIds = this.formation?.groups.map(g => g.id) || [];\n    return currentIds.length !== originalIds.length ||\n      currentIds.some((id: number) => !originalIds.includes(id));\n  }\n\n  ngOnInit(): void {\n    // Get query parameters\n    const queryParamsSub = this.route.queryParams.subscribe(queryParams => {\n      // Get active tab from URL or use default\n      if (queryParams['tab']) {\n        this.activeTab = queryParams['tab'];\n      }\n\n      // Get scroll position from URL or use default\n      if (queryParams['scroll']) {\n        this.scrollPosition = +queryParams['scroll'];\n        // Apply scroll position after a short delay to ensure the DOM is ready\n        setTimeout(() => {\n          window.scrollTo(0, this.scrollPosition);\n        }, 100);\n      }\n    });\n    this.subscriptions.push(queryParamsSub);\n\n    this.loadData();\n    this.loadGroups();\n    this.loadQuizzes();\n\n    // Listen for scroll events to update scroll position\n    window.addEventListener('scroll', this.onScroll.bind(this));\n  }\n\n  /**\n   * Load all available quizzes\n   */\n  loadQuizzes(): void {\n    this.quizService.getQuizzes().subscribe({\n      next: (quizzes) => {\n        this.quizzes = quizzes;\n      },\n      error: (error) => {\n        console.error('Error loading quizzes:', error);\n        this.toaster.showError('Erreur', 'Impossible de charger les quiz.');\n      }\n    });\n  }\n\n  /**\n   * Handle scroll events\n   */\n  onScroll(): void {\n    // Debounce scroll events to avoid too many updates\n    clearTimeout(this.scrollTimeout);\n    this.scrollTimeout = setTimeout(() => {\n      this.scrollPosition = window.scrollY;\n      this.updateUrlParams();\n    }, 100);\n  }\n\n  /**\n   * Update URL parameters without reloading the page\n   */\n  updateUrlParams(): void {\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: {\n        tab: this.activeTab,\n        scroll: Math.round(this.scrollPosition)\n      },\n      queryParamsHandling: 'merge',\n      replaceUrl: true // Replace the URL instead of adding a new history entry\n    });\n  }\n\n  /**\n   * Change active tab and update URL\n   * @param tabName Name of the tab to activate\n   */\n  setActiveTab(tabName: string): void {\n    this.activeTab = tabName;\n    this.updateUrlParams();\n  }\n\n  /**\n   * Clean up event listeners and subscriptions\n   */\n  ngOnDestroy(): void {\n    // Remove scroll event listener\n    window.removeEventListener('scroll', this.onScroll.bind(this));\n\n    // Unsubscribe from all subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Open dialog to create a new session\n   */\n  openSessionDialog(): void {\n    const dialogRef = this.dialog.open(SessionPopupComponent, {\n      width: '500px',\n      data: { formationId: this.formationId }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // If we got a result, refresh the formation data to show the new session\n        this.loadData();\n        this.toaster.showSuccess('Succès', 'Session créée avec succès');\n      }\n    });\n  }\n\n  /**\n   * Open dialog to edit an existing session\n   * @param session The session to edit\n   */\n  editSession(session: any): void {\n    const dialogRef = this.dialog.open(SessionPopupComponent, {\n      width: '500px',\n      data: {\n        formationId: this.formationId,\n        session: session\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // If we got a result, refresh the formation data to show the updated session\n        this.loadData();\n        this.toaster.showSuccess('Succès', 'Session mise à jour avec succès');\n      }\n    });\n  }\n\n  /**\n   * Delete a session\n   * @param session The session to delete\n   */\n  deleteSession(session: any): void {\n    if (confirm(`Êtes-vous sûr de vouloir supprimer la session \"${session.title}\" ? Cette action est irréversible.`)) {\n      this.isLoadingSessions = true;\n      this.sessionsService.deleteSession(session.id).subscribe({\n        next: () => {\n          this.toaster.showSuccess('Succès', 'Session supprimée avec succès');\n          this.loadData();\n        },\n        error: (error: any) => {\n          console.error('Error deleting session:', error);\n          this.toaster.handleHttpError(error);\n          this.isLoadingSessions = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * Get the status of a session\n   * @param session The session to check\n   * @returns The status of the session (En cours, Terminée, Pas encore)\n   */\n  getSessionStatus(session: any): string {\n    const now = new Date();\n    const startDate = new Date(session.startDate);\n    const endDate = new Date(session.endDate);\n\n    if (now > endDate) {\n      return 'Terminée';\n    } else if (now < startDate) {\n      return 'Pas encore';\n    } else {\n      return 'En cours';\n    }\n  }\n\n  loadData(): void {\n    this.isLoading = true;\n    this.isLoadingSessions = true;\n    this.formationService.getFormation(this.formationId).subscribe({\n      next: (formation) => {\n        this.formation = formation;\n\n        this.populateForm(formation);\n\n        this.categoryForm.patchValue({\n          category: formation.category\n        });\n\n        this.groupIdsArray.clear();\n        formation.groups.forEach(group => {\n          this.groupIdsArray.push(this.fb.control(group.id));\n        });\n\n        // Clear modules array before adding new modules\n        this.modules.clear();\n        formation.modules.forEach(module => {\n          this.pushModule(module);\n        });\n\n        this.isLoading = false;\n        this.isLoadingSessions = false;\n      },\n      error: (error) => {\n        console.error('Error loading formation:', error);\n        this.toaster.showError('Erreur', 'Impossible de charger la formation.');\n        this.isLoading = false;\n        this.isLoadingSessions = false;\n      }\n    });\n  }\n\n  loadGroups(): void {\n    this.groupService.getGroups().subscribe({\n      next: (groups) => {\n        this.groups = groups;\n      },\n      error: (error) => {\n        console.error('Error loading groups:', error);\n        this.toaster.showError('Erreur', 'Impossible de charger les groupes.');\n      }\n    });\n  }\n\n  populateForm(formation: Formation): void {\n    this.formationForm.patchValue({\n      title: formation.title,\n      description: formation.description,\n      content: formation.content,\n      finalQuizId: formation.finalQuizId\n    });\n    this.formationForm.markAsPristine();\n  }\n\n  toggleGroup(groupId: number): void {\n    const index = this.groupIdsArray.controls.findIndex(ctrl => ctrl.value === groupId);\n    if (index !== -1) {\n      this.groupIdsArray.removeAt(index);\n    } else {\n      this.groupIdsArray.push(this.fb.control(groupId));\n    }\n    this.groupIdsArray.markAsDirty();\n  }\n\n  resetGroupsForm(): void {\n    this.groupIdsArray.clear();\n    this.formation?.groups.forEach(group => {\n      this.groupIdsArray.push(this.fb.control(group.id));\n    });\n    this.groupIdsArray.markAsPristine();\n  }\n\n  resetCategory(): void {\n    this.categoryForm.patchValue({\n      category: this.formation?.category\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/admin/formations']);\n  }\n\n  openGroupSelectionDialog(): void {\n    const dialogRef = this.dialog.open(SelectGroupPopupComponent, {\n      width: '500px',\n      data: {\n        groups: this.groups,\n        multiSelect: true\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log(result);\n        // Apply selected groups from dialog (optional)\n      }\n    });\n  }\n\n  updateContent(): void {\n    // Get the raw form value including disabled fields\n    const formData = {\n      ...this.formationForm.getRawValue()\n    };\n\n    this.formationService.updateFormationContent(this.formationId, formData).subscribe({\n      next: () => {\n        this.toaster.showSuccess('Succès', 'Contenu de la formation mis à jour avec succès');\n        this.loadData();  // Refresh the data\n      },\n      error: (error) => {\n        this.toaster.handleHttpError(error);\n      }\n    });\n  }\n  updateCategory(): void {\n    this.formationService.updateFormationCategory(this.formationId, this.categoryForm.value).subscribe({\n      next: () => {\n        this.toaster.showSuccess('Success', 'Formation category updated successfully');\n        this.loadData();  // Refresh the data\n      },\n      error: (error) => {\n        this.toaster.handleHttpError(error);\n      }\n    }\n\n    );\n  }\n  updateGroups(): void {\n    this.formationService.updateFormationGroups(this.formationId, this.groupForm.value).subscribe({\n      next: () => {\n        this.toaster.showSuccess('Success', 'Formation groups updated successfully');\n        this.loadData();  // Refresh the data\n      },\n      error: (error) => {\n        this.toaster.handleHttpError(error);\n      }\n    });\n  }\n\n  get modules(): FormArray {\n    return this.modulesForm.get('modules') as FormArray;\n  }\n\n  createModuleFormGroup(): FormGroup {\n    return this.fb.group({\n      id: [null],\n      formationId: [this.formationId],\n      title: ['', [Validators.required, Validators.minLength(3)]],\n      description: ['', [Validators.required, Validators.minLength(10)]],\n      position: [this.modules.length + 1, Validators.required],\n      quizId: [null]\n    });\n  }\n\n  addModule(): void {\n    this.modules.push(this.createModuleFormGroup());\n    this.updateModulePositions();\n  }\n\n  removeModule(index: number): void {\n    this.modules.removeAt(index);\n    this.updateModulePositions();\n  }\n\n  updateModulePositions(): void {\n    this.modules.controls.forEach((control, index) => {\n      control.patchValue({ position: index + 1 });\n    });\n  }\n  moveModule(fromIndex: number, toIndex: number): void {\n    const module = this.modules.at(fromIndex);\n    this.modules.removeAt(fromIndex);\n    this.modules.insert(toIndex, module);\n    this.updateModulePositions();\n  }\n\n  pushModule(module: Module) {\n    this.modules.push(this.fb.group({\n      id: [module.id],\n      formationId: [module.formationId],\n      title: [module.title, [Validators.required, Validators.minLength(3)]],\n      description: [module.description, [Validators.required, Validators.minLength(10)]],\n      position: [module.position, Validators.required],\n      quizId: [module.quizId]\n    }));\n  }\n\n  updateModules(): void {\n    if (this.modulesForm.valid) {\n      this.formationService.updateFormationModules(this.formationId, this.modulesForm.value).subscribe({\n        next: () => {\n          this.toaster.showSuccess('Succès', 'Modules mis à jour avec succès');\n          this.loadData();  // Refresh the data\n        },\n        error: (error: any) => {\n          this.toaster.handleHttpError(error);\n        }\n      });\n    } else {\n      this.modulesForm.markAllAsTouched();\n      this.toaster.showError('Erreur', 'Veuillez remplir tous les champs requis.');\n    }\n  }\n\n  /**\n   * Get attachments for a specific module\n   * @param moduleIndex Index of the module in the form array\n   * @returns Array of attachments for the module\n   */\n  getModuleAttachments(moduleIndex: number): Attachment[] {\n    if (!this.formation || !this.formation.modules) return [];\n\n    const moduleId = this.modules.at(moduleIndex).get('id')?.value;\n    if (!moduleId) return [];\n\n    const module = this.formation.modules.find(m => m.id === moduleId);\n    return module?.attachments || [];\n  }\n\n  /**\n   * Get file icon based on file type\n   * @param fileType The type of the file\n   * @returns Path to the icon image\n   */\n  getFileIcon(fileType: string): string {\n    return this.attachmentService.getFileIcon(fileType);\n  }\n\n  /**\n   * Extract filename from URL\n   * @param url The URL of the file\n   * @returns The filename\n   */\n  getFileName(url: string): string {\n    return this.attachmentService.getFileName(url);\n  }\n\n  /**\n   * Handle file selection\n   * @param event The file input change event\n   * @param moduleIndex Index of the module in the form array\n   */\n  onFileSelected(event: Event, moduleIndex: number): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      this.selectedFiles[moduleIndex] = input.files[0];\n    }\n  }\n\n  /**\n   * Format file size in bytes to human-readable format\n   * @param bytes File size in bytes\n   * @returns Formatted file size (e.g., \"2.5 MB\")\n   */\n  formatFileSize(bytes: number): string {\n    return this.attachmentService.formatFileSize(bytes);\n  }\n\n  /**\n   * Upload selected file for a module\n   * @param moduleIndex Index of the module in the form array\n   */\n  uploadFile(moduleIndex: number): void {\n    const file = this.selectedFiles[moduleIndex];\n    if (!file) return;\n\n    const moduleId = this.modules.at(moduleIndex).get('id')?.value;\n    if (!moduleId) {\n      this.toaster.showError('Erreur', 'Veuillez d\\'abord enregistrer le module avant d\\'ajouter des pièces jointes.');\n      return;\n    }\n\n    // Set uploading state\n    this.isUploading[moduleIndex] = true;\n\n    // Initialize progress\n    this.uploadProgress[moduleIndex] = 0;\n\n    // Upload file\n    this.attachmentService.uploadAttachment(moduleId, file).subscribe({\n      next: () => {\n        // Update progress to 100%\n        this.uploadProgress[moduleIndex] = 100;\n\n        // Show success message\n        this.toaster.showSuccess('Succès', 'Fichier téléchargé avec succès');\n\n        // Reload data to refresh attachments\n        this.loadData();\n\n        // Reset states after a delay\n        setTimeout(() => {\n          delete this.selectedFiles[moduleIndex];\n          delete this.uploadProgress[moduleIndex];\n          delete this.isUploading[moduleIndex];\n        }, 2000);\n      },\n      error: (error: any) => {\n        // Reset states\n        delete this.uploadProgress[moduleIndex];\n        delete this.isUploading[moduleIndex];\n\n        // Show error message\n        this.toaster.handleHttpError(error);\n      }\n    });\n  }\n\n  /**\n   * Delete an attachment\n   * @param moduleIndex Index of the module in the form array (not used but kept for consistency)\n   * @param attachmentId ID of the attachment to delete\n   */\n  deleteAttachment(_moduleIndex: number, attachmentId: number | undefined): void {\n    if (!attachmentId) return;\n\n    if (confirm('Êtes-vous sûr de vouloir supprimer cette pièce jointe ? Cette action est irréversible.')) {\n      this.attachmentService.deleteAttachment(attachmentId).subscribe({\n        next: () => {\n          this.toaster.showSuccess('Succès', 'Pièce jointe supprimée avec succès');\n          this.loadData();\n        },\n        error: (error: any) => {\n          this.toaster.handleHttpError(error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Open dialog to select a quiz for a module\n   * @param moduleIndex Index of the module in the form array\n   */\n  openQuizSelectionDialog(moduleIndex: number): void {\n    // Get all quiz IDs that are already assigned to other modules\n    const disabledQuizIds: number[] = [];\n\n    // Disable quizzes assigned to other modules\n    this.modules.controls.forEach((control, index) => {\n      const quizId = control.get('quizId')?.value;\n      if (quizId && index !== moduleIndex) {\n        disabledQuizIds.push(quizId);\n      }\n    });\n\n    // Get the currently selected quiz ID for this module\n    const selectedQuizId = this.modules.at(moduleIndex).get('quizId')?.value;\n\n    // Open the dialog\n    const dialogRef = this.dialog.open(SelectQuizComponent, {\n      width: '500px',\n      data: {\n        disabledQuizIds,\n        context: 'module',\n        selectedQuizId\n      }\n    });\n\n    // Handle the result\n    dialogRef.afterClosed().subscribe(quiz => {\n      if (quiz) {\n        // Update the module's quizId\n        this.modules.at(moduleIndex).patchValue({ quizId: quiz.id });\n        this.modules.markAsDirty();\n      }\n    });\n  }\n\n  /**\n   * Remove the quiz from a module\n   * @param moduleIndex Index of the module in the form array\n   */\n  removeQuiz(moduleIndex: number): void {\n    this.modules.at(moduleIndex).patchValue({ quizId: null });\n    this.modules.markAsDirty();\n  }\n\n  /**\n   * Get the title of a quiz by its ID\n   * @param quizId ID of the quiz\n   * @returns Title of the quiz or a default message\n   */\n  getQuizTitle(quizId: number | null): string {\n    if (!quizId) return 'Aucun quiz sélectionné';\n    const quiz = this.quizzes.find(q => q.id === quizId);\n    return quiz ? quiz.title : 'Quiz inconnu';\n  }\n\n  /**\n   * Open dialog to select a final quiz for the formation\n   */\n  openFinalQuizSelectionDialog(): void {\n    // Get all quiz IDs that are already assigned to modules\n    const disabledQuizIds: number[] = [];\n\n    // Disable quizzes assigned to modules\n    this.modules.controls.forEach(control => {\n      const quizId = control.get('quizId')?.value;\n      if (quizId) {\n        disabledQuizIds.push(quizId);\n      }\n    });\n\n    // Get the currently selected final quiz ID\n    const selectedQuizId = this.formationForm.get('finalQuizId')?.value;\n\n    // Open the dialog\n    const dialogRef = this.dialog.open(SelectQuizComponent, {\n      width: '500px',\n      data: {\n        disabledQuizIds,\n        context: 'formation',\n        selectedQuizId\n      }\n    });\n\n    // Handle the result\n    dialogRef.afterClosed().subscribe(quiz => {\n      if (quiz) {\n        // Update the formation's finalQuizId\n        this.formationForm.patchValue({ finalQuizId: quiz.id });\n        this.formationForm.markAsDirty();\n      }\n    });\n  }\n\n  /**\n   * Remove the final quiz from the formation\n   */\n  removeFinalQuiz(): void {\n    this.formationForm.patchValue({ finalQuizId: null });\n    this.formationForm.markAsDirty();\n  }\n}\n","<div class=\"max-w-6xl mx-auto\">\n    <div class=\"mt-10\">\n        <!-- Header -->\n        <div class=\"px-8 py-4\">\n            <h1 class=\"text-3xl font-bold text-gray-800\">Modifier la formation</h1>\n            <p class=\"mt-1 text-sm text-gray-600\">Mettez à jour les informations de la formation</p>\n        </div>\n\n        <!-- Loading State -->\n        <div *ngIf=\"isLoading\" class=\"text-center py-4\">\n            <p class=\"text-gray-600\">Chargement...</p>\n        </div>\n\n        <!-- Error State -->\n        <div *ngIf=\"!formation && !isLoading\" class=\"text-center py-4\">\n            <p class=\"text-gray-600\">Formation non trouvée.</p>\n        </div>\n\n        <!-- Main Content -->\n        <div class=\"p-8\" *ngIf=\"formation && !isLoading\">\n            <!-- Tabs Section -->\n            <div class=\"bg-white shadow-md rounded-lg overflow-hidden\">\n                <div class=\"border-b border-gray-200\">\n                    <nav class=\"flex -mb-px\">\n                        <button (click)=\"setActiveTab('info')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'info', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'info'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Informations de base\n                        </button>\n                        <button (click)=\"setActiveTab('sessions')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'sessions', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'sessions'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Sessions\n                        </button>\n                        <button (click)=\"setActiveTab('groups')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'groups', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'groups'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Groupes et Catégorie\n                        </button>\n                        <button (click)=\"setActiveTab('modules')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'modules', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'modules'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Modules\n                        </button>\n                        <button (click)=\"setActiveTab('results')\"\n                            [ngClass]=\"{'border-primary text-primary': activeTab === 'results', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeTab !== 'results'}\"\n                            class=\"py-4 px-6 font-medium text-sm border-b-2 focus:outline-none\">\n                            Résultats de formation\n                        </button>\n                    </nav>\n                </div>\n\n                <!-- Tab Content -->\n                <div class=\"p-6\">\n                    <!-- Basic Information Tab -->\n                    <div *ngIf=\"activeTab === 'info'\">\n                        <form [formGroup]=\"formationForm\" (ngSubmit)=\"updateContent()\">\n                            <h2 class=\"text-2xl font-bold mb-6\">Informations de base</h2>\n                            <div class=\"grid grid-cols-1 gap-6\">\n                                <div>\n                                    <label class=\"block text-sm font-medium text-gray-700\">Titre</label>\n                                    <input type=\"text\" formControlName=\"title\"\n                                        class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\" />\n                                    <div *ngIf=\"formationForm.get('title')?.invalid && formationForm.get('title')?.touched\"\n                                        class=\"text-red-500 text-sm mt-1\">\n                                        <span *ngIf=\"formationForm.get('title')?.errors?.['required']\">Le titre est\n                                            requis.</span>\n                                        <span *ngIf=\"formationForm.get('title')?.errors?.['minlength']\">Le titre doit\n                                            contenir au moins 3 caractères.</span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <label class=\"block text-sm font-medium text-gray-700\">Description</label>\n                                    <textarea formControlName=\"description\" rows=\"3\"\n                                        class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\n                                    <div *ngIf=\"formationForm.get('description')?.invalid && formationForm.get('description')?.touched\"\n                                        class=\"text-red-500 text-sm mt-1\">\n                                        <span *ngIf=\"formationForm.get('description')?.errors?.['required']\">La\n                                            description est requise.</span>\n                                        <span *ngIf=\"formationForm.get('description')?.errors?.['minlength']\">La\n                                            description doit contenir au moins 10 caractères.</span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <label class=\"block text-sm font-medium text-gray-700\">Contenu</label>\n                                    <textarea formControlName=\"content\" rows=\"5\"\n                                        class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\n                                    <div *ngIf=\"formationForm.get('content')?.invalid && formationForm.get('content')?.touched\"\n                                        class=\"text-red-500 text-sm mt-1\">\n                                        <span *ngIf=\"formationForm.get('content')?.errors?.['required']\">Le contenu est\n                                            requis.</span>\n                                    </div>\n                                </div>\n\n                                <!-- Final Quiz Selection -->\n                                <div class=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                                    <label class=\"block text-lg font-medium text-gray-700 mb-2\">Quiz final</label>\n                                    <p class=\"text-sm text-gray-500 mb-3\">\n                                        Le quiz final est présenté à la fin de la formation et détermine si\n                                        l'utilisateur a réussi la formation.\n                                    </p>\n                                    <div class=\"flex items-center space-x-2\">\n                                        <div *ngIf=\"!formationForm.get('finalQuizId')?.value\" class=\"flex-1\">\n                                            <button type=\"button\" (click)=\"openFinalQuizSelectionDialog()\"\n                                                class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\n                                                <i class=\"fas fa-plus-circle mr-2 text-primary\"></i>\n                                                Sélectionner un quiz final\n                                            </button>\n                                        </div>\n                                        <div *ngIf=\"formationForm.get('finalQuizId')?.value\"\n                                            class=\"flex-1 flex items-center justify-between bg-white p-3 rounded border border-gray-200\">\n                                            <div class=\"flex items-center\">\n                                                <i class=\"fas fa-award text-primary mr-2\"></i>\n                                                <span class=\"text-sm font-medium\">{{\n                                                    getQuizTitle(formationForm.get('finalQuizId')?.value) }}</span>\n                                            </div>\n                                            <div class=\"flex space-x-2\">\n                                                <button type=\"button\" (click)=\"openFinalQuizSelectionDialog()\"\n                                                    class=\"text-primary hover:text-primary-dark\">\n                                                    <i class=\"fas fa-exchange-alt\"></i>\n                                                </button>\n                                                <button type=\"button\" (click)=\"removeFinalQuiz()\"\n                                                    class=\"text-red-500 hover:text-red-700\">\n                                                    <i class=\"fas fa-times\"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"formationForm.dirty\"\n                                class=\"flex justify-end space-x-4 mt-8 animate-accordion-down\">\n                                <button type=\"button\" (click)=\"cancel()\"\n                                    class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\">\n                                    Annuler\n                                </button>\n                                <button type=\"submit\" [disabled]=\"formationForm.invalid || isLoading\"\n                                    class=\"px-4 py-2 text-sm font-medium text-white bg-primary rounded-lg hover:bg-primary-dark disabled:opacity-50\">\n                                    Mettre à jour\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n\n                    <!-- Sessions Tab -->\n                    <div *ngIf=\"activeTab === 'sessions'\">\n                        <div class=\"flex justify-between items-center mb-6\">\n                            <h2 class=\"text-2xl font-bold\">Sessions</h2>\n                            <button type=\"button\" (click)=\"openSessionDialog()\"\n                                class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark\">\n                                <i class=\"fas fa-plus mr-2\"></i>\n                                Ajouter une session\n                            </button>\n                        </div>\n\n                        <!-- Loading State -->\n                        <div *ngIf=\"isLoadingSessions\" class=\"flex justify-center py-8\">\n                            <div class=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary\"></div>\n                        </div>\n\n                        <!-- Sessions Table -->\n                        <div class=\"overflow-x-auto\" *ngIf=\"!isLoadingSessions\">\n                            <table class=\"min-w-full divide-y divide-gray-200\">\n                                <thead class=\"bg-gray-50\">\n                                    <tr>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Titre</th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Date de début</th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Date de fin</th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Statut</th>\n                                        <th scope=\"col\"\n                                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody class=\"bg-white divide-y divide-gray-200\">\n                                    <tr *ngFor=\"let session of formation.sessions\">\n                                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                                            <div class=\"text-sm font-medium text-gray-900\">{{ session.title }}</div>\n                                        </td>\n                                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                                            <div class=\"text-sm text-gray-500\">{{ session.startDate | date }}</div>\n                                        </td>\n                                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                                            <div class=\"text-sm text-gray-500\">{{ session.endDate | date }}</div>\n                                        </td>\n                                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                                            <span class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\"\n                                                [ngClass]=\"{\n                                                    'bg-green-100 text-green-800': getSessionStatus(session) === 'En cours',\n                                                    'bg-yellow-100 text-yellow-800': getSessionStatus(session) === 'Pas encore',\n                                                    'bg-gray-100 text-gray-800': getSessionStatus(session) === 'Terminée'\n                                                }\">\n                                                {{ getSessionStatus(session) }}\n                                            </span>\n                                        </td>\n                                        <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                                            <button (click)=\"editSession(session)\"\n                                                class=\"text-primary hover:text-primary-dark mr-3\">\n                                                <i class=\"fas fa-edit\"></i>\n                                            </button>\n                                            <button (click)=\"deleteSession(session)\"\n                                                class=\"text-red-600 hover:text-red-900\">\n                                                <i class=\"fas fa-trash\"></i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"formation.sessions.length === 0\">\n                                        <td colspan=\"5\" class=\"px-6 py-4 text-center text-sm text-gray-500\">\n                                            Aucune session disponible\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <!-- Groups and Category Tab -->\n                    <div *ngIf=\"activeTab === 'groups'\" class=\"space-y-8\">\n                        <!-- Category Section -->\n                        <form [formGroup]=\"categoryForm\" (ngSubmit)=\"updateCategory()\">\n                            <div class=\"mb-8\">\n                                <h3 class=\"text-xl font-bold mb-4\">Catégorie</h3>\n                                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                                    <div *ngFor=\"let category of categories\" class=\"category-item\">\n                                        <input type=\"radio\" [id]=\"'category-' + category\" [value]=\"category\"\n                                            formControlName=\"category\" class=\"category-radio\" />\n                                        <label [for]=\"'category-' + category\" class=\"category-label\">\n                                            <div class=\"category-content\">\n                                                <span class=\"category-name\">{{ category }}</span>\n                                            </div>\n                                            <div class=\"category-icon\">\n                                                <i class=\"fas fa-check\"></i>\n                                            </div>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"categoryForm.dirty\"\n                                    class=\"flex justify-end space-x-4 mt-4 animate-accordion-down\">\n                                    <button type=\"button\" (click)=\"resetCategory()\"\n                                        class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\">\n                                        Annuler\n                                    </button>\n                                    <button type=\"submit\" [disabled]=\"categoryForm.invalid\"\n                                        class=\"px-4 py-2 text-sm font-medium text-white bg-primary rounded-lg hover:bg-primary-dark disabled:opacity-50\">\n                                        Mettre à jour\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n\n                        <!-- Groups Section -->\n                        <form [formGroup]=\"groupForm\" (ngSubmit)=\"updateGroups()\">\n                            <div>\n                                <h3 class=\"text-xl font-bold mb-4\">Groupes cibles</h3>\n                                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                                    <div *ngFor=\"let group of groups\" class=\"group-item\">\n                                        <input type=\"checkbox\" [id]=\"'group-' + group.id\"\n                                            [checked]=\"groupIdsArray.value.includes(group.id)\"\n                                            (change)=\"toggleGroup(group.id)\" class=\"group-checkbox\" />\n                                        <label [for]=\"'group-' + group.id\" class=\"group-label\">\n                                            <div class=\"group-content\">\n                                                <span class=\"group-name\">{{ group.name }}</span>\n                                                <span *ngIf=\"group.description\" class=\"group-description\">{{\n                                                    group.description}}</span>\n                                            </div>\n                                            <div class=\"group-icon\">\n                                                <i class=\"fas fa-check\"></i>\n                                            </div>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"groupIdsArray.dirty\"\n                                    class=\"flex justify-end space-x-4 mt-4 animate-accordion-down\">\n                                    <button type=\"button\" (click)=\"resetGroupsForm()\"\n                                        class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\">\n                                        Annuler\n                                    </button>\n                                    <button type=\"submit\" [disabled]=\"groupForm.invalid\"\n                                        class=\"px-4 py-2 text-sm font-medium text-white bg-primary rounded-lg hover:bg-primary-dark disabled:opacity-50\">\n                                        Mettre à jour\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n\n                    <!-- Modules Tab -->\n                    <div *ngIf=\"activeTab === 'modules'\">\n                        <form [formGroup]=\"modulesForm\">\n                            <div class=\"flex justify-between items-center mb-6\">\n                                <h2 class=\"text-2xl font-bold\">Modules</h2>\n                                <button type=\"button\" (click)=\"addModule()\"\n                                    class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark\">\n                                    <i class=\"fas fa-plus mr-2\"></i>\n                                    Ajouter un module\n                                </button>\n                            </div>\n                            <div formArrayName=\"modules\" class=\"space-y-4\">\n                                <div *ngFor=\"let module of modules.controls; let i = index\" [formGroupName]=\"i\"\n                                    class=\"module-item bg-gray-50 p-4 rounded-lg\" cdkDrag>\n                                    <div class=\"flex items-start space-x-4\">\n                                        <div class=\"flex-1\">\n                                            <div class=\"grid grid-cols-1 gap-4\">\n                                                <div>\n                                                    <label class=\"block text-sm font-medium text-gray-700\">Titre</label>\n                                                    <input type=\"text\" formControlName=\"title\"\n                                                        class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\" />\n                                                </div>\n                                                <div>\n                                                    <label\n                                                        class=\"block text-sm font-medium text-gray-700\">Description</label>\n                                                    <textarea formControlName=\"description\" rows=\"2\"\n                                                        class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\n                                                </div>\n\n                                                <!-- Quiz Selection -->\n                                                <div>\n                                                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">Quiz\n                                                        associé</label>\n                                                    <div class=\"flex items-center space-x-2\">\n                                                        <div *ngIf=\"!module.get('quizId')?.value\" class=\"flex-1\">\n                                                            <button type=\"button\" (click)=\"openQuizSelectionDialog(i)\"\n                                                                class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\">\n                                                                <i class=\"fas fa-plus-circle mr-2 text-primary\"></i>\n                                                                Sélectionner un quiz\n                                                            </button>\n                                                        </div>\n                                                        <div *ngIf=\"module.get('quizId')?.value\"\n                                                            class=\"flex-1 flex items-center justify-between bg-gray-50 p-2 rounded\">\n                                                            <div class=\"flex items-center\">\n                                                                <i class=\"fas fa-question-circle text-primary mr-2\"></i>\n                                                                <span class=\"text-sm font-medium\">{{\n                                                                    getQuizTitle(module.get('quizId')?.value) }}</span>\n                                                            </div>\n                                                            <div class=\"flex space-x-2\">\n                                                                <button type=\"button\"\n                                                                    (click)=\"openQuizSelectionDialog(i)\"\n                                                                    class=\"text-primary hover:text-primary-dark\">\n                                                                    <i class=\"fas fa-exchange-alt\"></i>\n                                                                </button>\n                                                                <button type=\"button\" (click)=\"removeQuiz(i)\"\n                                                                    class=\"text-red-500 hover:text-red-700\">\n                                                                    <i class=\"fas fa-times\"></i>\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!-- Attachments Section -->\n                                                <div>\n                                                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">Pièces\n                                                        jointes</label>\n\n                                                    <!-- Existing Attachments -->\n                                                    <div *ngIf=\"getModuleAttachments(i).length > 0\" class=\"mb-3\">\n                                                        <div *ngFor=\"let attachment of getModuleAttachments(i); let j = index\"\n                                                            class=\"flex items-center justify-between p-2 bg-gray-50 rounded mb-2\">\n                                                            <div class=\"flex items-center\">\n                                                                <img [src]=\"getFileIcon(attachment.type)\"\n                                                                    alt=\"File Icon\" class=\"w-6 h-6 mr-2\" />\n                                                                <a [href]=\"attachment.lien\" target=\"_blank\"\n                                                                    class=\"text-primary hover:underline\">\n                                                                    {{ getFileName(attachment.lien) || 'Fichier ' +\n                                                                    attachment.type }}\n                                                                </a>\n                                                            </div>\n                                                            <button type=\"button\"\n                                                                (click)=\"deleteAttachment(i, attachment.id)\"\n                                                                class=\"text-red-500 hover:text-red-700\">\n                                                                <i class=\"fas fa-trash\"></i>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n\n                                                    <!-- Upload New Attachment -->\n                                                    <div class=\"mt-3\">\n                                                        <input type=\"file\" #fileInput\n                                                            (change)=\"onFileSelected($event, i)\" class=\"!hidden\"\n                                                            accept=\".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png,.gif,.mp4,.avi,.mov\" />\n\n                                                        <!-- File Upload Button -->\n                                                        <label for=\"file-upload-{{i}}\"\n                                                            class=\"cursor-pointer inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\"\n                                                            (click)=\"fileInput.click()\">\n                                                            <i class=\"fas fa-paperclip mr-2\"></i>\n                                                            Ajouter un fichier\n                                                        </label>\n\n                                                        <!-- Selected File Info -->\n                                                        <div *ngIf=\"selectedFiles[i]\"\n                                                            class=\"flex items-center mt-2 bg-gray-50 p-2 rounded\">\n                                                            <div class=\"flex-1\">\n                                                                <div class=\"flex items-center\">\n                                                                    <i class=\"fas fa-file mr-2 text-primary\"></i>\n                                                                    <span class=\"text-sm font-medium\">{{\n                                                                        selectedFiles[i].name }}</span>\n                                                                </div>\n                                                                <span class=\"text-xs text-gray-500\">{{\n                                                                    formatFileSize(selectedFiles[i].size) }}</span>\n                                                            </div>\n                                                            <button type=\"button\" (click)=\"uploadFile(i)\"\n                                                                class=\"inline-flex items-center px-3 py-1 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-primary hover:!bg-primary/80 focus:outline-none\">\n                                                                <i class=\"fas fa-upload mr-1\"></i>\n                                                                Télécharger\n                                                            </button>\n                                                        </div>\n\n                                                        <!-- File Type Info -->\n                                                        <div *ngIf=\"!selectedFiles[i] && !isUploading[i]\" class=\"mt-2\">\n                                                            <p class=\"text-xs text-gray-500\">\n                                                                Formats acceptés: PDF, Word, Excel, PowerPoint, images\n                                                                et vidéos\n                                                            </p>\n                                                        </div>\n\n                                                        <!-- Upload Progress and Status -->\n                                                        <div *ngIf=\"isUploading[i]\" class=\"mt-2\">\n                                                            <div class=\"flex items-center mb-1\">\n                                                                <div class=\"w-full bg-gray-200 rounded-full h-2\">\n                                                                    <div class=\"bg-primary h-2 rounded-full transition-all duration-300\"\n                                                                        [style.width.%]=\"uploadProgress[i]\"></div>\n                                                                </div>\n                                                            </div>\n                                                            <div\n                                                                class=\"flex justify-between items-center text-xs text-gray-500\">\n                                                                <span>{{ uploadProgress[i] }}% terminé</span>\n                                                                <span *ngIf=\"uploadProgress[i] < 100\">Téléchargement en\n                                                                    cours...</span>\n                                                                <span *ngIf=\"uploadProgress[i] === 100\"\n                                                                    class=\"text-green-600\">\n                                                                    <i class=\"fas fa-check-circle mr-1\"></i>\n                                                                    Téléchargement réussi\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"flex flex-col space-y-2\">\n                                            <div class=\"drag-handle cursor-move\" cdkDragHandle>\n                                                <i class=\"fas fa-grip-vertical text-gray-400\"></i>\n                                            </div>\n                                            <button type=\"button\" (click)=\"moveModule(i, i - 1)\" [disabled]=\"i === 0\"\n                                                class=\"p-2 text-gray-500 hover:text-gray-700 disabled:opacity-50\">\n                                                <i class=\"fas fa-arrow-up\"></i>\n                                            </button>\n                                            <button type=\"button\" (click)=\"moveModule(i, i + 1)\"\n                                                [disabled]=\"i === modules.length - 1\"\n                                                class=\"p-2 text-gray-500 hover:text-gray-700 disabled:opacity-50\">\n                                                <i class=\"fas fa-arrow-down\"></i>\n                                            </button>\n                                            <button type=\"button\" (click)=\"removeModule(i)\"\n                                                class=\"p-2 text-red-500 hover:text-red-700\">\n                                                <i class=\"fas fa-trash\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div class=\"mt-2 text-sm text-gray-500\">\n                                        Position: {{ module.get('position')?.value }}\n                                    </div>\n                                </div>\n                                <div *ngIf=\"modules.length === 0\" class=\"text-center py-8 text-gray-500\">\n                                    Aucun module disponible. Cliquez sur \"Ajouter un module\" pour commencer.\n                                </div>\n                            </div>\n                            <div *ngIf=\"modules.dirty\" class=\"flex justify-end space-x-4 mt-6\">\n                                <button type=\"button\" (click)=\"loadData()\"\n                                    class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\">\n                                    Annuler\n                                </button>\n                                <button type=\"button\" (click)=\"updateModules()\"\n                                    class=\"px-4 py-2 text-sm font-medium text-white bg-primary rounded-lg hover:bg-primary-dark\">\n                                    Enregistrer les modules\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n\n                    <!-- Results Tab -->\n                    <div *ngIf=\"activeTab === 'results'\">\n                        <h2 class=\"text-2xl font-bold mb-6\">Résultats de formation</h2>\n                        <div class=\"bg-gray-50 p-8 rounded-lg text-center\">\n                            <p class=\"text-gray-500\">Les résultats de formation seront affichés ici.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { QuizService } from '../../../core/services/quiz.service';\n\n@Component({\n  selector: 'app-create-quizs',\n  templateUrl: './create-quizs.component.html',\n  styleUrls: ['./create-quizs.component.scss']\n})\nexport class CreateQuizsComponent implements OnInit {\n  quizForm: FormGroup;\n  isLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private quizService: QuizService\n  ) {\n    this.quizForm = this.fb.group({\n      title: ['', [Validators.required, Validators.minLength(3)]],\n      questions: this.fb.array([\n        this.createQuestion()\n      ])\n    });\n  }\n\n  ngOnInit(): void { }\n\n  get questions(): FormArray {\n    return this.quizForm.get('questions') as FormArray;\n  }\n\n  createQuestion(): FormGroup {\n    return this.fb.group({\n      points: [1, [Validators.required, Validators.min(1)]],\n      order: [0],\n      title: [\"\", [Validators.required, Validators.minLength(6)]],\n      answers: this.fb.array([\n        this.createAnswer(),\n        this.createAnswer()\n      ])\n    });\n  }\n\n  createAnswer(): FormGroup {\n    return this.fb.group({\n      text: ['', Validators.required],\n      isCorrect: [false]\n    });\n  }\n\n  addQuestion(): void {\n    this.questions.push(this.createQuestion());\n  }\n\n  removeQuestion(index: number): void {\n    if (this.questions.length > 1) {\n      this.questions.removeAt(index);\n    }\n  }\n\n  getAnswers(questionIndex: number): FormArray {\n    return this.questions.at(questionIndex).get('answers') as FormArray;\n  }\n\n  addAnswer(questionIndex: number): void {\n    this.getAnswers(questionIndex).push(this.createAnswer());\n  }\n\n  removeAnswer(questionIndex: number, answerIndex: number): void {\n    const answers = this.getAnswers(questionIndex);\n    if (answers.length > 2) {\n      answers.removeAt(answerIndex);\n    }\n  }\n\n  onSubmit(): void {\n    if (this.quizForm.valid) {\n      this.isLoading = true;\n      this.quizService.createQuiz(this.quizForm.value).subscribe({\n        next: (response) => {\n          console.log('Quiz created successfully:', response);\n          this.isLoading = false;\n          this.router.navigate(['/admin/quizs'])\n        },\n        error: (error) => {\n          console.error('Error creating quiz:', error);\n          this.isLoading = false;\n        }\n      });\n    } else {\n    }\n\n\n    console.log(\n      this.quizForm.value\n    )\n  }\n\n}\n","<div class=\"max-w-4xl p-6\">\n    <form [formGroup]=\"quizForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-6\">\n        <!-- Title Field -->\n        <div class=\"space-y-2\">\n            <label class=\"block  font-medium text-gray-700\">Titre du quiz</label>\n            <input type=\"text\" formControlName=\"title\"\n                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                placeholder=\"Entrez le titre du quiz\">\n            <div *ngIf=\"quizForm.get('title')?.invalid && quizForm.get('title')?.touched\" class=\"text-red-500 text-sm\">\n                Le titre doit contenir au moins 3 caractères\n            </div>\n        </div>\n\n        <!-- Questions Section -->\n        <div class=\"space-y-4\">\n            <div class=\"flex items-center justify-between\">\n                <h3 class=\"text-lg font-medium\">Questions</h3>\n                <button type=\"button\" (click)=\"addQuestion()\"\n                    class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n                    <i class=\"fas fa-plus-circle mr-2\"></i>\n                    Ajouter une question\n                </button>\n            </div>\n\n            <div formArrayName=\"questions\" class=\"space-y-4\">\n                <div *ngFor=\"let question of questions.controls; let questionIndex = index\"\n                    [formGroupName]=\"questionIndex\" class=\"p-4 border rounded-md space-y-4\">\n                    <div class=\"flex justify-between items-center\">\n                        <h4 class=\"font-medium\">Question {{questionIndex + 1}}</h4>\n                        <button *ngIf=\"questions.length > 1\" type=\"button\" (click)=\"removeQuestion(questionIndex)\"\n                            class=\"text-red-500 hover:text-red-700\">\n                            <i class=\"fas fa-trash\"></i>\n                        </button>\n                    </div>\n\n                    <!-- Points and Title Fields -->\n                    <div class=\"flex gap-4\">\n                        <div class=\"space-y-2 w-3/4\">\n                            <label class=\"block text-sm font-medium text-gray-700\">Titre de la question</label>\n                            <input type=\"text\" formControlName=\"title\"\n                                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                                placeholder=\"Entrez le titre de la question\">\n                            <div *ngIf=\"questions.at(questionIndex).get('title')?.invalid && questions.at(questionIndex).get('title')?.touched\"\n                                class=\"text-red-500 text-sm\">\n                                Le titre ne peut pas être vide\n                            </div>\n                        </div>\n                        <div class=\"space-y-2 w-1/4\">\n                            <label class=\"block text-sm font-medium text-gray-700\">Points</label>\n                            <input type=\"number\" formControlName=\"points\" min=\"1\"\n                                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\">\n                            <div *ngIf=\"questions.at(questionIndex).get('points')?.invalid && questions.at(questionIndex).get('points')?.touched\"\n                                class=\"text-red-500 text-sm\">\n                                Le nombre de points doit être supérieur à 0\n                            </div>\n                        </div>\n\n                        <!-- Question Title Field -->\n                        \n                    </div>\n\n                    <!-- Answers Section -->\n                    <div class=\"space-y-4\">\n                        <div class=\"flex items-center justify-between\">\n                            <h5 class=\"font-medium\">Réponses</h5>\n                            <button type=\"button\" (click)=\"addAnswer(questionIndex)\"\n                                class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n                                <i class=\"fas fa-plus-circle mr-2\"></i>\n                                Ajouter une réponse\n                            </button>\n                        </div>\n\n                        <div formArrayName=\"answers\" class=\"space-y-2\">\n                            <div *ngFor=\"let answer of getAnswers(questionIndex).controls; let answerIndex = index\"\n                                [formGroupName]=\"answerIndex\" class=\"flex items-start space-x-4\">\n                                <div class=\"flex-1\">\n                                    <input type=\"text\" formControlName=\"text\"\n                                        class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                                        [placeholder]=\"'Réponse ' + (answerIndex + 1)\">\n                                    <div *ngIf=\"getAnswers(questionIndex).at(answerIndex).get('text')?.invalid && getAnswers(questionIndex).at(answerIndex).get('text')?.touched\"\n                                        class=\"text-red-500 text-sm\">\n                                        La réponse ne peut pas être vide\n                                    </div>\n                                </div>\n\n                                <div class=\"flex items-center h-5\">\n                                    <input type=\"checkbox\" formControlName=\"isCorrect\"\n                                        class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n                                </div>\n\n                                <button *ngIf=\"getAnswers(questionIndex).length > 2\" type=\"button\"\n                                    (click)=\"removeAnswer(questionIndex, answerIndex)\"\n                                    class=\"text-red-500 hover:text-red-700\">\n                                    <i class=\"fas fa-trash\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Submit Button -->\n        <div class=\"flex justify-end\">\n            <button type=\"submit\"\n                [disabled]=\"quizForm.invalid || isLoading\"\n                class=\"inline-flex items-center px-4 py-2.5 text-sm font-medium \n                    rounded-md shadow-sm text-white bg-primary hover:bg-blue-600 \n                    disabled:bg-primary/50  disabled:cursor-not-allowed\">\n                <i *ngIf=\"isLoading\" class=\"fa-solid fa-rotate mr-2 animate-spin\"></i>\n                {{ isLoading ? 'Création...' : 'Créer le quiz' }}\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../../../core/services/quiz.service';\nimport { Quiz } from '../../../core/models/quiz.model';\n\n@Component({\n    selector: 'app-quiz-details',\n    templateUrl: './quiz-details.component.html',\n    styleUrls: ['./quiz-details.component.scss']\n})\nexport class QuizDetailsComponent implements OnInit {\n    quiz: Quiz | null = null;\n    isLoading = true;\n\n    constructor(\n        private route: ActivatedRoute,\n        private quizService: QuizService\n    ) { }\n\n    ngOnInit(): void {\n        const quizId = Number(this.route.snapshot.paramMap.get('id'));\n        this.quizService.getQuiz(quizId).subscribe({\n            next: (quiz) => {\n                this.quiz = quiz;\n                this.isLoading = false;\n            },\n            error: (error) => {\n                console.error('Error fetching quiz:', error);\n                this.isLoading = false;\n            }\n        });\n    }\n} ","  <div class=\"max-w-4xl\">\n    <!-- Loading State -->\n    <div *ngIf=\"isLoading\" class=\"text-center py-12 bg-white rounded-2xl shadow-2xl\">\n      <div class=\"animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-indigo-600 mx-auto\"></div>\n      <p class=\"mt-6 text-gray-700 text-lg font-medium\">Loading your quiz...</p>\n    </div>\n\n    <!-- Error State -->\n    <!-- <div *ngIf=\"error\" class=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-6 rounded-r-xl shadow-md\">\n      <p class=\"font-semibold\">{{ error }}</p>\n    </div> -->\n\n    <!-- Quiz Content -->\n    <div *ngIf=\"quiz && !isLoading \" class=\" rounded-2xl  p-8 transform transition-all duration-300\">\n      <h1 class=\"text-4xl font-extrabold text-gray-900 mb-4 tracking-tight\">\n        {{ quiz.title || 'Untitled Quiz' }}\n      </h1>\n      <p class=\"text-gray-500 mb-8 italic\">\n        Created on:   {{quiz.createdAt | date:'dd MMM yyyy'}}\n      </p>\n\n      <!-- Questions -->\n      <div *ngFor=\"let question of quiz.questions; let i = index\" class=\"mb-6 p-6 bg-gray-50 rounded-xl shadow-inner hover:shadow-md transition-shadow duration-300 border\">\n        <h2 class=\"text-2xl font-semibold text-gray-800 mb-4 flex items-center\">\n          <span class=\"inline-block w-8 h-8 bg-primary text-white rounded-full flex items-center justify-center mr-3\">{{ i + 1 }}</span>\n          {{ question.title }}\n        </h2>\n        <div class=\"space-y-4\">\n          <div *ngFor=\"let answer of question.answers\"\n               class=\"p-4 rounded-lg border border-gray-200 hover:border-indigo-300 transition-colors duration-200\"\n               [class.bg-green-100]=\"answer.isCorrect\"\n               [class.border-green-400]=\"answer.isCorrect\"\n               [class.bg-gray-100]=\"!answer.isCorrect\">\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-gray-700\">{{ answer.text || 'No answer text' }}</span>\n              <span *ngIf=\"answer.isCorrect\" class=\"text-green-600 font-medium flex items-center\">\n                <svg class=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                </svg>\n                Correct\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Quiz } from 'src/app/core/models/quiz.model';\nimport { QuizService } from 'src/app/core/services/quiz.service';\n\n// interface Answer {\n//   id: number;\n//   text: string;\n//   isCorrect: boolean;\n//   questionId: number;\n//   createdAt: Date;\n//   updatedAt: Date | null;\n//   deletedAt: Date | null;\n//   enable: boolean;\n// }\n\n// interface Question {\n//   id: number;\n//   quizId: number;\n//   points: number;\n//   order: number;\n//   createdAt: Date;\n//   updatedAt: Date | null;\n//   deletedAt: Date | null;\n//   enable: boolean;\n//   answers: Answer[];\n// }\n\n// interface Quiz {\n//   id: number;\n//   title: string;\n//   createdAt: Date;\n//   updatedAt: Date | null;\n//   deletedAt: Date | null;\n//   enable: boolean;\n//   questions: Question[];\n// }\n\n@Component({\n  selector: 'app-quizs',\n  templateUrl: './quizs.component.html',\n  styleUrls: ['./quizs.component.scss']\n})\nexport class QuizsComponent implements OnInit {\n  quizzes: Quiz[] = []\n  isLoading = false\n\n  searchTerm: string = '';\n\n  constructor(\n    private quizService :QuizService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchQuizzs()\n  }\n\n  get filteredQuizzes(): Quiz[] {\n    return this.quizzes.filter(quiz => \n      quiz.title.toLowerCase().includes(this.searchTerm.toLowerCase())\n    );\n  }\n\n  fetchQuizzs(){\n    this.isLoading = true\n    this.quizService.getQuizzes().subscribe({\n      next :(quizzs)=>{\n          this.searchTerm =''\n          this.isLoading = false\n          this.quizzes = quizzs;\n      }\n    })\n  }\n\n  openCreateQuizDialog(): void {\n    // TODO: Implement dialog opening\n  }\n\n  editQuiz(quiz: Quiz): void {\n    // TODO: Implement edit functionality\n  }\n\n  deleteQuiz(quiz: Quiz): void {\n    // TODO: Implement delete functionality\n  }\n}\n","<div class=\"container mx-auto p-6\">\n    <!-- Header with Actions -->\n    <div class=\"flex justify-between items-center mb-6\">\n        <h1 class=\"text-2xl font-bold text-gray-800\">Gestion des Quiz</h1>\n        <div class=\"flex gap-3\">\n            <button (click)=\"fetchQuizzs()\" [disabled]=\"isLoading\"\n                class=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg shadow-sm text-sm font-medium hover:bg-gray-200 transition-colors flex items-center disabled:opacity-50 disabled:cursor-not-allowed\">\n                <i *ngIf=\"!isLoading\" class=\"fa-solid fa-rotate-right mr-2\"></i>\n\n                <svg *ngIf=\"isLoading\" class=\"animate-spin h-4 w-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                    viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n                    </path>\n                </svg>\n\n                {{ isLoading ? 'Actualisation...' : 'Actualiser' }}\n            </button>\n            <button [routerLink]=\"['create']\"\n                class=\"px-4 py-2 bg-primary text-white rounded-lg hover:bg-blue-600 transition-colors flex items-center gap-2\">\n                <i class=\"fas fa-plus\"></i>\n                Créer un quiz\n            </button>\n        </div>\n    </div>\n\n    <!-- Search Bar -->\n    <div class=\"mb-6\">\n        <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <i class=\"fas fa-search text-gray-400\"></i>\n            </div>\n            <input type=\"text\"\n                class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                placeholder=\"Rechercher un quiz...\" [(ngModel)]=\"searchTerm\">\n        </div>\n    </div>\n\n    <!-- Quiz Table -->\n    <div class=\"bg-white shadow rounded-lg overflow-hidden\">\n        <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full divide-y divide-gray-200\">\n                <thead class=\"bg-gray-50\">\n                    <tr>\n                        <th scope=\"col\"\n                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            ID\n                        </th>\n                        <th scope=\"col\"\n                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Titre\n                        </th>\n                        <th scope=\"col\"\n                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Questions\n                        </th>\n                        <th scope=\"col\"\n                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Date de création\n                        </th>\n                        <th scope=\"col\"\n                            class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Actions\n                        </th>\n                    </tr>\n                </thead>\n                <tbody class=\"bg-white divide-y divide-gray-200\">\n                    <tr *ngFor=\"let quiz of filteredQuizzes\" class=\"hover:bg-gray-50\">\n                        <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            {{quiz.id}}\n                        </td>\n                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                            <div class=\"text-sm font-medium text-gray-900\">{{quiz.title}}</div>\n                        </td>\n                        <td class=\"px-6 py-4 whitespace-nowrap\">\n                            <span\n                                class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n                                {{quiz.questions.length}} questions\n                            </span>\n                        </td>\n                        <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {{quiz.createdAt | date:'dd MMM yyyy'}}\n                        </td>\n                        <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                            <div class=\"flex items-center space-x-3\">\n                                <button [routerLink]=\"['/admin/quizs', quiz.id]\"\n                                    class=\"text-blue-600 hover:text-blue-900\">\n                                    <i class=\"fa-solid fa-eye\"></i>\n                                </button>\n                                <button [routerLink]=\"['/admin/quizs/edit', quiz.id]\"\n                                    class=\"text-blue-600 hover:text-blue-900\">\n                                    <i class=\"fas fa-edit\"></i>\n                                </button>\n                                <button [routerLink]=\"['/admin/quizs/comments', quiz.id]\"\n                                    class=\"text-gray-500 hover:text-gray-600\">\n                                    <i class=\"fas fa-comment-dots\"></i>\n                                </button>\n                                <button (click)=\"deleteQuiz(quiz)\" class=\"text-red-600 hover:text-red-900\">\n                                    <i class=\"fas fa-trash\"></i>\n                                </button>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"filteredQuizzes.length === 0 && !isLoading\">\n                        <td colspan=\"5\" class=\"px-6 py-4 text-center text-gray-500\">\n                            <div class=\"flex flex-col items-center justify-center py-8\">\n                                <i class=\"fas fa-file-alt text-gray-400 text-4xl mb-2\"></i>\n                                <p class=\"mt-2 text-sm font-medium text-gray-500\">Aucun quiz trouvé</p>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuizService } from '../../../core/services/quiz.service';\n\n@Component({\n  selector: 'app-update-quizs',\n  templateUrl: './update-quizs.component.html',\n  styleUrls: ['./update-quizs.component.scss']\n})\nexport class UpdateQuizsComponent implements OnInit {\n  quizForm: FormGroup;\n  isLoading = false;\n  quizId!: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private quizService: QuizService\n  ) {\n    this.quizForm = this.fb.group({\n      title: ['', [Validators.required, Validators.minLength(3)]],\n      questions: this.fb.array([])\n    });\n    const quizID = this.route.snapshot.paramMap.get('id')\n    if (quizID) {\n      this.quizId = Number.parseInt(quizID);\n    } else {\n      this.router.navigate(['404'])\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.loadQuiz();\n  }\n\n  loadQuiz(): void {\n    this.isLoading = true;\n    this.quizService.getQuiz(this.quizId).subscribe({\n      next: (quiz) => {\n        this.quizForm.patchValue(quiz);\n        quiz.questions.forEach((question: any) => {\n          const questionGroup = this.createQuestion();\n          questionGroup.patchValue(question);\n          this.questions.push(questionGroup);\n        });\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Error loading quiz:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n\n  get questions(): FormArray {\n    return this.quizForm.get('questions') as FormArray;\n  }\n\n  createQuestion(): FormGroup {\n    return this.fb.group({\n      points: [1, [Validators.required, Validators.min(1)]],\n      order: [0],\n      title: ['', [Validators.required, Validators.minLength(6)]],\n      answers: this.fb.array([])\n    });\n  }\n\n  createAnswer(): FormGroup {\n    return this.fb.group({\n      text: ['', Validators.required],\n      isCorrect: [false]\n    });\n  }\n\n  addQuestion(): void {\n    this.questions.push(this.createQuestion());\n  }\n\n  removeQuestion(index: number): void {\n    if (this.questions.length > 1) {\n      this.questions.removeAt(index);\n    }\n  }\n\n  getAnswers(questionIndex: number): FormArray {\n    return this.questions.at(questionIndex).get('answers') as FormArray;\n  }\n\n  addAnswer(questionIndex: number): void {\n    this.getAnswers(questionIndex).push(this.createAnswer());\n  }\n\n  removeAnswer(questionIndex: number, answerIndex: number): void {\n    const answers = this.getAnswers(questionIndex);\n    if (answers.length > 2) {\n      answers.removeAt(answerIndex);\n    }\n  }\n\n  onSubmit(): void {\n    if (this.quizForm.valid) {\n      this.isLoading = true;\n      this.quizService.updateQuiz(this.quizId, this.quizForm.value).subscribe({\n        next: (response) => {\n          console.log('Quiz updated successfully:', response);\n          this.isLoading = false;\n          this.router.navigate(['/admin/quizs']);\n        },\n        error: (error) => {\n          console.error('Error updating quiz:', error);\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n} ","<div class=\"max-w-4xl p-6\">\n    <form [formGroup]=\"quizForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-6\">\n        <!-- Title Field -->\n        <div class=\"space-y-2\">\n            <label class=\"block font-medium text-gray-700\">Titre du quiz</label>\n            <input type=\"text\" formControlName=\"title\"\n                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                placeholder=\"Entrez le titre du quiz\">\n            <div *ngIf=\"quizForm.get('title')?.invalid && quizForm.get('title')?.touched\" class=\"text-red-500 text-sm\">\n                Le titre doit contenir au moins 3 caractères\n            </div>\n        </div>\n\n        <!-- Questions Section -->\n        <div class=\"space-y-4\">\n            <div class=\"flex items-center justify-between\">\n                <h3 class=\"text-lg font-medium\">Questions</h3>\n                <button type=\"button\" (click)=\"addQuestion()\"\n                    class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n                    <i class=\"fas fa-plus-circle mr-2\"></i>\n                    Ajouter une question\n                </button>\n            </div>\n\n            <div formArrayName=\"questions\" class=\"space-y-4\">\n                <div *ngFor=\"let question of questions.controls; let questionIndex = index\"\n                    [formGroupName]=\"questionIndex\" class=\"p-4 border rounded-md space-y-4\">\n                    <div class=\"flex justify-between items-center\">\n                        <h4 class=\"font-medium\">Question {{questionIndex + 1}}</h4>\n                        <button *ngIf=\"questions.length > 1\" type=\"button\" (click)=\"removeQuestion(questionIndex)\"\n                            class=\"text-red-500 hover:text-red-700\">\n                            <i class=\"fas fa-trash\"></i>\n                        </button>\n                    </div>\n\n                    <!-- Points and Title Fields -->\n                    <div class=\"flex gap-4\">\n                        <div class=\"space-y-2 w-3/4\">\n                            <label class=\"block text-sm font-medium text-gray-700\">Titre de la question</label>\n                            <input type=\"text\" formControlName=\"title\"\n                                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                                placeholder=\"Entrez le titre de la question\">\n                            <div *ngIf=\"questions.at(questionIndex).get('title')?.invalid && questions.at(questionIndex).get('title')?.touched\"\n                                class=\"text-red-500 text-sm\">\n                                Le titre ne peut pas être vide\n                            </div>\n                        </div>\n                        <div class=\"space-y-2 w-1/4\">\n                            <label class=\"block text-sm font-medium text-gray-700\">Points</label>\n                            <input type=\"number\" formControlName=\"points\" min=\"1\"\n                                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\">\n                            <div *ngIf=\"questions.at(questionIndex).get('points')?.invalid && questions.at(questionIndex).get('points')?.touched\"\n                                class=\"text-red-500 text-sm\">\n                                Le nombre de points doit être supérieur à 0\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Answers Section -->\n                    <div class=\"space-y-4\">\n                        <div class=\"flex items-center justify-between\">\n                            <h5 class=\"font-medium\">Réponses</h5>\n                            <button type=\"button\" (click)=\"addAnswer(questionIndex)\"\n                                class=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n                                <i class=\"fas fa-plus-circle mr-2\"></i>\n                                Ajouter une réponse\n                            </button>\n                        </div>\n\n                        <div formArrayName=\"answers\" class=\"space-y-2\">\n                            <div *ngFor=\"let answer of getAnswers(questionIndex).controls; let answerIndex = index\"\n                                [formGroupName]=\"answerIndex\" class=\"flex items-start space-x-4\">\n                                <div class=\"flex-1\">\n                                    <input type=\"text\" formControlName=\"text\"\n                                        class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                                        [placeholder]=\"'Réponse ' + (answerIndex + 1)\">\n                                    <div *ngIf=\"getAnswers(questionIndex).at(answerIndex).get('text')?.invalid && getAnswers(questionIndex).at(answerIndex).get('text')?.touched\"\n                                        class=\"text-red-500 text-sm\">\n                                        La réponse ne peut pas être vide\n                                    </div>\n                                </div>\n\n                                <div class=\"flex items-center h-5\">\n                                    <input type=\"checkbox\" formControlName=\"isCorrect\"\n                                        class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\">\n                                </div>\n\n                                <button *ngIf=\"getAnswers(questionIndex).length > 2\" type=\"button\"\n                                    (click)=\"removeAnswer(questionIndex, answerIndex)\"\n                                    class=\"text-red-500 hover:text-red-700\">\n                                    <i class=\"fas fa-trash\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Submit Button -->\n        <div class=\"flex justify-end\">\n            <button type=\"submit\"\n                [disabled]=\"quizForm.invalid || isLoading\"\n                class=\"inline-flex items-center px-4 py-2.5 text-sm font-medium \n                    rounded-md shadow-sm text-white bg-primary hover:bg-blue-600 \n                    disabled:bg-primary/50  disabled:cursor-not-allowed\">\n                <i *ngIf=\"isLoading\" class=\"fa-solid fa-rotate mr-2 animate-spin\"></i>\n                {{ isLoading ? 'Mise à jour...' : 'Mettre à jour le quiz' }}\n            </button>\n        </div>\n    </form>\n</div> ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Session } from 'src/app/core/models/session.model';\nimport { SesssionsService } from 'src/app/core/services/sesssions.service';\nimport { SessionPopupComponent } from 'src/app/shared/components/session-popup/session-popup.component';\n\n@Component({\n  selector: 'app-session',\n  templateUrl: './session.component.html',\n  styleUrls: ['./session.component.scss']\n})\nexport class SessionComponent implements OnInit {\n  private _sessions: Session[] = [];\n  isLoading: boolean = false;\n\n  constructor(private fb: FormBuilder,\n    private sessionService: SesssionsService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.loadSessions();\n  }\n  get sessions(): Session[] {\n    return this._sessions\n      .sort((a, b) => a.startDate.getTime() - b.startDate.getTime());\n  }\n  loadSessions(): void {\n    this.isLoading = true;\n    this.sessionService.getAll().subscribe({\n      next: (sessions) => {\n        this._sessions = sessions;\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Error loading sessions:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n\n  reloadSessions(): void {\n    this.loadSessions();\n  }\n\n\n  formatDate(date: Date): string {\n    return new Intl.DateTimeFormat('fr', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    }).format(date);\n  }\n  openCreateSessionDialog(): void {\n    const dialogRef = this.dialog.open(SessionPopupComponent, {\n      width: '500px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe((result: Session) => {\n      if (result) {\n        this.sessions.push(result);\n      }\n    });\n  }\n}\n","<div class=\"animate-fade-in container mx-auto p-6\">\n    <div class=\"mb-8 flex justify-between items-center\">\n        <h1 class=\"text-3xl font-bold text-gray-800 !mb-0\">Sessions de formation</h1>\n        <div class=\"flex gap-3\">\n            <button (click)=\"reloadSessions()\" [disabled]=\"isLoading\"\n                class=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg shadow-sm text-sm font-medium hover:bg-gray-200 transition-colors flex items-center disabled:opacity-50 disabled:cursor-not-allowed\">\n                <i *ngIf=\"!isLoading\" class=\"fa-solid fa-rotate-right mr-2\"></i>\n\n                <svg *ngIf=\"isLoading\" class=\"animate-spin h-4 w-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                    viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\">\n                    </path>\n                </svg>\n\n                {{ isLoading ? 'Actualisation...' : 'Actualiser' }}\n            </button>\n            <button (click)=\"openCreateSessionDialog()\"\n                class=\"px-4 py-2 bg-primary text-white rounded-lg shadow-sm text-sm font-medium hover:bg-primary/90 transition-colors\">\n                Ajouter une session\n            </button>\n        </div>\n    </div>\n\n    <div class=\"rounded-lg border shadow-md\">\n        <table class=\"w-full\">\n            <thead>\n                <tr class=\"bg-gray-100\">\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">ID</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Nom de la session</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Formation</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Date de début</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Date de fin</th>\n                    <th class=\"py-4 px-6 text-left text-sm font-medium text-gray-700\">Statut</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let session of sessions\" class=\"border-t\">\n                    <td class=\"py-4 px-6 font-medium\">{{ session.id }}</td>\n                    <td class=\"py-4 px-6\">{{ session.title }}</td>\n                    <td class=\"py-4 px-6\">{{ session.formation.title }}</td>\n                    <td class=\"py-4 px-6\">{{ formatDate(session.startDate) }}</td>\n                    <td class=\"py-4 px-6\">{{ formatDate(session.endDate) }}</td>\n                    <td class=\"py-4 px-6\">\n                        <span class=\"flex items-center\" [ngClass]=\"{\n                                'text-green-500': session.status === 'Terminée',\n                                'text-yellow-500': session.status === 'En cours',\n                                'text-gray-500': session.status === 'Pas encore'\n                            }\">\n                            <span class=\"mr-2\" *ngIf=\"session.status === 'Terminée'\">✓</span>\n                            <span class=\"mr-2\" *ngIf=\"session.status === 'En cours'\">⟳</span>\n                            <span class=\"mr-2\" *ngIf=\"session.status === 'Pas encore'\">⏰</span>\n                            {{ session.status }}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <!-- Pagination controls\n    <div class=\"flex items-center justify-end space-x-4 py-6\">\n        <button (click)=\"previousPage()\" [disabled]=\"currentPage === 0\"\n            class=\"px-3 py-1 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\">\n            <span class=\"inline-block\">&lt;</span>\n        </button>\n        <span class=\"text-sm font-medium text-gray-700\">\n            Page {{ currentPage + 1 }} sur {{ pageCount }}\n        </span>\n        <button (click)=\"nextPage()\" [disabled]=\"currentPage >= pageCount - 1\"\n            class=\"px-3 py-1 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\">\n            <span class=\"inline-block\">&gt;</span>\n        </button>\n    </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  settingsForm!: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  initializeForm(): void {\n    this.settingsForm = this.fb.group({\n      companyName: ['SUMITOMO ELECTRIC BORDNETZE SE', Validators.required],\n      logo: [null], // For simplicity, we'll handle logo upload separately\n      emailNotifications: [true],\n      reminderDays: [7, [Validators.min(1), Validators.max(30)]],\n      defaultSessionCapacity: [15, [Validators.min(1)]],\n      mandatoryTrainingReminders: [true],\n      reportEmail: ['admin@example.com', [Validators.email, Validators.required]],\n      language: ['fr', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.settingsForm.valid) {\n      console.log('Settings saved:', this.settingsForm.value);\n      alert('Paramètres enregistrés avec succès!');\n      // Here you would typically send the data to a backend service\n    } else {\n      alert('Veuillez corriger les erreurs dans le formulaire.');\n    }\n  }\n\n  onCancel(): void {\n    this.settingsForm.reset({\n      companyName: 'SUMITOMO ELECTRIC BORDNETZE SE',\n      logo: null,\n      emailNotifications: true,\n      reminderDays: 7,\n      defaultSessionCapacity: 15,\n      mandatoryTrainingReminders: true,\n      reportEmail: 'admin@example.com',\n      language: 'fr'\n    });\n  }\n\n}\n","<div class=\"animate-fade-in container mx-auto p-6\">\n    <div class=\"flex justify-between items-center mb-8\">\n        <h1 class=\"text-3xl font-bold text-gray-800\">Paramètres</h1>\n    </div>\n\n    <div class=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n        <div class=\"px-8 py-6 border-b border-gray-200\">\n            <h2 class=\"text-xl font-semibold text-gray-800\">Configuration générale</h2>\n        </div>\n\n        <form [formGroup]=\"settingsForm\" (ngSubmit)=\"onSubmit()\" class=\"p-8\">\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-700 mb-6\">Informations de l'entreprise</h3>\n\n                    <div class=\"space-y-6\">\n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                Nom de l'entreprise\n                            </label>\n                            <input type=\"text\" formControlName=\"companyName\"\n                                class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                                placeholder=\"Entrez le nom de l'entreprise\" />\n                        </div>\n\n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                Logo de l'entreprise\n                            </label>\n                            <div class=\"flex items-center space-x-4\">\n                                <div class=\"h-20 w-20 rounded-lg bg-gray-200 flex items-center justify-center\">\n                                    <span class=\"text-gray-400\">Logo</span>\n                                    <!-- You can add image handling here if needed -->\n                                </div>\n                                <button type=\"button\"\n                                    class=\"px-4 py-2 bg-white border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors\">\n                                    Parcourir...\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h3 class=\"text-lg font-medium text-gray-700 mt-8 mb-6\">Préférences de langue</h3>\n\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                            Langue par défaut\n                        </label>\n                        <select formControlName=\"language\"\n                            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\">\n                            <option value=\"fr\">Français</option>\n                            <option value=\"en\">English</option>\n                            <option value=\"de\">Deutsch</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div>\n                    <h3 class=\"text-lg font-medium text-gray-700 mb-6\">Notifications et rappels</h3>\n\n                    <div class=\"space-y-6\">\n                        <div class=\"flex items-center\">\n                            <input type=\"checkbox\" id=\"emailNotifications\" formControlName=\"emailNotifications\"\n                                class=\"h-5 w-5 text-primary border-gray-300 rounded focus:ring-primary\" />\n                            <label for=\"emailNotifications\" class=\"ml-3 text-sm text-gray-700\">\n                                Activer les notifications par email\n                            </label>\n                        </div>\n\n                        <div class=\"flex items-center\">\n                            <input type=\"checkbox\" id=\"mandatoryTrainingReminders\"\n                                formControlName=\"mandatoryTrainingReminders\"\n                                class=\"h-5 w-5 text-primary border-gray-300 rounded focus:ring-primary\" />\n                            <label for=\"mandatoryTrainingReminders\" class=\"ml-3 text-sm text-gray-700\">\n                                Rappels pour les formations obligatoires\n                            </label>\n                        </div>\n\n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                Jours avant la formation pour envoyer un rappel\n                            </label>\n                            <input type=\"number\" formControlName=\"reminderDays\"\n                                class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                                min=\"1\" max=\"30\" />\n                        </div>\n\n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                                Email pour les rapports\n                            </label>\n                            <input type=\"email\" formControlName=\"reportEmail\"\n                                class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                                placeholder=\"Entrez l'email pour les rapports\" />\n                        </div>\n                    </div>\n\n                    <h3 class=\"text-lg font-medium text-gray-700 mt-8 mb-6\">Paramètres par défaut</h3>\n\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                            Capacité par défaut des sessions\n                        </label>\n                        <input type=\"number\" formControlName=\"defaultSessionCapacity\"\n                            class=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent\"\n                            min=\"1\" />\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mt-10 pt-6 border-t border-gray-200 flex justify-end space-x-4\">\n                <button type=\"button\" (click)=\"onCancel()\"\n                    class=\"px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 flex items-center space-x-2 transition-colors\">\n                    <span class=\"inline-block\">Annuler</span>\n                </button>\n\n                <button type=\"submit\" [disabled]=\"settingsForm.invalid\"\n                    class=\"px-4 py-2 bg-primary text-white rounded-lg shadow-sm text-sm font-medium hover:bg-primary-dark flex items-center space-x-2 transition-colors\">\n                    <span class=\"inline-block\">Enregistrer</span>\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>test works!</p>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Attachment } from '../models/formation.model';\n\n/**\n * Supported file types for attachments\n */\nexport enum FileType {\n  PDF = 'pdf',\n  DOC = 'doc',\n  DOCX = 'docx',\n  XLS = 'xls',\n  XLSX = 'xlsx',\n  PPT = 'ppt',\n  PPTX = 'pptx',\n  JPG = 'jpg',\n  JPEG = 'jpeg',\n  PNG = 'png',\n  GIF = 'gif',\n  MP4 = 'mp4',\n  AVI = 'avi',\n  MOV = 'mov',\n  ZIP = 'zip',\n  RAR = 'rar',\n  SEVENZ = '7z',\n  UNKNOWN = 'unknown'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttachmentService {\n  private apiUrl = `${environment.baseUrl}/attachment`;\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Upload a file as an attachment to a module\n   * @param moduleId The ID of the module to attach the file to\n   * @param file The file to upload\n   * @returns Observable with the created attachment\n   */\n  uploadAttachment(moduleId: number, file: File): Observable<Attachment> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<Attachment>(`${this.apiUrl}/module/${moduleId}`, formData);\n  }\n\n  /**\n   * Delete an attachment\n   * @param attachmentId The ID of the attachment to delete\n   * @returns Observable with void result\n   */\n  deleteAttachment(attachmentId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${attachmentId}`);\n  }\n\n  /**\n   * Get file icon based on file type\n   * @param fileType The type of the file\n   * @returns Path to the icon image\n   */\n  getFileIcon(fileType: string): string {\n    if (!fileType) return 'assets/icons/file.svg';\n\n    switch (fileType.toLowerCase()) {\n      // Document types\n      case FileType.PDF:\n        return 'assets/icons/pdf.svg';\n\n      // Microsoft Office - Word\n      case FileType.DOC:\n      case FileType.DOCX:\n        return 'assets/icons/doc.svg';\n\n      // Microsoft Office - Excel\n      case FileType.XLS:\n      case FileType.XLSX:\n        return 'assets/icons/xls.svg';\n\n      // Microsoft Office - PowerPoint\n      case FileType.PPT:\n      case FileType.PPTX:\n        return 'assets/icons/ppt.svg';\n\n      // Image types\n      case FileType.JPG:\n      case FileType.JPEG:\n      case FileType.PNG:\n      case FileType.GIF:\n        return 'assets/icons/image.svg';\n\n      // Video types\n      case FileType.MP4:\n      case FileType.AVI:\n      case FileType.MOV:\n        return 'assets/icons/video.svg';\n\n      // Archive types\n      case FileType.ZIP:\n      case FileType.RAR:\n      case FileType.SEVENZ:\n        return 'assets/icons/zip.svg';\n\n      // Default for unknown types\n      default:\n        return 'assets/icons/file.svg';\n    }\n  }\n\n  /**\n   * Get file icon color based on file type\n   * @param fileType The type of the file\n   * @returns Tailwind CSS color class\n   */\n  getFileIconColor(fileType: string): string {\n    if (!fileType) return 'text-gray-500';\n\n    switch (fileType.toLowerCase()) {\n      // Document types\n      case FileType.PDF:\n        return 'text-red-500';\n\n      // Microsoft Office - Word\n      case FileType.DOC:\n      case FileType.DOCX:\n        return 'text-blue-700';\n\n      // Microsoft Office - Excel\n      case FileType.XLS:\n      case FileType.XLSX:\n        return 'text-green-600';\n\n      // Microsoft Office - PowerPoint\n      case FileType.PPT:\n      case FileType.PPTX:\n        return 'text-orange-500';\n\n      // Image types\n      case FileType.JPG:\n      case FileType.JPEG:\n      case FileType.PNG:\n      case FileType.GIF:\n        return 'text-purple-500';\n\n      // Video types\n      case FileType.MP4:\n      case FileType.AVI:\n      case FileType.MOV:\n        return 'text-pink-500';\n\n      // Archive types\n      case FileType.ZIP:\n      case FileType.RAR:\n      case FileType.SEVENZ:\n        return 'text-yellow-500';\n\n      // Default for unknown types\n      default:\n        return 'text-gray-500';\n    }\n  }\n\n  /**\n   * Extract filename from URL\n   * @param url The URL of the file\n   * @returns The filename\n   */\n  getFileName(url: string): string {\n    if (!url) return '';\n\n    // Remove query parameters if any\n    const urlWithoutParams = url.split('?')[0];\n\n    // Get the last part of the URL (the filename)\n    const parts = urlWithoutParams.split('/');\n    const filename = parts[parts.length - 1];\n\n    // Decode URI components to handle special characters\n    return decodeURIComponent(filename);\n  }\n\n  /**\n   * Get file type from filename\n   * @param filename The name of the file\n   * @returns The file type\n   */\n  getFileType(filename: string): string {\n    if (!filename) return FileType.UNKNOWN;\n\n    const extension = filename.split('.').pop()?.toLowerCase() || '';\n\n    // Check if the extension matches any of the known file types\n    for (const type in FileType) {\n      if (FileType[type as keyof typeof FileType] === extension) {\n        return extension;\n      }\n    }\n\n    return FileType.UNKNOWN;\n  }\n\n  /**\n   * Get a human-readable file size\n   * @param bytes File size in bytes\n   * @returns Formatted file size (e.g., \"1.5 MB\")\n   */\n  formatFileSize(bytes: number): string {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}