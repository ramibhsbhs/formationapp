{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: \"login\",\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading = false;\n  error = '';\n  loginForm!: FormGroup;\n  inDev = !environment.production\n  fb = inject(FormBuilder)\n  router = inject(Router)\n  auth = inject(AuthService)\n\n\n  loginForms: { email: string, password: string }[] = [\n    { email: \"admin@gmail.com\", password: \"Pa$$w0rd\" },\n    { email: \"manager@gmail.com\", password: \"Pa$$w0rd\" },\n    { email: \"teamleader@gmail.com\", password: \"Pa$$w0rd\" },\n  ]\n\n  ngOnInit(): void {\n    this.initForm()\n  }\n\n\n  initForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    })\n  }\n\n  async onSubmit() {\n    this.error = '';\n    this.isLoading = true;\n    this.auth.login(this.loginForm.value).subscribe(\n      (result) => {\n        console.log(result);\n        this.isLoading = false\n        this.loginForm.reset()\n      },\n      (error) => {\n        this.error = error.error;\n        this.isLoading = false\n      }\n    )\n  }\n\n  setLogin(email: string, password: string) {\n    this.loginForm.patchValue({\n      email,\n      password\n    })\n  }\n}\n","<div class=\"min-h-screen flex flex-col items-center justify-center bg-gray-50 p-4\">\n    <div class=\"w-full max-w-md\">\n        <div class=\"mb-8 text-center\">\n            <div class=\"inline-flex items-center justify-center h-16 w-16 bg-blue-600 rounded-full mb-4\">\n                <i class=\"fas fa-solid fa-graduation-cap text-3xl text-white \"></i>\n            </div>\n            <h1 class=\" text-3xl font-bold text-gray-800\">FormationPilot</h1>\n            <p class=\"text-gray-600 mt-2\">SUMITOMO ELECTRIC BORDNETZE SE</p>\n        </div>\n\n        <div class=\"bg-white p-8 rounded-lg shadow-md\">\n            <h2 class=\"text-2xl font-bold text-gray-800 mb-6\">Connexion</h2>\n\n            <div *ngIf=\"error\" class=\"flex items-start bg-red-100 text-red-700 px-4 py-3 rounded mb-6\">\n                <svg class=\"h-5 w-5 mr-2 mt-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                        d=\"M12 9v2m0 4h.01M5.636 5.636l12.728 12.728M6.343 17.657L17.657 6.343\" />\n                </svg>\n                <span>{{ error }}</span>\n            </div>\n\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-6\">\n                <div class=\"space-y-2\">\n                    <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\n                    <div class=\"relative\">\n                        <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                            <i class=\"fa-solid fa-envelope h-5 w-5 text-gray-300\"></i>\n                        </div>\n                        <input type=\"email\" id=\"email\" formControlName=\"email\"\n                            class=\"w-full pl-10 px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300\"\n                            placeholder=\"votre.email@example.com\" required>\n                    </div>\n                </div>\n\n                <div class=\"space-y-2\">\n                    <div class=\"flex justify-between items-center\">\n                        <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Mot de passe</label>\n                        <a routerLink=\"/reset-password\" class=\"text-sm text-blue-600 hover:text-blue-400\">Mot de\n                            passe\n                            oublié ?</a>\n                    </div>\n                    <div class=\"relative\">\n                        <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                            <i class=\"fa-solid fas fa-key h-5 w-5 text-gray-300\"></i>\n                        </div>\n                        <input type=\"password\" id=\"password\" formControlName=\"password\"\n                            class=\"w-full pl-10 px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:border-blue-300\"\n                            placeholder=\"••••••••\" required>\n                    </div>\n                </div>\n\n                <button type=\"submit\" [disabled]=\"isLoading\"\n                    class=\"w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 flex items-center justify-center\">\n                    <ng-container *ngIf=\"isLoading; else notLoading\">\n                        <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\" viewBox=\"0 0 24 24\">\n                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\">\n                            </circle>\n                            <path class=\"opacity-75\" fill=\"currentColor\"\n                                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"></path>\n                        </svg>\n                        Chargement...\n                    </ng-container>\n                    <ng-template #notLoading>\n                        Se connecter\n                    </ng-template>\n                </button>\n            </form>\n        </div>\n\n        <div *ngIf=\"inDev\" class=\"mt-6 text-center\">\n            <p class=\"text-sm text-gray-600 mb-3\">Pour une démonstration, utilisez :</p>\n            <div class=\"space-y-2\">\n                <div *ngFor=\"let cred of loginForms\" class=\"flex items-center justify-center space-x-2 p-2 bg-gray-50 rounded-lg\">\n                    <span class=\"text-sm\">\n                        <span class=\"text-gray-600\">Email:</span> \n                        <strong class=\"text-gray-800\">{{cred.email}}</strong>\n                    </span>\n                    <span class=\"text-gray-400\">/</span>\n                    <span class=\"text-sm\">\n                        <span class=\"text-gray-600\">Mot de passe:</span> \n                        <strong class=\"text-gray-800\">{{cred.password}}</strong>\n                    </span>\n                    <button \n                        (click)=\"setLogin(cred.email, cred.password)\"\n                        class=\"ml-2 px-3 py-1 text-xs font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\">\n                        Utiliser\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"names":["inject","FormBuilder","Validators","Router","AuthService","environment","i0","LoginComponent","constructor","production","email","password","ngOnInit","initForm","loginForm","fb","group","required","minLength","onSubmit","error","isLoading","auth","login","value","subscribe","result","console","log","reset","setLogin","patchValue","selectors","decls","vars","consts","template","ctx","_r2"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}